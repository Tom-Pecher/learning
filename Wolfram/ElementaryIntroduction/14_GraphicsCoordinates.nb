(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1044405,      22036]
NotebookOptionsPosition[   1036116,      21899]
NotebookOutlinePosition[   1036504,      21915]
CellTagsIndexPosition[   1036461,      21912]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Lesson", "Section",
 CellChangeTimes->{{3.933044945653796*^9, 
  3.93304494744347*^9}},ExpressionUUID->"8b259311-48ae-4ecd-8dc6-\
ea5e4a506588"],

Cell["A point at coordinates:", "CodeText",
 CellChangeTimes->{{3.933044861803259*^9, 3.933044867017395*^9}, {
   3.933045003450053*^9, 3.9330450087137957`*^9}, 3.933089449790792*^9, {
   3.93317969759693*^9, 3.93317970854603*^9}, {3.933186202705182*^9, 
   3.9331862062254*^9}, {3.933187342019389*^9, 3.9331873463539677`*^9}, {
   3.933273569693528*^9, 3.933273577668787*^9}, {3.933273619983815*^9, 
   3.933273627646536*^9}, {3.933273677019211*^9, 3.933273678012903*^9}, {
   3.933275010205743*^9, 3.933275011187068*^9}, {3.933366320244493*^9, 
   3.933366326096089*^9}, {3.9337113371812773`*^9, 
   3.9337113433425198`*^9}},ExpressionUUID->"1bfd07db-0489-4d4f-b4e1-\
fd122b4004cc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Point", "[", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], "]"}], ",", 
    RowBox[{"Point", "[", 
     RowBox[{"{", 
      RowBox[{"2", ",", "0"}], "}"}], "]"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.93304484482167*^9, 3.933044849130591*^9}, {
   3.933089402847278*^9, 3.933089406134206*^9}, 3.933179692545727*^9, {
   3.933186192420826*^9, 3.933186193731662*^9}, 3.933187330721175*^9, 
   3.9332735599710417`*^9, {3.933273655543584*^9, 3.933273661826927*^9}, {
   3.933275013233555*^9, 3.933275014817527*^9}, {3.933366298160386*^9, 
   3.933366310586133*^9}, {3.9337112941838408`*^9, 3.933711319649448*^9}, 
   3.933711419664855*^9},
 CellLabel->"In[6]:=",ExpressionUUID->"f8d2a430-ab95-46ca-ba29-c508cd213514"],

Cell[BoxData[
 GraphicsBox[{PointBox[{0, 0}], PointBox[{2, 0}]}]], "Output",
 CellChangeTimes->{
  3.93304485150222*^9, 3.9330894087332487`*^9, 3.933179694325385*^9, 
   3.9331861943341017`*^9, 3.933187337754816*^9, 3.933273631013673*^9, 
   3.9332736626374598`*^9, 3.9332750158852663`*^9, {3.933366299058755*^9, 
   3.933366311390555*^9}, {3.9337112993571453`*^9, 3.9337113205876293`*^9}, 
   3.933711420125725*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"cdc1cc07-7a5a-448b-8724-a86f19698319"]
}, Open  ]],

Cell["A line connecting specified coordinates:", "CodeText",
 CellChangeTimes->{{3.933044880661512*^9, 3.9330448849037743`*^9}, {
   3.933045010762053*^9, 3.933045016167248*^9}, 3.9330894481358023`*^9, {
   3.933179717712529*^9, 3.9331797206155643`*^9}, {3.93318621665483*^9, 
   3.933186219848651*^9}, {3.933187359861453*^9, 3.933187362453854*^9}, {
   3.9332736707548428`*^9, 3.933273713175805*^9}, {3.9332750275165787`*^9, 
   3.933275028075162*^9}, {3.933366338020988*^9, 3.933366343605967*^9}, {
   3.933711382617334*^9, 
   3.933711383991535*^9}},ExpressionUUID->"e642b81f-36cc-4e82-a2f4-\
4f887c416eb6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{"Line", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "1"}], "}"}]}], "}"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9330448729199553`*^9, 3.933044876628175*^9}, {
   3.933089412535061*^9, 3.933089418428152*^9}, 3.933179714171417*^9, 
   3.93318621071139*^9, 3.933187351707911*^9, {3.9332736470384607`*^9, 
   3.933273656704566*^9}, 3.933275024572444*^9, 3.933366334552153*^9, {
   3.933711366953085*^9, 3.933711408749461*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"71383e52-7b63-4a77-aefa-e5a3fea85e72"],

Cell[BoxData[
 GraphicsBox[LineBox[{{1, 1}, {2, 1}}]]], "Output",
 CellChangeTimes->{
  3.933044877087737*^9, 3.933089419498522*^9, 3.933179715834436*^9, 
   3.933186222546289*^9, 3.9331873528203077`*^9, 3.933273729059029*^9, 
   3.933275030246523*^9, 3.933366335306332*^9, {3.933711373071892*^9, 
   3.9337114093437*^9}},
 CellLabel->"Out[5]=",ExpressionUUID->"d012dae0-efa7-4195-bc1f-c2e005e3e496"]
}, Open  ]],

Cell["A circle with center at {x, y} and radius r:", "CodeText",
 CellChangeTimes->{{3.933044880661512*^9, 3.9330448849037743`*^9}, {
  3.933045010762053*^9, 3.933045016167248*^9}, {3.933089436370775*^9, 
  3.933089446503499*^9}, {3.9331797435721292`*^9, 3.933179754788056*^9}, {
  3.9331862360282717`*^9, 3.933186237362522*^9}, {3.933187382677767*^9, 
  3.93318738662904*^9}, {3.93327372298297*^9, 3.933273723890574*^9}, {
  3.933275058413588*^9, 3.933275058839319*^9}, {3.933366354413908*^9, 
  3.933366359647533*^9}, {3.933711455774781*^9, 
  3.933711457749357*^9}},ExpressionUUID->"c74fa225-8583-4f63-8f0b-\
f521f0ce3736"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{"Circle", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}], ",", "1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9330448729199553`*^9, 3.933044876628175*^9}, {
   3.933089412535061*^9, 3.933089418428152*^9}, {3.9331797330858097`*^9, 
   3.933179738019827*^9}, 3.93318622850671*^9, 3.933187372800397*^9, 
   3.933273717824172*^9, 3.933275034586753*^9, 3.933366349896576*^9, {
   3.933711434175809*^9, 3.933711449263069*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"8b74de4e-8fbd-4edd-b60c-7aac71e8d117"],

Cell[BoxData[
 GraphicsBox[CircleBox[{0, 0}, 1]]], "Output",
 CellChangeTimes->{3.933044877087737*^9, 3.933089419498522*^9, 
  3.933179739635041*^9, 3.9331862295700817`*^9, 3.9331873736548357`*^9, 
  3.933273727390458*^9, 3.933275054132352*^9, 3.933366350725334*^9, 
  3.9337114497891407`*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"d1e3d4d1-fc1c-4c48-9ce2-3472e69be931"]
}, Open  ]],

Cell["\<\
A regular polygon with center {x, y} and n sides each s long:\
\>", "CodeText",
 CellChangeTimes->{{3.933044880661512*^9, 3.9330448849037743`*^9}, {
  3.933045010762053*^9, 3.933045016167248*^9}, {3.933089436370775*^9, 
  3.933089446503499*^9}, {3.9331797435721292`*^9, 3.933179754788056*^9}, {
  3.9331862360282717`*^9, 3.933186237362522*^9}, {3.933187382677767*^9, 
  3.93318738662904*^9}, {3.93327372298297*^9, 3.933273723890574*^9}, {
  3.933275058413588*^9, 3.933275077577236*^9}, {3.933366381303438*^9, 
  3.933366389341374*^9}, {3.9337114891421633`*^9, 
  3.9337114935415707`*^9}},ExpressionUUID->"194a5a3a-387e-48f7-a349-\
083b853bab96"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{"RegularPolygon", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}], ",", "1", ",", "5"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9332750686868362`*^9, 3.933275068687945*^9}, 
   3.9333663788886137`*^9, {3.933711500315832*^9, 3.9337115195742617`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"35914cbb-2a1b-48f8-b19a-d80706d9a87d"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[
   PolygonBox[
    NCache[{{(Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
       Rational[1, 2], 
       Rational[1, 4] (-1 - 5^Rational[1, 2])}, {(Rational[5, 8] + 
        Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2], 
       Rational[1, 4] (-1 + 5^Rational[1, 2])}, {0, 
      1}, {-(Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2],
        Rational[1, 4] (-1 + 
        5^Rational[1, 2])}, {-(Rational[5, 8] + 
         Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2], 
       Rational[1, 4] (-1 - 5^Rational[1, 2])}}, {{
      0.5877852522924731, -0.8090169943749475}, {0.9510565162951535, 
      0.30901699437494745`}, {0, 1}, {-0.9510565162951535, 
      0.30901699437494745`}, {-0.5877852522924731, -0.8090169943749475}}]],
   RegularPolygon[{0, 0}, 1, 5]]]], "Output",
 CellChangeTimes->{3.9332750696228952`*^9, 3.933366392563224*^9, 
  3.933711520341497*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"87bfec2f-ad79-4c12-beb3-e845d54782b1"]
}, Open  ]],

Cell["A polygon with the specified corners:", "CodeText",
 CellChangeTimes->{{3.933044880661512*^9, 3.9330448849037743`*^9}, {
  3.933045010762053*^9, 3.933045016167248*^9}, {3.933089436370775*^9, 
  3.933089446503499*^9}, {3.9331797435721292`*^9, 3.933179754788056*^9}, {
  3.9331862360282717`*^9, 3.933186237362522*^9}, {3.933187382677767*^9, 
  3.93318738662904*^9}, {3.93327372298297*^9, 3.933273723890574*^9}, {
  3.933275058413588*^9, 3.933275077577236*^9}, {3.933366381303438*^9, 
  3.933366389341374*^9}, {3.9337114891421633`*^9, 3.9337114935415707`*^9}, {
  3.933711550345798*^9, 
  3.933711551725379*^9}},ExpressionUUID->"2921c7f2-066e-4ca7-ad8e-\
4ce76a2248a1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{"Polygon", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}]}], "}"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9332750686868362`*^9, 3.933275068687945*^9}, 
   3.9333663788886137`*^9, {3.933711500315832*^9, 3.9337115195742617`*^9}, 
   3.933711557067803*^9},
 CellLabel->"In[9]:=",ExpressionUUID->"2651b0ed-d985-45cc-b7e5-1bd8eeae43a4"],

Cell[BoxData[
 GraphicsBox[PolygonBox[{{1, 1}, {2, 4}, {1, 2}}]]], "Output",
 CellChangeTimes->{3.9332750696228952`*^9, 3.933366392563224*^9, 
  3.933711520341497*^9, 3.933711558367441*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"e241f94e-bea7-4d63-8acc-a427b30e5df2"]
}, Open  ]],

Cell["A sphere with center at {x, y, z} and radius r:", "CodeText",
 CellChangeTimes->{{3.933044880661512*^9, 3.9330448849037743`*^9}, {
  3.933045010762053*^9, 3.933045016167248*^9}, {3.933089436370775*^9, 
  3.933089446503499*^9}, {3.9331797435721292`*^9, 3.933179754788056*^9}, {
  3.9331862360282717`*^9, 3.933186237362522*^9}, {3.933187382677767*^9, 
  3.93318738662904*^9}, {3.93327372298297*^9, 3.933273723890574*^9}, {
  3.933275058413588*^9, 3.933275077577236*^9}, {3.933366381303438*^9, 
  3.933366389341374*^9}, {3.9337114891421633`*^9, 3.9337114935415707`*^9}, {
  3.933711597118402*^9, 
  3.9337115984284697`*^9}},ExpressionUUID->"e0fc989f-c4f1-49e6-b608-\
cd2d991fb5fd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics3D", "[", 
  RowBox[{"Sphere", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", "1", ",", "2"}], "}"}], ",", "1"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9332750686868362`*^9, 3.933275068687945*^9}, 
   3.9333663788886137`*^9, {3.933711500315832*^9, 3.9337115195742617`*^9}, {
   3.933711575308902*^9, 3.9337115852418623`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"57e4eb0f-6308-4c02-adaf-af4b6592f595"],

Cell[BoxData[
 Graphics3DBox[SphereBox[{0, 1, 2}, 1]]], "Output",
 CellChangeTimes->{
  3.9332750696228952`*^9, 3.933366392563224*^9, 3.933711520341497*^9, {
   3.933711581334516*^9, 3.933711585628263*^9}},
 CellLabel->"Out[11]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJy0vQeMnEeW55lTVaRa6u5p9bQdt6PZmb2Z6TGraZKi995b0ZsiWZXee+99
mSxHL4kSJZKiRIkUJVFeVMu32rAHWBywOCw0OBywWODueIdzOId3/xcR+Zms
LErdMyfhH0wblV/E//fei/i+rNp6PGwf9BwPO04ef2R98Ljf7jgZemSdL4iH
en/PYvm9f7ZYeh56xNKH22SxTGtWcWPpfbgf/w0ODvK/lifEY/L5FeLmrBUD
AwMtq9X6JUTQDcj0uqXi5oP8fn7tXTx/D8pDj9jt9pZ63w5+3wXD+xaLm7P5
fXnV/x18Dj/+5cd65MdrqR95r/PtC6d/vIs2m+1RdGGZxU/1cK+WXn6QXyBe
fs7QwWP6z+fjv6s6af/8B2T/fLelHrqnDsnUzVzZTftQ76nD4M/F73lQdsM/
gT8J3+Hb/BJTN/+ofxp+Kz//pRpFPqRvyad3tCdA/XdXDexZQ0//3jyudzvG
9ffF0w+0f0i7J/7899RLLGcM3f399HHm94lx/q6co0fV8Il7hnlrH7DltKG/
n5gPtNMu35Nv55tfdnTJb/lSjYepy7++v5N+oL/9XrvLXtnuUC8X904Zuvyv
ph+15q4f6/1R+7198rEbykDi3pShv7/QP2I3s/2xfDu1J8DwEU3GM3b557JL
/kjGiWkb70/l2+8Zu1SfMm900aShy38zfW6MJnxEvv1uew7EEMnHvmwTzv9N
GLr8E/PcdLrx387cJX+Ce926/KPpc6M58t/J97YHQv5wfW7y7f7GDf39aPpR
Gx35V/rbtSOcrc8NtefG2OUPzEfd6ci/kW9nR2lukfGmVwsO/N+Yocvv6UfN
7zM58u/ke1tG931DH1ntY7cM/T2sf8S2I40f8R/4WRFCZQTrbQeIaR39/n2m
Q0Y1YTgtBov+ekRYNvTyzZkngXuao4+OFlUe1CdBCwujhi4fNE9C5xHOk283
hdSH9Me0sDBi6PKB+xzrAv292gTKoxJ27G8/Nmzor2/6UbeB48cWybe3nzJ2
2Z4OYT1jlzJYinyUN+SjHarLJfrbtSP8lj5L2kgMGbqUB3yjIxpYluvjrxnj
2/Ixfp3GX1N29f/cfzpWztwb96R9WNXb/3WfmVgr36YFZ0NXpiDQkE/9H9Mn
wWi99fKdpkD6bf3Davyr3v4382F2or9RHyAt4EmCzOjXZW//y/TD1KjfIt9m
ip3f0R/TqK/Jrv4n/YN1S0Hb5DtNkVP1xr3f6+jtf5S9dZY9bZvt0Idb+xwy
4pgLsqrs7b/XD7Oz8rHs1t+mMfSwPv7aSKqu/ot5/Dtt9rh8pylUqjJmh3q5
uFeRvf3n6eOv2Ww/PyVC5Pf0sdM+Yll28N/pH6dbcjnY2YeJa9XHf2s+pE5L
HZbvNMXG7+mHqSFdkr398/RD0ix1TB8J7W3f6zLWqqv/pH+wbpY63qW37+uP
aUgXZW//jextpkr6pHynKRiq0s5UdhVkb/9RP8xpllI14KPqcWNXpnJLdfVf
m8e/01J28zvFvR/Kx/zGQ8/L3v7D9PHXLOXq0pUsT8xI52RX/6R/sG7m8sp3
muLgD/VRvNfR213zYXbazC/faYqD6rOZkM7K3n41/TA1m4X0rsQ4G7oyjb/q
6gv9g3WzWUQfIC0OqhrdFFIzsrfPZW9tm3XWzTH5TlMc/EP9J2h8p2Vvn5in
oNNqSb03bfJUb6YVl+rtI/MUdDotrQ+39jlkNWxeb6Vkbz+bPgWa03L62zRy
/kifAo101dX75sPsdFpB703LrmpNYyJdDoflXfNhdjpNRBcRFNUixsR3Qvbx
tn5w0+phmQoEfdqY/Il+cJq/VFdv6B+nWylc1w9EY1l9MFPJFJe9vX6fUR/q
0pVcdJlXUNKEllszjzp3JyvTXtNS/t/oj93r6O2medQ7D1NW4+bF/J/p46/N
a1T29vJ9DlOu1sxLhj/Tx18rmVRXL04/zDZD/LIp88yJe4/Ix0x8yzhguSZ7
m6kAlnsb5qCoejOF2LB86qp+mO0CuNVm47x8mykiPtLl0FVXz91//J/o0ptY
44u1kurj0n1G/aJ+FFoc/HN97DSkZfRVL5/RXM/ovWlxUK3WTUgHZW9P3v/g
npXvNEXVv9Af06JZQPZ2YfphanBfkW8zBcG/MI+6MJfq6qz+wbolj+flO01x
8C/lYya4ZfZT204zlr0vdOlNbUmYlkQ+2duUfpjTVlcviannu3IvyrwKUh2M
33/Ub8h3tvcwxT3VmwlpWSioVX13c8lQJIC70dGVCWnV1bD+wbrli9fkO01x
8K/0n6Ah7ZG9Nc2H2ZkvbusDpL1T7gmakXbL3urTD1Mz11vybaYg+Nf6Y/c6
uqroH6ybud6R7zQttsXej0Ba9SFr6RnL3vf0Qb5n6qODalk6qpK1e9n7gXm+
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
MXSiy3jLkRbRwc4jLUabx9zJjUvEBBePdHu0V3rEIPO4+8To+zGerAC/bXUA
n2d1UNz6JlnXBHBrjZ9T1xof5OFpkOO/msff5sf4P2Jf0f9n5rgr7q3To4VW
IG02Db9pa+fb+vBrL5fn8X786OC8RTKItId/znLd8XPXSMfPw/DP2yCH/zGD
47UpaDsew7+w7XYx9Oz2QzzkizWnQxj6Jf3m4V8qhp4jiRY/ltvk0C93iFEX
TseAr5ADziZn8670irH38ajzmAun+7kJ9LYHPMQvWR3GMAtx1F4T6eObmIm1
YcuDaENQgKcE8kI8Ga571tWOlnWNbYd1tbXzNLNxJkwrLfNMmE6r/H6XmZDX
Nf4xwvmC9kzQ9JkADHPXShjmbdBheKwNA8+GgkHMxh7DbOxvz4achsUiNy45
KoJQeyrENHAQOml5WIdgGaZhmc04FZBTRpz2XKzw8EzwRLSnoVebAR78II99
iG+F2fIR3F0T5VsxTMPaOI8931oXw2Pr+Il1ETEhmKq1QcivE7LGdQMTgshk
XzGwZqC9TjCtK9WEmLaiN5kmxLRV/J0uEyKv9vtTlWN5UpaYJ2XOCsOkrFET
s94wMZvVxChE5itEFrSjFCZloUoIi7ToBB0VE3OMD4knZYmYFIucFQzRUuOs
tGeG08ByBz+93Dgp7YnhIL/Sx6F9pZ9nRCnIE2Npz8waOTPcRPnBtVGeFBb/
8LVxbhL8xLoElGRZ/oBbPLFeNAlu4gz6erxvfZRnEWrPIX7kWjGHdwEWIptD
bQmY1u/qakzTinSjaepMeyQP6y/XHpMn7Ra1pw5Lk8WIakvMUzfHEN146uau
U9O3UY9wj201TJ9iaoGBqYWKKfP06Tzx1C05oYc2nrqlg2aoltnNUC13maFa
4dWh4slbaZi8VSEzVBZBFdnWCmHWbGtj3MTxhE3MmhBPp5i1dSm8YX2an12f
IdsGIQQEbvEM7lvXC1m+yS3esSHNTcryLbwmCaE/1vp4x5Tjg60T04246UIC
s39fn2qt/lJTbdq3NU+1aWPIcE2oNt3y3Opf8FSr+oGnealhqld2ULpOp3Se
gdLHthoo3Skp1aZ6n3mqF7WnGplscedUnxSkDghSjdPcnmpOY8udglTjLLdn
mguzlX5+eqVhkoXCap5XK0Q5dQk8eYZZPTzJPH2A07aelWLx7Kb5YW2Osyy8
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
Crd7YYpMkh5doCtb5QIsg1indjAr2sFYvyNtUWOXoqWZJC0RA9dd/ZyucAat
29IQstEKjqJF//rK9C/Q0rf1sP57Cy2vjZbn22gBluMSvesiaF0ArfOgBVid
I5LbMQxaQ6A1CFr0rhbdB0vRu+JygOlxX1VIdjM97iz1Mj266F1OWXuqXZbv
q/r+0tE9sAnHJ2yz/vXYC4/JicPj8pnv//cfULkeGjc8PsLw+Kh8hlnLbLM+
H61cv7Qr11Oy5iH16umJlet/YNYuKtduKteeZ19icHxZ9mHWfirXgXGV6/Ar
r8mR374hRzHr2KuWWcffeFdOvPk+Xk2RU29j1rtTJee9aZLL8Hj6gxly5sNZ
ePWJnJ02R/KoXPkz5kvBzIV4tQivFkvRnCVSNPczKTZmLZcSNWvR53i1Usqo
XGVLVuMVZi1dIxVULjWrUs1auRGvNkv1qi14tRWvMIvKVUvlqqVy1a3fjVd7
pH7jXrzaJw2b9+MVZm09KI3bDpHD0rT9T71qMV7lSOu+XLzCrANnpA2z2jCr
HbPa1Sy86hjnVedxcqIUq8qkC7O6xnnVbbwiZ2qk52wtqRv1qlejZhU2iaOo
mbTYXrWKE7Ocpe1aqco6dEOrvFP6qFx9FaSyW8HSDa2qXtWp2gFWTiu1fWqW
uBHLXa/xZCtZ/KT3NPrEA1geKpenWROELE0ItUJGLnhoi7C0R/m+XtDygpa3
M26h1ZWw0OpOiq+byuXrSfPE9VG5fL0anSB9jkHucg5xq4++5XPp+VIfXcvn
1pzX8ADPBb7mpWf50IoH0K98fs0VDQ8IULF8wWvZqhRLyCxarbzhG+SmeEaj
NnkiTIkeA5Q7eovc1miFjOoelzt2R1xWFK0Yk1uftdyleRmlVK1ln6+TEmx3
xAGqV5eeuLasuALVrS3LinKlcnXokqHqnuGq1Uq2TRXF688sqsIPoCqo3ao2
oN3KUOW/aXesG2NUecdTdRWq6FYPoOrMt6g62abdql+OMR4eaUjIwboY3SpM
twrQrXyyo9hNt+qT9ac75fODNX+zaFOBtcllPhXm303Q6QEXEv6k4MO//REy
ZQbCX9CmHmEgRKd/eMxuU08g05OWTMRqU0/ZbeppZHrGlulZSyayBZ22PopM
6LT98Qe3KSPT87ZMtKlDtKnDtKkjtKmjv3tDjv1+MjK9JcdffweZ3pWTk9+X
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
Gh4QusTXwhSraESLVZRSFY1qrml4QEw34aOxG7ZTugkf0VYVSZhFq1Uk+RUZ
5QrBUlqtwtSqcNpEm2BaX6fDLQn1a+5p4EvlCvbrCIhfEhgYDZYNfK0fJkih
nDNvofggyzfwjTL2jQL2DSVLF9eATZgKplHA1DIHN78nvdyJYAqYiSEsrUNi
SufDTqPYPVO92pO2YPrKZWv8TtZ/ygBmYlpX1ALM4BUGr9ANez4ch5cPvLwT
G1dx3wUA08Y1QuMCr65BGlc/jSslJ8HrOHgdbYzI4bqQHKjRXfk+2VbQJRty
Wx7+/FDFg04zTLTrAR+DOjs56wc/kfnY9elPfk7R+sW4sfAxxkLbroeftN36
5biiZdv1yDO49azt1q8oWs+ZorWHorWXorWPorUfuw489xJF62XceoWihV0v
YdfLtl2/e01OYtep196QHOwybpmihV3vvCtnsSvv/SmSP8Wyq2DqNCn86GMp
Urumz5TiGZ9Iidr1yVwpnT1PyrCrnP8cyud/KhXYVbnoM6n61LKr+jPsWroS
t76Q2uWrcGu11FG01K56266GLylaazbh1mZpWrfFdmu7NG/cIS22Xa22XW22
Xe3Y1b4Tu3Ydwi3s2nNEOvceJZZdXbZd3QdP4RZ2Hc7FLew6ekZ6savXtstx
ArtOForzVBFuYVduifRhVx9FS91yUbRc2OXKw678KnFjl1vtKqzVTfWiuqx/
iVvYVdKAWY0T3PJp1K7KNvFXtZMO261OCdR0YVRtd9a/g62eDFsSbNA4bbcs
u0K4FWrReEbdCreRdj8JYFbAsgu3IhrcitCyIt2aKGhpYtmqVrayhSzOJE+0
KGJF+9ISdWn6Mat/zC2+7B2SmMY3bGdEYn70iqlesYCeDY0Fz5MLGv46YiE9
0RALXZJYWHNZw90RKlcsSuWKxbRyxahb0bgJ/1A0rpUrmrhBbmbC3cnxjpmk
cCyifSuS1kOh8CXh/tHgmcIFYbrXPwBmoBUcUMZY+cvWqhUYVL/8g1+LEz8/
nj6D29Dl08U7aGrY4DcqmUKWNcrZN/rSC3f2AZ7GqTGsOZS13n67jv1zdWys
iqXuPQgyaU3cUcu0jmWbLvbvgeyWDZm2sJtWCzOQ0cIC14Ds6lgL89LCPJeA
7CKQXQCy87Swc5LfM0wLA7FOEGtP0cIScqI5JsdA7IiOjbUB2VPuku2F3bLx
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
AGESCKoQtOAUHgpxuAwouVRYJ8OzwCwyO5d8UTKA5dUh81G+i4cXVcwbuyUe
HVhGxmDZXFqmFJurCJtDvWTLrv2ybtM2XkORlmuuliv2XVouC+lKj5MR3vYi
zdXfySCm2nyuQJXiatZwBaoUV9OYJdNcTSqu2typHK4MVfihGuxRtK4IuMpS
VUWqhn2YI72KqhJS1TMhRaSqfUQukqomQ1VlR2T/tdoCY1Xe2xDlW5V3o2lt
1efzPv3Hv89Yte4XWas23/0rZdW2X2mrdiqrfiN7aNVv7scACaseeFAO0aqH
tVXHYNXxzAD5qJyGVWd+Z6x67km58LypW7TqZWPVa9qqq2+8KNdg1fW3X5bi
tFXvaavKPnxTyj96Wypo1QJj1WfvSzWsqvnyI6ldpK2qW/IpnIJVX30uDbCq
kVatXCJNq5ZKs7GqZR2sWr8CdWuVtBmr2mnV5vVw6hs4Bau2bZKu7d/Cqc3S
vXMLnIJVu7fDKVi1dyecglX7d8MpWHVwL5yCVYcPwClYdfQQnIJVx4/AKVh1
8pgMK6e0VVZYZaVV587AKVh1QVs1aqyyXb4Ep2BV4RUZg1VjxqpxWnUdVhUX
wyhjFZyaKGOMVRWV4qisQrRVzuoapBZOwaraeu641DVAAVc9rGpoEjes0k5p
qzzNPNDqaWnnOc9WZZUqXN52hu87BKrwPCdWPkCl0p2DVe+g+HuH8NTt472l
/f0Zq0iVBAYZG57yQ2MWMmWhUfjCwMgEkZLgKOOUoI1xgZUx1C0YRZq8pIl1
C0BBJibAWEiURUIuTo0hVK2Qm4lIyIOpMeSJolqFvDFpaWiXk8fPKJhYq1iv
iq+Vi5O/nZ/3CQsGklxSwC3IU/hBlKtgaAo48ZQ6iUJ3C08rplQiM3g4gn7l
1wtKlj/Kdy/zRW8orjKJ8UJrQMXuBWo8cRX+y47TqziscelFgBYX6EC04iLL
V6+Ty2X8X8+uHmPxGlfhbzDGypbL1q18tm4W/CdD1g0VTZbmqjcwY8iazrSr
Tu+kJotcubNcNeMHagJXjTlc1dpCICuAIdGPIdGHduVFu9JcXe+xK66uKK6G
5Dy4OlPfI8cqWsf2XKlMc5V3h518rvLOgmmuNs37BFytwIS4+k7D1V13yybD
1VbD1Q7D1W5yde99mA7B1f0PYDoEVw89JEfA1dHfaq5OgKuTmenwMTkLrs49
+wSmwycz06GqVeCq8NVnpOi1Z+UquLp2G1cl81+TUnBV9oHh6mNw9ck7Urlg
PmrVe1JNrr7IclW3ZIHUL9VcNZCr5eBqxSJpSnO1Zpm0rNVctYKrNsNV+yZw
9e066QBXnYarLsNVt+GqB1z1gKtecNVruOozXPUbrgYMV4OGqyHD1XCGqyxV
I+cYzdUouBq9CK4uXQBVmqsxcDVGrooKZfxqEajSXNnBld1wNVFaimiqHOVI
RQWiuXKSqqoazVVNrbhq65B6YgWqGsQNrtzkqlFz5QFXnmbFFbESbyvTId62
TsRw1dEtPvQqXydjuOpWXLFa9HBG9JOrviFqBaeGJdDPGTHAZgWq6NKQjVaB
qjEJolUFrYwdSIygVkErC6kCqMExF62S0DjjkZCd8UpogrUqNIFaFXLwgsgQ
zAo5mSCs0mxZKBaR8kTEhd+kpaFNDu4/JIsXsUEtwMeHpZcn0ya4bRby8whr
yJ+UUCCdFB4OYiFb8DE0qdgygWNhlqsgxApGVFi1IhwOA9FZ5AbDwTFKwGI3
LfQKfUtx5YujYalQG6xzM2bNIVdzyZVFcYUpz5dSm/U1vNMHH7bHVc36TjnF
t0uJ5UyH6G4jjCELnx6OcDq8SbZM11JocYNrtuDHpmbBLOXWtK5ZPmOWcitl
3ErCrXyzGmBWvTIrqMyqhllVVm1WOc3qN2Z12ZRZl5RZ/cqso+UtY/uKqgxZ
eQdR88nKu6Zbk/WeOn6/Eg1Lk/UL2XAbWdtJ1j33yi5D1l6Sdd/9mARB1oMP
YhIEWfMelmMg6/ijWbJUuyJZz2iyLjz/pFwEWfmToCHrdZL1glx/6yUpfvv3
UvKuIet9TVb5R2+iXb0tlSCraqEh6/P3pQZk1YKsusVZshq+Allff4F29aU0
kaxVS9CulkqLIas1TdaGVdK+UZPVkUNW1zaQtX0TuAJZOzeDK5C1eyu4All7
d0jfvp3gapf0H9gNrkDWob3gCmQdOQCuQNaxQ+AKZJ04Aq5A1qnjYkW7shqy
Rs5qrkYVV8jFc2IDWTZD1tgVkFUIsoquyLghyw6y7NdBVvF1mSgpRjRZjrIy
C70q+B+UWM7KSsSIVV0trpoaxIhVVy/uOmqFNGixPBBLa6XF8ra0IUasNiUW
nmztXQV/Aay6DVZIV6/4AZYfYPl7+skVsBqQAMAK9PG9swP9LFiBASu5glYj
EkS5Cg4xKFjBYRQsaMWZbMROrqDVhITQr0I2ximhMQYdC2ZZCJZFafUn1ApM
MX4dcBV2omaFXUH8nGFXSMLukLgwSdZU1MjObTtVnVq1YpWc4q0/Ogck7Ish
PHUf9vNkV9ifkHCAYc2CWXPoFZYQa1YIToXCKvxsmDUrGJlOY8VAr+gfexWI
3ZhLr0gXhPLpcJsvfosLgPIm6FWCG1ruxHeIMHwhMkG58OGfiwMP9tiDemMe
/2Tnsqt8J+NMTs9SO/t5eEUzfSvCqqXlumHkmiVcqm71gazeNFuKrinQNWnq
FtjyZNlqgajNGFobJ8CWPYy6FZI6sFWbw1blsGartN+h2Lqq2LLKpVbN1tmG
Xjla1tyx+2J5umrlbVXlu5V3X2nt1sc/eu8nP0HVukPWZNy6K+PWNuPWTuXW
vdqt39yHqRBuPfAApkK49fBDcpRuPaLdOvn4I3Iq7dbvHpNzcOv8c8atF5/K
TIWFcKsIbl39w7NyDW5df9O49Y52q3T+q1IGt8o/eF0qlFtvoWZpt6o/e09q
Pv9AaunWIu1W/dIF0rBMu9UIt5pWwK2Vi6QZbrUYt1rp1vrlqFkrpN241WHc
6tyyXrq2are6jVs9xq3e3duUW33GrX7j1gDcGjBuDRq3hoxbw8Ytq3Fr5MxJ
mHVK1azRjFtps87L2OULMEu7NQ63xunW1UKYBbeua7cmjFuO0hKYpdxSNctZ
wRi4qnipo6u6mtcRE67aWnEDLnddvYVqFfwb8cAtTyPcatJueeGWt8W4BbN8
DNzytXeSLaDVpeDyAy1/F8NbSYMtwBMAXAGFFtKn4CJbEhxgrPBpEEULZMGc
4LCNZoGsMQmhZIVGGBSt0CiKFsiy0CtaMe6SMEpW2M730A5TrfAEJsOwAxUr
7PQX/CWtAlJMUFwYJi+duyRLFi1WVUohdewUkOqTsDcKpKIWakWi4hYaRa3Q
qcJBFf4ZQd4qJxxKIZMqofCkRWE1h1hJKKJCulSzCkVnkFmGM6VyKxibRW4w
xDt2gwt6ViCu8bqpAPMrvLBigExovCwGL4+GS+Fl4aoEm6MEm6MEq+0ckk8W
fspriRKqePHcffy7HLh+KKOxW7lwiZWJ3CRdMsQQrjB+OMiFutUfnIFd2q3e
wLSxa0pVri4v7UqZypWUthy3miYiqFxhVC64NQa3bAFULj/syneruGdcuVVo
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
wOgU0Qvmu0iSV0lHknlY4d9PCoSAKVoFmNJEWUgUXylEd/JNqvCYwyTFmqRT
HjwItqiWibq+Wn2TE4adLSrhHpW2y6J7VtosTMq6W91UUWTFbhi2ZlW3Go7M
GLa45Qa0Cv5Dhqw+cKW7VQrDX1K6biOrFWS1kKwJkGUPoFv5wRbJ8uSQZZfS
PpI1Ilc7h6UQZF1o7JbTNa0Vh65WFhiz8u5Wk29W3gXS2qyvfvTenT+R1Xlm
3fW9Zu03Zh0yZh1Nm/WYMetJbda53xmznssxy2xIqT4Fs6794RnMfs9KMc16
y5j1rjarAmZVwqyqD1+V6o9p1uvoU9qsus/fkfq0WYs/kMYlH0pTrlkrPpNW
Y1YbzGpfC7PWLZUOY1YnzOqiWd+ulO7N2qwemNVrzOrbCbN2bUKf+lYGlFlb
ZdCYNQSzhmDWMMwaNmZZjVkjxqxRY5bNmDV29hi8glnnT8IrmHXxtNhhlt2Y
NXEFKYRZRRfEAbMcxizndZhVrM1ypc0quw6vsmZpr5DqcvHCLC/NqtVm+WCW
rz5rll95lTUr0NKENFMseNUiQZgVbOe5dojFrgSzQl2dxitllupT4V6m10Kw
WCP6FVkSQZ2KDDI8dgWw8ISKgqwouELI1MgonkHRURvBgldj4sG82FZVJbs2
b9H7TNCKag3wBNgQvyc24bIQLIvEnR4sLjSquJuH2+Nuv8Q9TEDiXngV96JR
xX3cRY8Dq7ifiUg8AK/ibFTxIGe/eCiGxE3QrOJhvgwYh1PxCKyKcD8dWM2h
UXMIFH4Zn8ZHcW6dRxMzFIopUFZxUEzeIFM5YZOKpG7OIVMcDSdvId9JaJLM
YAVYkwSLH/mJU1ooC4Fip/ouF6X1m7fK3iMnclDCfxvsSbapW4RJZcywZFNt
6gZpwjcAJjQpxZKiaZo0qTY1EJoyNJGlVJYlX0I6wVIHWGrPYal5Iog2dTtL
LrDkkArDUrFiaciw1CWnq5s3HCqq+C/ZF/Iy9575t3kq5V3k/JhaP4ys+vnP
MiJtViLdrUTadc/3i3TEiHTciHTKiHQ2R6SLEOkSRLr84pNy5aWcCe/VZ7Ii
valFKnvnBSmHSBUQqfJ9I9JHWqSaBa9LLUSq+/StjEgNi96TxrRIyz6W5q8+
QYOiSJ8qkdpWQ6Q1WqQOI1InRdoIkTatkG4jUk9apO3rpW+HFqk/R6TBfVug
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
+mYl1e76joYwjw2d3EaOU9uFoeEzO4WhERNDTs2Q6yIYugSGLh8mt2bIoxny
Zhk6BYJOg6Az5L/1I/lNDAXu5hgKGgxVXKGQMIRUXYNB12GQcigChyLsUL1y
KAqHoo1ZhzB2NZfxHe/MUGsFxcGQIijLELPTWcvnfZih7nqVngZK9jTy683S
JO0HDPW2SFKKISjE0Q3Izunk9tPFAPEli+mhHtWAHBbl0LBVOSQG2digPq4v
rn6GCA7xM0IMjbj9DOFVCIaIJMNEfs4IUQAgEYNEAGkUUcgAyS0QeZRG+KUj
XsTH4S9E+Y5YiKQlEo0KcxTha4kQEpaAotGsEO+RAFAqJWGZFEC8pgZDlExL
+E8xzc1ICMpwFdLqjGJ1ePpKcvnhp7BldPNhbTh8v41uPwkzOdx+4sqb0cob
NDG2BilkcAp+q7mJCDcOcDMUDWlugllu+oN+kOMnW8BHn6xYQWevXzNx46RO
14jmZgjcDFKLcNOvuOmzUk1vD1X1dFJ5VxvdbWsGN/V0vbZy3Nnb10za1N1f
m7xnzKq99JLirVqaXRi49mLgOvCUWZonctK8/swvSnN96suQ5pU8ae7kSfMW
lUOaCkhTuWgCVS1+h6ohTc3Hk6jWkGZFTppGSNP0+Ydamtlamo+ojaX5boFI
07FucVaaLkOaLSuoB9JYtDTWHZ9Tr0jzlUjTB2nubFxFB1YvpU+gCxebb5fO
o/NF0AmFZ/Do9zR4bDMNHd8CabaSQ0szrKUZ+XEXpNkt0ji1NC6TNG6W5soR
KKOk8Zqk8Wlp/CzNbUhz5ywFIE1ASxMsvYAoaUKQJlSBVF4RacImaSK1OWmi
kCbacDsrTazpLlIKaJAW1XjirfxuIvG2Sr6CENQkOqqRGkCDdNUyNVx26gse
hDIiDZxBrLrw9DZTypCmr1VJ05+TJs2NZ6ATbUdhw21H5q17pMmM9Gal4bbD
lcfNlcfDyHgHmQiuO74hNgb/xhAGEGpjmBgI4xRl8LWQiw9ueCPCRKTvsC5R
I37KxPhv9UyM+04mHkCCEoVMAqMWbMEhyfeMpZMRFgai8E340AXUpPHKTqZj
o8WUUeZ2wz/KyM4nkzBqDf8hZ9TEdQ8zo4SZX2liEgBGRRPDp7ricqorjlIT
Z2OQGK94YrxxjhX8K4CJZnkZjoVNvASFl4FwgOzMS4h58Qkv7cN8efQsKmtt
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
+JJBfckMcvj95zNDKDAZB89LmXxg4Islawx3FxQY8vQV/A2RV4QBLXadAdgy
oFpMYFAZE+QmE+QmI8KER9gVbjERjkslKme7o+5CIeYBJgbCGPHBGCk0CR6d
kvz4L+kvAg3fZQ5mmLV0iK3JJcOJPMDSMDdR8UWKjdCCakMSrjfE579ZkwRD
YpDCq984j0XxwiwlfIYbPzcIRAI6CpQIn1iK4E/ay5aIJyF4EhJPXLAEnhTw
29AHCv4TPPGjsrAnPnjihSceeOKGJy544oQnI/BkGJ444MkQPBmkLucA6koJ
zV+4gFoHe+FJDzXYOqnO2g5PWqiys4nK2+qpuObuivO3LhY8rMDIO5Odb0ne
iSR1M9Xc3Zse+R0c+TPtf8rsyGN06pUnlCNvPA1Hnsl3ZDIcee9FKp72Et2c
/rJ25FU48tr/2JFlOUeufzyFdsx7j5Z+MBV2TBVDTnw8HTXlQ2pbO4vav4Yh
386lTjjStW6+dmSROGL5filGIOVI7w/LtSMrybZTOdK/+3OTI2vEkUFx5FuT
I+vhyIZ8R07DkTNbUVHgyFk4cg6O/MSO7PqZI74rcOTqQfKbHAmII8fgyHEY
Aktun6TQ7VNwBJaUnKHw3R/hyFlxJGJyJJp15BLFqi/DkCswRDkSNxxpKKaE
OII03WJJ2BE2pYVHoSQcSeYcgSKcCkp18igESfii3u5qSsORNHpK2oJY6xCM
QuneBrzK03Ak3dek0q97il1ZkmFHBjntTEgHE9IphHQpRka6FSNODncVFzvi
5r0ueWzsCBThvS4swcFn544yIB0lzxDVU0K/xIgznxGZg9xsiVFZ4l45aSSS
6HB1ScpBBqNUwACFM4o14U9nHZEUMiijGZRRWVD0qJQmCV9VoyyBFgl1uAeU
GIMSy4IS5W7CtURpEoEmEdYEmISFEm8ylKXEDUYUJQFyopaMxPyaEh/qiY+G
fpESB1k9Q6BkEJQMgBI7dY7009bdO2jVF6upqb8blHRQnaWNqrubUVkaqLS5
2nut4uZvuZaYKKH7U5L3dFJFyYL/WjTmv9Gux/8ISsaAkofpyPNj6ThT8jJT
8qSi5C1Q8vazdOmd5+jKuzlKbmQpeSVLSelfoKRsyTt0fuG7tH3uZFo64z1M
M1OpaM57dInv8141jVq+mE6tX86gtjUfUvvamaBktqbkI6Gke/0C6hFKFgsl
1i0fmyj5VCjp27kqS4l9zxdCycB+pmStUDIklHxHDk3J8HFQcmIjGAElpzaj
jihKXD/+AEq2oY4oSjxCyW7yXtwjlPg0JX6m5JqiJGCiJKgpCTEldxQlYRMl
EaakXFESFUqQqosUu4eSuImSRAOnWChJgpJk823kDiVbkNYSgxKuIu18fW8K
lKQ6hRJAgnRXUVpRwp3DUsudQ1ECSRBbg7ZEPOHv6ZdeAksyA3mWgBKO9BIH
95JhfvLEPZjAEo6VOSFy93Ir4Wri7WNI+rmfoJOQ3646SWBAeRIcNHticDLM
r/XwCBgZMUjhzQovWWKy0GVK4kZQShJeKSS80E36pZAEtCEBKSQyCaWDupRI
HsgKwngII3rmARxRwaOQjw+wIDztxLiNxBgPfpgyfxQVYKAHBpwYAIlysohE
5FoXA5AwA8KPRg7hD9mTCMKPoPYjoP3wsx/4hw5HfQX/BD+88MMDP9zwwwU/
nPBjBH4M38ePfuoY7qO2oV7xY/+JI9TQ2061lhaq7mqiirY6ul1fdvry3Wtj
c+d4slvXv8+jI+9pogqQVXVbH/0d7X9yDB185iGw8Qgdf+FROvny43Tmvmw8
DzbGgY0XfsbGXYONj3JslCx4m87Oe4c2zppEH06bKlwwG9eXTKIqtJCmlZOp
+bP3qHk1s/G+ZuMDYaPj61lgY45mY55mY6FmY4mw0bt1mbBhEzZWCBv9uz4D
G6s1G18KG4PCxtcmNopo+JhiY0TY2ETOU98LGy7NhlvY2E4ezYZXs+G7tBds
7CO/iY3A9RwbwfuwES7JsRHJsnEOZPyEnBc2YsxGtWIjDjbizEYd5xol6q8r
NhqLKWlmo+V2jo021UBS7UhHWY6NrgphI81s9OgGYqnJNZBeDrcQWwNfysFq
9OsGYm+mjJ0fqw43eIfAaogY7SJGhzSQTtVCRroUHE5ODzcQriFuqzSQXtVC
vLaCHBzcQOzSQO6jRoinGakhYblsN0uGZiPqlAbikgLCvcMzKmcFkJAUSPOQ
0uE30OBw6VBuwItMNqPZjVHsRmG2eeAjio5mN1gQumeUyeHBp5dj3Dxi3Dyi
3Dyi3Dyi/P6r4COUiWCaiTAeQkcAfUfRESIfeoc3GeT3Nw4W/DPoCAgdLrCh
6PDRCGrHcNQLOjygw02DIRfocIKOEdAxDDocoGMIdAyCjgHQYaeukT7qcPRS
26CFartbaOkny+j05Z+otqeZqjobqKylmoqrb485V3yuYGwOiOzTHvLtyGNF
l4+JRQ//N9rzxJ9kE3L4uUfo2Atj6eRLj9GZV5+gs68/BTuehh3PiB2X8+x4
EXa8BDtezrPj1tw36ejst+nT6ZNp3vvv0YoZk+mH2e/SlYXvUN2yd6j+k4nU
sPxdalxh2DGFWlZPpVaxYzq1fcV2fCh2dH47m7q+m6vtmE89GxaSZdMibcdS
bccnYkffDrZjpdhhFzs+pwGx4yuxY0js+IYcbMdRtmMdjWg7nNoO1+nNYoc7
z44dsGPnfezYDzsOUODaQbgBP24cpuCNI7ADftw8RqFbx2HHCQrfOQk3lB+R
u2dgB/woO0tRkx2xnB34j7DmcsH/CjquCB2J+hwdSaajyaDjFqVARwp0pEBH
qo1z9x46yoWOtKKD/8bs4ctwhQ5rLWU4oCODxpFB48j0cRrxeulvwt+DGUUH
4EAGWzUdbTk6uGx0StnIcwNs9KjC4baibFi5bHDj8HLj8PE9RZADZPQLHnzu
hretQbk4Rbmh2kZY04HvjwwbdMhJHF66xmTpypNL3J2rGwk5r5PgpWvSJ+dw
/FoO0YMXrHLgq1IoEzTY4H8LjQcfeNmKfxjc4DAbOD7AgvDEIjc9ykW1fHGt
PA9LjnEeWngJQnwfUoyio/IYiXD34F+Z/QjCDvhRwA/aCxX8Fn4E2Q/yJgIg
JKAB8WtAfBoQLw1H/hIgQ9QLPKzAwwI8utE7OodtAMQKQHqopb+LShoraeas
mXSltJgq22vpblP56Wvl1x9VQOSdCNZ2PKC+lPekTvWQqtnWbY/9ng7oceXo
uLF04sVH6fQrj8ONJ+mnNw03noUbz+XcmAo33ocbM16msx+8Tt/PmECL359M
H02bImbsmvUO3V0wnqoXjaeaJW9T7dIJf8GN9+DGNGqDG+1fzdBuzNRuzKHu
dR9pNxaIG9bvF2s3PiabuLFc3OgXN1bl3Nj3BQ2KG2vgxlrtxrc0nHVjPdzY
cI8bW+DGVnHDo93wihu7yHdxt7jh124ETG4E2Y1i5UZIuxE2uRG5m3MjanIj
Vmm4cYHi1RfBxiWmgxKAI2GCIylwIE3FlGq+iQgc/Jdf652Cv1NwtCs40oAj
3ckpBxqAo9voHFWUsVQjNYWsRsHfKzds9SrKDbCB2JsUHAPN98IhaLRL3+hQ
nWOkU9nh5HRz3+DS4bZI37CqzuHtLcjZwX2jX/oGJpWAXXWO4IDqHCG+9kRK
R9gBvkCHGQ6wwUHviEnviMmltHGX9kP2IIYeYEMi5UMYSflMjPBmNS2bVR5a
RJEgY5QJMSphwSMsgCCKkgeygoxiQQQQdoPfa4F5gBb8njfyv0juf5mIXNYW
kQYSFjWUHCF2AwlqOQKGHIWgw1/wnwGHT+BwxrwaDg85gMYQ0BgEGgNAox9o
9KF12Lw5OHpc/dQ9YgMcvdQ+ZKG2gW5q7u+gxt42unDzMs2bP4/KW6rodl3J
mIt3Lgoc8qYHv8njIu/pmoqLxRM3PPzvtO/JP9EhjClHeUwBF6cwpvz42hPg
4im6MB5cTAAXE8HFpOfp+pRxdGTqq7Rx2nhaNG0yfTj1PVr9/rt0ZOZ4uj33
DaqY9wZVLniTqha+dX8uPr0fF1PBxfvCRcfaDzQXszQXc6ln/TzNxULhonfz
Es3FMuoTLj41cfEZDWS5+JKGNBeOQ19jPGEuvqORY0XChVO42EguzYVbc+E5
+wO42EZezYUvy8UecAEyruwDF/uFi6CJi9DNn3MRMbgoPUNRExcx4QKpOk9x
ExeJ2nwukg2c68JFKp8LYHGb0q13KA0u0uAiLVyUmrkoZC8K/oEyOS2ABdKr
a4atLsdFf8PPuRhUXNAQpw2vPUc7DsM8ohCoIFBBTk43kYsDLcht4X7BJcMr
m1KfjaGQoiFacL/gTWlQrhtRTqiOEdZUcL9waCqGZSSRhamiQoeZkIWphsLN
WAgY3DG4bqTkrAv7kJYUFBpIZAJZJLhmBLlh8KleWXBQ+AH2YTR3DdUz9IJD
DSv3csGXpEnFkL0Gh0sG+6C9YC2QsHgREi9CFEhxguwFv0dmABOKN+EHFwhK
hjvu0154yRllLzzwwg0vXPDCCS9G4MUwvHDAiyF4MQgvBuCFnXqcfZhSeqnT
YaF2lIxWexc197XDi1aq62mi3Yf20PKVy4uLq4oLHsudlD19/5aR9xBMNad8
aN39OFrG02PoyHMP03FMJ6f0dHLujSdlOjk34Xk68O7L9PWU8TR36mRaOHUS
fTvtbToz/TW6/iFPJq9iMnmNyue+rsiY//+HjGkgY7qQ0fn1h9QlZMzWZHxE
lg3zNRmLNBlLNRmfUL+QsYLsu1ZqMlbTYJaMr7JkDB/5xkTGOiHDJWRsIvfp
78HFFnBhJmM7yNgBMnYKGX5NRkCTEbx2AGSAjRuHKFR8GFyAjVtHKXzrGMg4
TpE7J0AG2Lh7ClycBhdgo+xHipWfBRnnhIy4iYyEQUbdZUrWXaFk/VVFRuN1
SuXIAAMtt3hXyWK0mcTouGuIwU2gq7zgQcp0V4CLyhwZ1uqfk9GXI4NABoEM
GuA04/Uz2MKvQCUGwGjLolHIZrAc+WIAjJ58NLhYcLvw90mxwFQS6FflImhX
5SLE84m0CyEj4pDLPcBF1AiaRWxEWoVTSgVf6cErDe2DxygUOStGm61gKQSK
0VkfpDaEdJHgOcGQgptEhGmIFEifYB+yScrokaQIn0rhN5njj2IiC/eKKH61
iPxqEcYHTBT8LZAIaSSCGokAG4H4TUr4WAn8RFfMy+9uCiFGIMRwxAUlnHlK
2P1DUGIQSgxACTtGkX4oYaOuYSt1DPVAiS4o0UHNtjZqsDZTbVc9VbRW0uov
V++ePWe2oUTelWH5SuQ9P04pMWfO5rH/nfY99Sc6/OxDdGzcI3TypUfp+KtP
0rbxL9LqSW/RB+9NoY+nTKR1U96kE1NexhzyAuaQF+nWjJfozocvQ4lXqHT2
q1Q29zUo8TqUeANKvAkl3vqfUqINSrSLEu9DiRlaiZlKiaI5Wol5UGKBVmIx
2USJj7USy7NKDOxeRQN7WYnPaUgr4Ti4JqvEyNFvRQmnKLEeQkCJ01DiDCux
GUJAinM/QAilhE8r4b+4C0pAist7fqZEyKREmJW4na9E1KRErDynRNxQovoC
JUQJpPYShMgpkYISKVaiSSmRbkZaboKIWwYTEKGdT8JmoESmsxQpgxFId7mh
BKthqeLXHpSg3hqklsjGqeMXSF99wa8hBJSwN6ooJRgJ8MBp5VLBzWK4XUpF
hyoWzk7FhIvTzaWCm4VH5hCvlZGAETKHaCm4VHCzCNqlVIgRqliEFRPSKbhK
yOZT+aCDOhGXCSTukibBqwqZO5iHlETOiogRaZ/JCD/LEHhAmsRotbqgbBgH
Xl5oIXjfGeHyEBEPuDxEZEchF5TChLDsKPhqM1YhirYQUWEX+DSIciFIQXEh
IC74YQJcwE/1JnwF/7t2wcsqIB644IYLLhqGCcqFEbgwDBcc+S64++GCDZNG
L3WhOXQMdWPS6KTW/nZqsrVSvaWRqttrqKypzHqt7EqdvqdOrynyLtLIpyHv
7jtFwzy54GvPE3+gnc8/St+88SLNmzSRZk+ZREsmTaAN77xKJyY8R5ffeRYz
x3N0bcrzoGFcjoYPXqaSmX+JhvGg4W3QMAE0vEMNyydS04p3qXnlJGoBDa0m
GjqEhumg4QOhofu7WZqGuUKDddN80LBQ07CE+oSGZUKDfeenWRoG936mafgi
S8Pw4bUmGr4TGlxCwwaUB0WDR9PgPbcVLICH89vAwvY8GgJCw14KXt0HGvZT
6PqBLA1hEw2RO4qGqImGmEFDxVmKZ2n4CSycBwsXhIakQUP9FUplaUCarlMa
PBg0ZEBDBjRk2pD2O6wD28AGdJayE9oGgg2EBkEWThXbwK+e3hq2QNkAGZD+
em1Dg2EDt4dmZkDRABlaVYMY5nCLGOEW4ezkF5uiATJ0Z3Xg9sAVwscVwm+T
9oDBI9CnGkSwXzWIEE8fUiHEhsiQtAcMHFFHrkHEZPCI8SWlcd5uJlzGmJGU
yCZCykTKYyjB4R2EggJAZLIRKGTDKT0iaCChWsVfMRWF+WWiMEuFbDfD8EIi
ZoQVFb/SVIQkESQsCfJTaoMF/yeoCAgVAVQbRYWPfAkfYwEqvJoKD7nAhDPq
AhVORQWYGAoNgwoHqBgCFYPU7xsgG+qD1d1HFmcvdQ9bMGT0UAfqQxvqQ0tf
GzX1NlNdVx1Voj6UNpTMKa66atjA9UFzkfdwgL/L4yLvjIiaOlbx6oIXGtYZ
kyfRjCmT6eMJb9KGN16gY688Tj+++jj9hLnjwvin6NI7z9CVd0HGZJDxHsiY
9gLdmv4iyHgpn4yPXgMZr4OMN0DGm1SzWJPx8QRqABmNeWRMBhlTQMZ7IGMq
yJhGnULGDJDxoZDRUzRbk/ERWTfOp97vF4CMRZqMpdQvZHwiZAzsWmEiY7WQ
4TjwJcj4SsgYOfK1kOEUMopMZGwEGZtAxvd5ZPg0Gf6LO8DFTgpc2vULZByk
cPEhkAE2bh2hyO2j4OIYRcFGtARs3D1JsdJTIANslJ8BFz+CC7BReY4SJjKS
tTkyUkxGA+cqpUFGmsloVmRkDDLabuXI6CghQp2gTqSrFCkDFyCjh1OhyLBW
6TqhKwWT0cepK2Qz+LWaFQMZbBI0ChkNfsHnkwEx2rNqFDIafGWFIgNicCxA
w6JahY+DZuHncK8IyASSb4dqFmHFB7cKnkCiMoEoN3LNIi4TSJwnkARXi6Ss
Knj4EDPk2q6UXNuV9upmIRmdFUPWEwIGt4nQXysnMuog99WhPqRhQErqA45i
RWEOCiQEK0JSLkL8RMcQDxvcV+AEM4EEGAp+50V/wb/BCZ92wgsnvMoJNiLm
hhMucsKIkTA7MQInhmkIRgyiTgzACDuM6PPa4UQfWVEnekascKKHOoe6qB11
os3eDidaqQF1oqajmiqaS6136249WFx8ml/q/Eo3cNBnT/Oela+tGJ1rHZR/
/ec0/hx/e5F+wJpVXyM6Zs7412nX03+mQ8+OoeOYRk5hGvnx1cfo3OtP0Pm3
YMeEp+nKxGdhx3P3seNl2PEKlc15lcoNOxYoO2oXv0V1S8dT/cdvw44JsOMd
2DERdrybs+Nzsx3vUxfb8c0HsGOm2GFZP0fbMU/ssG1eSLYti7UdH2s7losd
g3tWih1DYsfnYsew2LFG2/GN2OESO9aR+9R6scOj7fCe3Qw7tpDvp60/t+My
7Liym4JX9sCOvRTSdoRNdkTMdpQoO2ImO+ImOxImO5I1F3gQrr3IF1/VXYId
l8WOdL4dXCda+D1dM603iWAHwQ5qxzRCHSX82s2jo+weOjQfvdX4dltNwYOG
HIBDFw6mY6DBTAfgaFaNg+kYblV0jHC4cTjZDpfsLdxdig5Pt6LDy+HS4eN3
7DDJATJsqnYEeTAJ8mAipUPUiAxK3xiCF0O6cyAxeZxajK/nisv9cnGMJQkj
vL9IysEtlcNtEMLhyiEXabAeGYmc/PDLBkMaRkB3Dll4UvCvsqVjtMIkzXCk
xAyuGkmYkRAzEmxGnA9aj6Dowe8PFCj4V02HXxKAGX6J12SHB3YoN1xRp7Zj
hIbhhiPk0HYMmezoJ5vbRlanFXZYMIp0U+dgJ+xoxyjSSs22ZqrvrqOqtgoq
a7gz53bV9YJRSgO+fDN7Z8kj6nN5p0/z8ch7zKK6a/+vGI9xeuHp1TeqrDDu
7lf/mJm71fLzT3T0+Yfo5Itj6cwrj9HZ1x+n828+SRfffpouT3yGrk1iRJ6n
4mnj8hGZZUJknhmRN38ZkVWTgMhkIDIFiLxnQmQ6dQsiHwKRWYKIdcNcjch8
jcgiILJEELHvWKYR+VQjskoQcQgiX9DwIQORteQURL4FIt8pRE4yIhuAyMb7
IPID+S9sAyLbUT4UIkFG5CoQucaI7AMi+4EIICk+SBETIlGNSOxuDpG4CZEE
I1J1jpJAJFmN1ACS2gsA5GIWkTQj0qgQyQCRTDPScoMZMRDh/+jbbxf8Bobc
YUe0IlqSPEUqzIoAEU4NrzJqZZVhKFJvUkRLMsTLT0cLrzJaZZXRpsqHk9MB
QzjcQdxdPKx0yyqjR5UPn0VWGTy7+Hl2CXD5EDtC/XLvrJ3tUIkoQ7h0DMm1
F4KHMbDE5eqMOMpHgiNrjQQXkKRLFp9ujYcAwidE5CB6ZLxZPbh2qBYia42A
FkTyKwbk1wwI7zb4Bn8NiLSREBSRiCQhAUROkYSQoCTGfGhIAviTgiSIH5b4
tSU+tqSQISn4z6DEQ14w4om7QYmL3GDEFWFKRkDJMChxkCPIlAyBkkFQMgBK
7NSHCtLr6gUlFuoZ7qYuVJCOwQ5qt7dRa18LNVkaqLajiiqbS4tL62/K/FHI
r3yxQ86g/n2eGAxM9lTIhJwYc0xVI08MdZHXnAd3jxlDe5/8Ax1G9TjxwiN0
+uVH6exrGFvefELGlsvvPE1XJz1L16cYYrwAMV6kkg9fghgvQ4xXqHzuqxDj
NYjxOlVjbFFivAUxxkOMtyHGBGr69B2IMfE+YkylzjWGGDO0GDPJsm62FuMj
LcYC6hMxFkOMpWTfvowGdn6ixVhBQyLGZyLGsIjxJY1kxfgaYnwjYrhPFEGM
deTRYnh/3AQxviffuc0ihj9PjB0QYyfEgBpXd0MLiHF9H7RQYkREjEMQ4zBF
bx+BGFCj5Bi0gBqlJyheehJiQI3y05SoOAMxoEbVWWhxTsRIQYyUIUb9JUpn
xUCarkKMa/cRA2m/xWawGHgxdJbwK5rB6DbA0GhYKgpZDMaht8rwAlzUqOrB
YNg59YUsBl8EkfUCcTQzGRCjRdTgBQfvQp3tsuAQMOBFZ9YMXnDwqsPHrcMv
V4Fy4whw5CpQbQZXDbtccSFgsBcq0UHVOmLybLOYQ4kx2iSGqMFFQw6CRspl
QoO3o2nZjvLMImbIBJPhi8kzfEcK8ehCAa4Xwb+WHYdAASdCRtgLfisfgwkk
CCnkXekpyIWDL98AFEgAVgSYCoT3nKBCngbtoxCgABb4XABS/G/wwqO1cJOH
pYg5tRYj5IQUI2GH1mKIhiDFYGAAWtip39tHfSgdvS4rWUZ6qMfRBS06qAOl
ow2lo8XWRA3dtVTdVk4VTSVjissuGhdw8us+e9/I/e5+zS8dK8x3rKl3eP8r
Y7vBv5RX/1T+JWVB8jfyPUt3737id3TwmT/RsXEP0emXxsrk8tMbj9OFt55U
k8u7z4CP56h46vN0633wMUPxcZf5mK34qGA+5is+apiPJZqPZffy8S74mAQ+
Jpv4mJblo+e7DzQfs8DHHOoVPuZpPhZSv/CxBHx8LHwM7lpOg7uZj5XkED5W
Y2L5XPPxFTmPrBE+XMLHt+DjO8UHJhfPmQ338LEFfICQCz9QQPMR1HyEhI89
4GMv6AAhxTk+oiY+YpqPOPNRpvhImPhIaj5SNfl8pOs5IKTh8n340IS0Ft/D
B9J5hwXRfmhD2A9LuS4cSG8lA8JjS7WMLfCjv1ZF+QE+dOlgQIYa7wcI+GjN
EsJjSwe7pPwAH11qdPF2q+Lh68lCwpWjV1YdmFuCHMwuIU4/XrmKk0JdPaIy
vihEdNA+4g7VPnjVMSJ8yKrDpfWQKzVSci9K2s2A5JLxqPLxgDSP0WphStlw
3Qj8Oju0FGb54GeYQI1ULrwsDYog0jgCFAcaMRVuHLzciKBkhGEHJ2eIl4IY
WgLww59gQ9wwxAVDlB/u6AgMGYYhDhoJsSFDMGQQhgzQIPwY8PVTv8eGwcVK
vWgbFrSNbkcnBpd26rC3om00U7O1nuo6q6iq5W5RaV2x6Z0ljN2owUfehVr5
fOSdS3lNjr82Fh5mQor0L8lfUx1msZSQfU/9gY4892eMLY/Qj688Sud4bHnr
Cbr09lN0hceWyc/K2HLr/XH3EeQVCPIqBHkNgrxONYvegCBvQpC3IMh4CPI2
BJkAQd6BIBNzgnwxxSTI+1lBLEUfakFmQ5C5ZNvEgszXgiwiuwiyFIIs04J8
qgVZRcNakJFDX5gEWQtBvjYJUgRB1pFXBNlIvrObRBC/FiQggmyj4KXtEGRH
niBhLUikeD/0OAA9DiKHRJCYFiRuEiRRnhMkmSeIVqQWitRBkZ8JohVpvqYE
aVWCZEQQrUieICX3CKIVsXIL6a3kl5dNtxARRBThl569jtsACzLYoJIVRBTh
7xluKfhHQxAA0qZGF1e7aiKsiKdTKeLtulcRvFA5VrxWraqPBOXsbJAHmRCX
krAMMmEMMhG76iRRpQnfbMIr1DiXkQTvPxJyTXlyhBUxJEm5jL1H2ghPLhkP
s8EnXTJytRf5DDfkR342I/D3rAfDwY+U549gBT+NAGokoQQnwVooMfg5zfyW
8PAC8UEMFYiB31Eo5S34Zy2GR4vhJh+08MadWowRckMLV8ShxRiiYWjhCA5A
DDvE6Cc7Gke/p5dsLgtZR7ohRhd1o3F0DrRRe38LtfQ2UGN3DdW2lXurmkse
LK4rNt4Ti1/XXuMkyZh8Ru5DRt75lJdzQwuTYaw56vQ7cIlC/yDfM3ei0TiO
o3GceXksBpbH6DwGlotvPykDy7VJz8CK5+gmBpbbM16AFS/S3ZkvwYqXlRUf
3ceKpb9gxWfvmqx4z2TFdOr5VllhXTdTWzEHVnxEfWLFAm3FYm3Fx7DiExoS
K1ZoKz7DsGJY8SWs+Ipc2gr38W9gxbfkyVqxHlZs0FZ8DyvgxfktP7MidGUn
rNhF4Wu7YcWen1tx+xDFbh+GFfCi5CisgBelxylRdgJOwIuKU5SsOA0r4EUV
vKg++wtWIA3wovHyfazQXrQV32OF9qKLnwQPLfiF31NqtgJU6MZhq5LLNKr5
e/p15bDryiFYCBhycqWx4K8VFsPNKiMtCgtnq8LCxeH7UMjNK1NPpyw4tBS+
bllw8Ozi58oR4MoRlMtDQzZdNeTy0HA/n1LhshGVy0N5YIkNGl1DmJDzsA62
gqOoYPkYi5QRlI60nLFNu7lSeEbLnDJKbThECdlykI/Pq/h5TAnwIcjrjKBs
MoJIAFTIW5FSgMtFQJ4RBi1AQ1wnJusSQFHwr5oKL6hAQEQo5QEVHk2FG1S4
QIWTvDGmAkxEh0GFg1xhpmIIVAyCigFygIkhMDHg6wMVvRhOrGRz9oCKLgwn
HdQ92Ead9hZqszVSs6WO6jsrqaa1dMWtiot6Ysh/gxnNRN5p17/NY4LMX3oh
f7dRrK/7yttt/JMaYer260pxCpXi7KuPqqFkPBPxFF2VoeRZEPE83Z4OIj5Q
RJQyEXMUEZVMxAIm4nWqXfIGiHgTRLxFjZ+Mp+ZP36aWFROoddU71CZETDIR
MZW61hpEzDARMctExDxFxNaFQsTA9iWaiGUgYjk5hIiVQsTIgdUg4nNyZolY
AyLWmoj4DkQUkff0evIJERvJr4kICBFbKXjxBxCxjUL3ISJyYy+I2EfRm/uF
iBgTcUcREddEJP4CEanqs/zfYc05fuRFLZioOw8eLoCHLBGFbETBbyAElGi5
9nMhOji3lBBdd3SbQHrushCFTATPANZyMxDggcNnVPpr+AQM+zBQpzKoC8WQ
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
zi/YBtZrG3ibPGgDyga2pmzAl70DNvAu+dkGUP4D5/bABt4z2cB+2MAHKRsY
zrCBQ7CBwxTJ+xSjrCB6E1ZQACso/Ao2cMRkA8cpDiuIl52ADcAKKmAFlbCC
qlOwAViBBVZQfRY2cG4MG9BW0HhlDBvQVtCWa7IBTKeuA9ZCeeC7KAtC7y42
bAAugOkr0z6gvSDlA1WGD8AGpA7I6l/LPUAOBZULAKEGVQc8PFz/vVz/h7gM
+LgMwAF47W/XJUCOA4Nc/0Nyu7Tin0feKyUHg9wERnh6ebj98yIQlUWAlwDB
XxYBtAE++bPpNoBJ8FaQ4K0gqdqAWgY0+S7+b66p/6G6ogjq+Tqih8n3MPDu
rB8y8RgXmFcT0byPxJl5B+Jf8R4C60E+jAhEbFl/CuQHgPwAkO8nL3D3AHc3
cHcFupH+VrID90HgbgPu/e5WIN8C5Jup296I9K9F+luopauCGjtKqb61eGdJ
+bmsP02znerz/5TO99Tlwu9n8M5cp5rCP6a3fWNbuOVpqr+X35mWfeKxX1P2
E/9CZ6f8VmX+jAek9ufOeVjX/sdQ+ydSsc78MmR+xfInqQq137JyCkB/mmpX
a9DXaNDXpUFvAeitAvqLAH0mQJ8N0OeQFZkvoCPzBXRkft++xdSHzO//cClA
XwbQXwPoKwR0+6FVGvQ3ySmgrwXogP3IBoC+UYGOzGfQh755B6BvM4G+E6Dv
MoH+PoUu7jWBjsy/egCgA/brH9PIjU8A+kEFeu6toMdSoB+leMkxQD426Ilb
QR/HpEM5yTqwXn/xVs6becB6y/VbOe/IG8U5pktHfnexVP4SeUrK4LzMxDnG
Vsmc83JvkeVet36HoO6sleW+TpHu5uHM93Dme5nzITnt48CXsJfTPj+f9gU4
7YMdstwj7UOdKunD3PnDXbzcc9SP9EjKA/FIbzrpo/K6W4V6rD+FOoe7PFyl
EOeRiOfT/6SCfbwBOzlTsHPEu4T4u9XJHzjnt2uiASSMAelxGRcHvYs/OYmh
B+wRBj7hAPQOGgbs4Rj3CiCf9ecUjNiYeSHeP9JPPhA/NNwH6ntBfQ+5QbzT
30UOXyeo7wD17TQA4vtBfB+I7wHxXbY66uirRshXIuRLqaGtyGppzLk7O3vn
n6VTO3U78v9KB3/q+etM6DOO+v9net8f/UDUEmMv+Af5ncfvzkbZ/2biryXh
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
dzqyo1LNo3JRLtbLdOvhe3Pi8oXv80/IF9nSkzYd4rKla9jvTHHOie3i628c
48mkwblDOHdwL3dk/Rxf7RRL2MH4IEVBdyRuQ2CDcGwDwyA8jA1BCI/0KcpB
uH+4B5R3I7C7ENhW8oBwt78Dgd0OytvIDsIHQfgACO8D4T0gvKu/mjp7KxHY
ZQjsIqptuLGkqCT7rxSxGeduGnDjzhsz4OqaW+pi3H9VbDPrY23fwra6GW/5
hM/v/weV2FN/i8S+j66nEvthtPBH0cIfo5LFE9HCJ6GFP4EWPpksK56UxK5d
rbleo7jmFn5brrdprpHY3bvmUM/ueeB6PrhGYu97GVwvogEktnD90VJwvRxc
v0YOTmzhejW5OLG/XAOu3wLX68iDxFZcv624/mYL+YXrbeAabJ/ZYeJ6N7je
A67fM3G9n0aufgCuP6TI9QNjcH0YXIPtArBd+Dm4BtvFiu2ETuxkimtMJdiu
0mxbsomqTxHVnAbTZzBguw5s159XXDcYXGOaNdsG19LCMe1gu0NHdmdumu0U
15geHdkCtsAtK3ep5HWZymwbZlDDbRe4Ja8t8khOtcpsV43KbDcPv3zVU6/A
/l46r31NKq/9zSqvAy0qr4Ny/hbkVh7iVh6WVs6NfLhThfWIIpyDms/fovIx
U9FezbRceI/Jy5rjfTq2Zbiay0W3hE2DLcNIDxrtnBTcP2a4+ZK6fHHw58s5
+BMpHfz52HZ+UCrBSCuco8A5EmOk4RvD0f6sn1AYJIeE5l6ZAGj2g2YfaB4C
zV7Q7AHNLtDsBM0OL2j2NJPN1Uj9jnrqHayl7oFqsvZVUUd3GbV2FlN9U05O
VfWlrJ+lcU6dqP3PzO/dinPq0f//fPvFOvXAzcPyOzN2fv3IP9G5p42Y/j1i
+gHE9EMo34/o8g2UEdPlHNNSvhllFdN1iOn6Nc9goZ4KlHVMb3yOWt+eDpSf
p/YtM4DyC0D5RaA8EyjPou6ds4HyXOrdMw8oI6b3LgTKLwPlxWTjmP7oVRpE
TCuUEdOfvg6UVwHlN8j95Zsa5bUKZcS0QnkTUN5MfsS0/9Q7QHmbRhkxfW4n
UN5lQvl9oAycr+wDyvtNKH9E0ZyPgTJwzjtIsfxDQPmwoBw3oZzIQPkYUD6e
QpmAMgFlGhNlTD1wbjifjummS+OYZdZrC2huTaX0OEaZH5djmFMgY7o0zAKy
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
mO2iVzEO+2gwyoN92m7T7d9gVGRXIs4F1evZn1Rqs6PL7NyoGBsuyqQ8+tiu
nv0hyhtsUW/QUT2j54iCIw9V6zwKH9O7yY1iZDrlAMK45WkOekkTJ8HoTd06
XdEOUBc2aPtSh5HD9+9Rkq+OrqgxKpqiYubbFkUhUZ7WqfWJK9SQDJdD8NCS
lihSLxFptJL2O3Gf1r/Zv9GQCLrli/SS9tsoyb+MPiRRIRca2paq7bGWtF/r
I8X/mqsw7MzsF6fT2JYpDM3i9iudH/7XbJW9bZlzS8itIyPO5bAt1zNxReUl
cdoPuczoeGTiDbtYJVKvFGk0Z/mFSm22hJM7NyzGhovDpvJN9DInr1nWjniP
bz8sj5r7G0T21UpVK5H/ot7AbDtFm9e56S+OUdnWKElNZ/lnhajZGX6stqIT
rIvDLfKwcrtK97Mo+T+ILmpUBxBHFGzrRRqt0v1UfRyzORyhRqXDpnanSJ2s
K8pTPR0l9Vv6qHRQ5nJF8pQoMPKvpOMt4tCO6TYHYq9IuFGRbBa3f1RvYp4L
NaBzdBuDsV9kT1Wf0Vrcon2fTp/2gD+qvRU7s42jpRqC8usotC5RrIW60Zu3
HRkr3XxkikXqLUpHs7j9OErqv7UfGeOzRpv3J0T2dB1AXt3kZXJal/hc+2F5
1Lw/JbJnRGHwh1Gy/1nh3eGkPytSb1VDYBY4uYtS6xGf0fHuYNJfFMmzRCKt
wFlOuDWTi1PyOjfjr4nU29T2WAtcT5Xd7BF/r0alw0lfJbJvVxyafiJPXNJa
uN/po9LBpK8WyXfoJHI1n4iS/FfRRyXq9P9apBaepfuJPCTisab+ucKwM8Py
QGTfpWPIzeS7KrvZev5MZe/M3G8Q2XPUWFpplIe0tB7xn5SiHe7F8oqX5CpF
TWfpFiX1j/VtNzh/2PQPiFeJFVS76ib2M+pN6A+Vqh3uxWIi+x6RRqtuYl+h
3ic+2blh4Trx1PLiywJdVw5k1yj5uyuFOuEB/B2+I96hMAqXXdS7mv1cNzU4
HSJvOd5nK+K339LKHv4zcn9LDUyHDmDZY23bp2AwaoD1cGsnp73lkIrcS9DN
wNDT4Qf8B8llzP8BUgpBEw==\
\>", "ImageResolution" -> \
96.],ExpressionUUID->"57736cd4-9e7a-404f-a95b-a8f63f1be482"]
}, Open  ]],

Cell["Specify an opacity level :", "CodeText",
 CellChangeTimes->{{3.933044880661512*^9, 3.9330448849037743`*^9}, {
  3.933045010762053*^9, 3.933045016167248*^9}, {3.933089436370775*^9, 
  3.933089446503499*^9}, {3.9331797435721292`*^9, 3.933179754788056*^9}, {
  3.9331862360282717`*^9, 3.933186237362522*^9}, {3.933187382677767*^9, 
  3.93318738662904*^9}, {3.93327372298297*^9, 3.933273723890574*^9}, {
  3.933275058413588*^9, 3.933275077577236*^9}, {3.933366381303438*^9, 
  3.933366389341374*^9}, {3.9337114891421633`*^9, 3.9337114935415707`*^9}, {
  3.933711607947749*^9, 
  3.933711615215755*^9}},ExpressionUUID->"0b308a81-0dee-4c26-958f-\
90bad5cf5102"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics3D", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Style", "[", 
     RowBox[{
      RowBox[{"Sphere", "[", 
       RowBox[{"RandomInteger", "[", 
        RowBox[{"10", ",", "3"}], "]"}], "]"}], ",", 
      RowBox[{"Opacity", "[", "0.5", "]"}]}], "]"}], ",", "50"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9332750686868362`*^9, 3.933275068687945*^9}, 
   3.9333663788886137`*^9, {3.933711500315832*^9, 3.9337115195742617`*^9}, 
   3.9337116351099033`*^9},
 CellLabel->"In[12]:=",ExpressionUUID->"e2131e88-04dc-4891-b559-f6567c725a21"],

Cell[BoxData[
 Graphics3DBox[{
   {Opacity[0.5], SphereBox[{3, 2, 7}]}, 
   {Opacity[0.5], SphereBox[{7, 2, 6}]}, 
   {Opacity[0.5], SphereBox[{7, 7, 6}]}, 
   {Opacity[0.5], SphereBox[{1, 8, 4}]}, 
   {Opacity[0.5], SphereBox[{7, 3, 6}]}, 
   {Opacity[0.5], SphereBox[{7, 3, 9}]}, 
   {Opacity[0.5], SphereBox[{8, 10, 8}]}, 
   {Opacity[0.5], SphereBox[{1, 5, 6}]}, 
   {Opacity[0.5], SphereBox[{9, 3, 10}]}, 
   {Opacity[0.5], SphereBox[{5, 8, 10}]}, 
   {Opacity[0.5], SphereBox[{3, 4, 7}]}, 
   {Opacity[0.5], SphereBox[{0, 1, 2}]}, 
   {Opacity[0.5], SphereBox[{3, 10, 8}]}, 
   {Opacity[0.5], SphereBox[{5, 7, 8}]}, 
   {Opacity[0.5], SphereBox[{5, 0, 7}]}, 
   {Opacity[0.5], SphereBox[{4, 8, 7}]}, 
   {Opacity[0.5], SphereBox[{1, 9, 4}]}, 
   {Opacity[0.5], SphereBox[{7, 0, 3}]}, 
   {Opacity[0.5], SphereBox[{6, 1, 8}]}, 
   {Opacity[0.5], SphereBox[{9, 4, 8}]}, 
   {Opacity[0.5], SphereBox[{9, 4, 1}]}, 
   {Opacity[0.5], SphereBox[{0, 4, 10}]}, 
   {Opacity[0.5], SphereBox[{10, 0, 2}]}, 
   {Opacity[0.5], SphereBox[{5, 6, 2}]}, 
   {Opacity[0.5], SphereBox[{9, 4, 10}]}, 
   {Opacity[0.5], SphereBox[{1, 7, 0}]}, 
   {Opacity[0.5], SphereBox[{10, 2, 2}]}, 
   {Opacity[0.5], SphereBox[{1, 10, 4}]}, 
   {Opacity[0.5], SphereBox[{2, 4, 5}]}, 
   {Opacity[0.5], SphereBox[{7, 3, 2}]}, 
   {Opacity[0.5], SphereBox[{8, 6, 7}]}, 
   {Opacity[0.5], SphereBox[{6, 0, 7}]}, 
   {Opacity[0.5], SphereBox[{5, 0, 4}]}, 
   {Opacity[0.5], SphereBox[{4, 4, 8}]}, 
   {Opacity[0.5], SphereBox[{10, 0, 3}]}, 
   {Opacity[0.5], SphereBox[{0, 7, 9}]}, 
   {Opacity[0.5], SphereBox[{4, 6, 7}]}, 
   {Opacity[0.5], SphereBox[{1, 8, 7}]}, 
   {Opacity[0.5], SphereBox[{1, 9, 8}]}, 
   {Opacity[0.5], SphereBox[{6, 8, 6}]}, 
   {Opacity[0.5], SphereBox[{10, 0, 5}]}, 
   {Opacity[0.5], SphereBox[{9, 0, 3}]}, 
   {Opacity[0.5], SphereBox[{2, 3, 2}]}, 
   {Opacity[0.5], SphereBox[{4, 10, 8}]}, 
   {Opacity[0.5], SphereBox[{6, 10, 7}]}, 
   {Opacity[0.5], SphereBox[{4, 4, 1}]}, 
   {Opacity[0.5], SphereBox[{5, 6, 5}]}, 
   {Opacity[0.5], SphereBox[{6, 3, 8}]}, 
   {Opacity[0.5], SphereBox[{2, 9, 6}]}, 
   {Opacity[0.5], SphereBox[{6, 3, 3}]}}]], "Output",
 CellChangeTimes->{3.9332750696228952`*^9, 3.933366392563224*^9, 
  3.933711520341497*^9, 3.9337116358634453`*^9},
 CellLabel->"Out[12]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJx8vA14mll2JqhxdZLpbLrz0+lM/tOZTCbJzk7WM8lOJrPJbnZ3snkms0kq
nVR3lbvKLbtsl+2yXbbKP7Ksn5ZkJEsYISEDAgQIIUCAAAECBAg4gAHxLyS1
JMuy5R9VuTrdT+rkUeIep6/be77vQ0jYLut5Dj/fx3d17znvfc+59557/+LQ
+eNHTx86f+LdQ1/5s6ZDZ4+fePfDr/y/HzTRpdf+RUPDv7jX0LDvx7/S8Dn6
/Kyh4YWX/5t7aXjtpxrp7+jRo9x7wyh/Tbj/J/zHH/mTI0eOSI8dO7ZJ8ozE
RVL3uz/mP36ee577bZnuf0ryLZKvHD9+XFp97nXuOc2e5/53/uOPcs99q1p+
jOpxlt65a/uE6kmr//LT5x//wxerp3/vvff2UxENP8Ld2seV2vAad5H7Af9z
1Z4C/tPu/+faX64WsvP/f0won/sqrV76tNqkumJ+Xyhmp6mfVpvB1Yt75vNC
Mdx/4GrCfeE+cz+pK+Y/7NaGe5S7v1nVIteknxBuv75jgOpfuarYkT0l/a/1
ei0/p9cv8rd/bOef7JTE1f/T6k8alHuK+/cv6pl7jtfzTws22l9VH/9tj912
Gtyg2FPe/1zf0Ofh8iXhce7j5nNFco9sVvVRV+RvvxpJX959/NOdIl8TXl+v
/pz/Jt9T5L99sdU1dP38bnnPdp79nHDNVQUQ/+3GnvJ+Y7eKLwPbLwmPP9sx
wJ4q1gFvb5G/LhTJVWmvYXaA9yvC45/uLbJay2/tRdHwniJ/9UXb7AXhV4TH
yzs24FUkXNvc6eHcn2xPkb9cb5vn0fivP7tIrgafvqzIX3zRNjVE/qbw7I4i
hH++a5tv7ZQ3tKe8f/Viq/ci8rd2H6+18Ed3bfNsxzZ7i/xyfaufR+TvCI9z
iKqhReCb12rkwP0N7inyS7ut5p6rQ+T/Ijwr3Yu+f7mr2Vq1pXvK+6ndKu4g
cm8Vf5e7y1OowGCv7RDECwV98RXmEFiNB1yNg/ny9vG0vKeU/+mzjcCV9Hu7
2qmxyud3jVCjhYE9RX6+3gjPt/B/Ex6vo9Qf371WowXJniJ/7BVt/c+7z9YM
KLSKh2PjzrXre8r73Iut3ulw3LX/Ijy+c2tvkTvm4KG3t0iBLHl/9K09/uj1
apF/tPt4rYU/sWulmibEe4oUGux6jg0a/s9d/deA8QXhGve7Wv/rF4pirzbH
//XZpXEl1SpbLe2fX2GJPxUeq5HznqLqSKBPuPX9F42wF3p/JjxZR6Rf2K1s
rf9XS/un+mY+3/X/266CaoQn9KD6rn9NKG37xWbWev3/JzxWx50/uXut1ut7
haJwt2Ivc0F/KTxZx5zV0rjSP32utL8XSns+7NmB2eu76q7VQ2Cc+oCsRyjt
e7vNfD7yafib3cdqfeindvVf02S1qO/U6/95mL0hPFlHldUw5vXqz/lvIqG0
Ry/qvwazN7lbPEV+aVd3tSpeFQrY2q3Oy5zLgefLqOvX1TIe1DfpeUi9LTxZ
x41f2m1mrUt3C6Xde7FJNUh9c1cTtce+9BJdV4u6s1uxl0Hq0EtK+9nda7Uu
3SWUdlso7bMi6XeFJ+vIsBra1YVdnUJpt3ab+QKkqjHg/ur1vUXVhVvVolbq
9f88pI7XP8l/+znh2tm9Tf+WUNryi/qvQer9lxQlhCf1XbpDKKqyW7GXgeuM
8GQdD/7crhY/fa60cn0zn4fZWeHJOh6s1q2uS7cLpRVfbGYNZh/uFsXreU9R
dfqvFpXbrdjLYHZhV0E1HqzG6HWU2iaUNi+UtgOz5+PmS8KTdTz4C7v/oda/
W4XSUvUmeB5qLbul1YxXLa1uxFUtLVlvgueR1rqr7lo9hGi4frx1RSgt/qIJ
akjr2H2s1nN+cdcEtZ5eLSpa38znkda5W1rNu1bHNHU9XVBHw1x9M59HGs8u
PClWBzF1/fuyUEZot3EvxMOCK+B7X00nv7zbuBq+qkUFdqvzslD42m5Dan25
WrG6kKlZKM33Cq2LX1KUMOiqH0EJIGzwfLbWueKEyPS1uqH8r+5e+/S50qbr
tf58M4VovH4w/2u7+q/Z9aJQmvMVzRRGa/VDhl/b1X8tZKoWZX+xmTt9iPvZ
jXrL8d++Ilyr698CDzRYhdI+KwAW5jbqSbFaWh3FnhduWXabuRMAS3f6hlp4
rI4Rv/KSpleLmni1/kdfUho/xufHStUyxl+hdf1uK2o8+Ou7uqt1aYF9qz//
THAZdkur8WB1tF7XpZuE0rSvbpxReLKOVX9j91qNzc4JpWlebGatc5uFx+pI
8Dfqtc6Dq1rUyG7FXuY8hCH2T+4Xvf4njb1v/Hlj/4GvQt/XXof+t96A/gNv
gvjA2yTv0OeDJI3Q91Yj9H7t4KDojYONojcON3a9fmBnIFrHpf9GuFZHEIIH
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
knlcSxVxLVPGtfkKrmVJ8kskK7jKSWEVVwprpOH8Gjn6xTxpOLeKJdJ8IbO0
nUkuPL4JxX+WDY08HRxQML8vxdzuJLNPRdmEJcRUN6zserfibs/7l6DvrYPQ
+7UDjb1vHm7s+uo7DVVXVTf2F4Zq1V2zn7l6IST4/sc9eRXHhLyK02eFvIpz
RAhcXkVzF2hbekDXJgbDTpZIjwJMfWqwiLVcYkhhjIav10/3M9HJHtZ36hq7
dqSFib95lkjhQzZ89CJTHm9m6pOtTPtBFxu7IGLjLWI20T7ILFflzNqrZrbe
ERYYULHIDQ2LKvUsphpnoDFtl10zuDIbwbU5wFuxJN6CDK4ncrieKuD6fBHX
swu4nqvg7fzSPrxdXGn4JVwvreKt8i1cK63haukWrpAsF9e2F/Mrj8vzSyx3
s8wyiRJLQeHp8NDIDwnObHZ2ns3M3GROFzCLdY5pVVNM2qPevnpRLCSyHTpD
nvw0iN85xSWxAZ9t99XaZre66d63BOX/H7uh6csy627yt79aS4vYm/IhP3sB
lE0toL7QAdrmbtC39vEpH0JCi7ya0KIF25AeHFwyC5fIorBsX/+gj/WfFbOB
s9eZ5L02NkjKv3HsAq98zfuXmY5Yefy8iJkui5mlfYDZrg6zqb4R5ro+yqYH
dMwl1bOIQs8SGgNLak0sOTbJkuO27cWZIN6KxnE9nsLbiQzeTudwI1PAjVwJ
7+QreKewiHdKy7hRXiFZxdsLayS3SNZxvbK+vVpefbJU+DarZBdZOVthhcwC
y6XKbD5RejqmM/3wWu91Fg5nWWA2zdyeBLMR7MdGp9mNfi32tw6v9X3QRS6f
y81rEfLyjl0mwr0I/bW8vJPPzVvsNcQf7fLNC5mDaf7e79clp0iJa2RnOK65
ACqygvZiB+gui/i0ImPnAJhFw2DrU1aTbvTVpBsTeFRWIeFG67g7elXFBs5L
meyClA2f7GQ3jpxnI8cvsVGywtgHrWSFLqLxXmZtv86mrsqY65qCuSUa5h3U
s5kbE2xGPsF8chOjAQVLGywsM2Fj5DdZxuLcXg1FcCORxjupebw7n8e72QJu
5su4WazgZmkR75aX9+Hdyuo+vLN4q+FXttcra0/WSt9mK8UltlxYYkv5RbZA
UiJLFMkS2VTp6aR56ofdXT0sGs2xYDBNfSHJHK4YM+qnH49IxlDard7qbb7O
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
/j8t1y+z33Cv5h6+ScHu95uCfR82eTreazjzOukfOo3TMWmntpo1TYZfbOo5
8w71gbLBs4j+zssAriuku9RM4yBsXAi7DrqkGxdxkcq3tX7Er8guVKN8hUhR
L6/f6lfdueNXOn7c/8mt/d6/uE79TZeGe/7se39Qp+zOmbPUe+6S2njV148p
ZOPVI+fhAyMUrg+aTZtk0KyL8vVRyCJ6uXE8ZDaRo+1UAcvY8YBZKRlRpSKK
MDmCONyQiYgywOtADvO2Dht+kw63jmCHdFA5pH3YXuWAdjc16sTjgbjak8cZ
1T2HD61OXJSj7ojydCfEmbzsNLjZ+tDBhmELj/cZag+6JihwLL5gC1HIEaGw
I0ZhV7yRIq5Ewx9qFUGuhKr8EQup6p8o+W0RVf0j3s9h8Knaa6kpNSAhm4S3
G+vQrw5cu8v4jFcHz/454gt4swvnsZ4BsktXaUIJQmrr4eTVdr7zZ1e498+v
8/0Pm3no7G0e+7iVdZ+088Sluzx5pYtNN7vY2wbQujo5cq+HH/fjJr9/n2MD
g7X0wwlEkAJcSiu9L+TppZK21tSDBbgvKifq67i0P9rebvhdBZ5A9womsL0U
2KqaFmttc0sBd1CuC18WiqvZBQ9brl7jhc9aeLGjlf09nRzs7+bQUDe83T2O
PujlqJqN1k9rpmPoJmnTaVDtd1teM1WXrEgk650UAO9UN0XcRxUAWIn7kVD4
aRO2IYbv1+NLjdJG0fB36lUCbqkUWM1756pP3IZqZkFf/dw5WU06Jqrxed3h
7Njdv/70P34y7XrY+YHG0KkZ9nW86kMajueHqO80EZ9fUm2/95reo/6Pmmjo
44+B12W17aaTdt/rcF7NPaptV2Ele7jSuyjbWF16MmjbWFitZ3qNeMczqt9R
28KSnkjZ+5XtL/z9H9+/8oP9+5c+o8FzzdT73U+kEV7L9X6TZBTUwLnLuF9u
0Mw1bUCpq62HfHKOPjhKUd0UJQwmyphlcq6bii4flXxBNdtZSlC2YmksZDLX
uT41t1CfmKsGk6qhpOr0r1aR2U4yO++QatXDRjwc4X9/VK3RYfVIEXgA2wd5
Qh/Iqz79vMTZUJozKylOryRBXoKT8Hdxr/i6SN3XBdln8bP7kZftehebdPM8
NWjigU4dRUBb1BlR+g4xT4Li3qSUGcHSjZRYysDFxZcy+FYsTVFVg1evv3PE
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
1IDQO0zyTMYtDs3iws1nOHflUUV/9yZvf/rlmXnk9teu4Ztvgj+78VV88t6v
c7OPkRM/w6p8AhvqaWxtzGHbuESnv0ynr8Jdjxb3/HrcD5twP2rF/ThxmKRU
nfHiYY5YLARIE8muEIvHpQielKPEIUW1dxR+d1QK4wEXwt08jfFsAPmsMNtB
2tDswAnxd0z8HdbbXQZ3y03oFAUGa8RgmRgsQCWe/XadVI/BEGlhAFzWLTDr
6fzVOlicE79dJ9S31vf2d7bw25TdT2Pf1p09Gv/nd+aplJEPfgpr12+C+cED
Ss9PwftilPNPjZ/6ZsYxODuJkaVZjMvFmFTJMbuqIhq1WDTqkbOYsGTbJBrt
WHE6seJ2E40erPp8WPX7sRrwnzYiEb6dStFpN+Cg0aj+nOPO0pFIaq/R4Hby
WWx4LESknYh0YydEKdskwg4RuWtfxn33Cu77VvEwuMH2vUq2H9QwbmOWFQ0i
onGJcZYekTmLimUsapbQK86TBjVmLHrMWo0Y1enRp9L1Oi7NrqJpYR1NYj2a
lwxokZrIYVmWBRTNyxY0yS1olJsJRxOuSwzcpsYDznWhsUYQbEJofGBR97A0
KFygu+ixpFk0gYrStdDFWzqhSolHl49fPZhhczeffT39+YO/Vt26xjue3Pi1
88mXGBm+ionnNzE7fQ+5hcdYkT7DunICW6vTyOvncdu8RPZEjjsuwtG7insB
He5HTHgQ28TDuA0Pkw48yrjwKEs2JU8OuuDHk2IATziKUhBPhSO9Py5SGi94
cS/nxp2s/3Q3HyeL1OlieNoQUOQJxTYc1i5WoJQbhGId2vkKoVjqoliOC2uj
kpAJEIq+aBfFgNNLcugit0jnrVoblIgkP7i+9/Z37vFnP4xi30MRU93X3+/2
gNF8dgUMd27z5of30PrkPjrHnqD35WgXw7B4FkEmxoRymURRhbkNLRYMhKHZ
RKK4iWXCsOxydTGseLxY8fmx4g9cwkogeAnLgeDAA75JKO7X69VGPn+WDIVS
O9Uqx+dSp62wizK0FbejDsLQhLxxHjsWEe7YZbjnUrzedUnZvmeZVfSvGLdO
oZtjRf0iy+vFLGeQsqxhmaX1y69TumWMqJXolSlQ/0KKxik5mmZW0DyrRsuC
FjfFG2iV6NAqNaBt2Yg2hRltSgrK0Fb6eZPCTGGQ6TnHmr/b58VrioHHEIMt
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
N5ej1y6d42ePHz76Mw/MbWghUIyvECV8GRnZqFuSUeDqiJHfJhVeDVWrF2Gq
UnlJP+kkJXAd7TdSf8dMFdVbZedvo/oL7oz+I+r94QMaB6qqJ+2kB6qLbf1k
7xkij2KC1sZVFFIaKKqz8PqMjsMaM8cMy5xc8nBm2c9bbqDqi/JOgHgvnOH9
zTwfUpGPUiVgeiBj+rrwik+2TxgfPuINn5bO+XTvAnHJp/tSfMonB2/v8Ov9
T2v+OxlZSVePdqtaCsJLeVjaHCxt+hCWdg86WoSObkFH08gq4+xzRnhlKQA7
62WDys7K0fmySWWGhoagoX6MHxcr79ey9skzstQ3lRebWz+3dHVRYFCBjHKE
EjMTlNaqKgXPLWbY2Wo/COjoMXS0Unw/Khffr/SE+Dmub2/hui9XFvsWXR4c
1fwr4HlMF4fH5eNsnnc2MZshpDs2Fd3EeaTC6PZGXNJOzgWiN+nVsCBkkbEV
v4i4VkXY6QWnbnDqAqd24TRZxJJWd+1A1uTVe8GjtEzazz5TgH0LQfYvhNhv
DuFcOm7IP6+aguw1BthjCPAKrnfqvLwMXu3QVSt4tUxYeQEpwPygnud6Zq/M
g9oKq7vILrfLdFTtyFXKHEBHpVZx28go8/CyGdnLSi2P/M4IuawBspo8pEc2
Pzqs/lvyCPvb7xNJb1VCE1VbK+vJt+Rr/kl1Ze+HpJRXt9fKq3o1jQ2kbWxm
xf0HPFL7jCfq21n5rJvngKq+VUJ16AZZl7C09wtb56BYhsV1DbxHVS0gLsDU
JAKQ0yDkdEPrEGE9MDV4RBSYbpr9IraIt3oJaYM1hNi4ToLNFGxZUvoi2pX4
Fk4SNb/GCTwVd8b/YmF2QTQ3NMsLpTaWQlfhpTAl/dnbuNrf4yoVGwuSVeuX
W9trgev00CIN9unudjeP13yvAuWtLSZVXv/uz9PSv74trd/5oP5ff5v67z6k
iQeNpAazxsYesrQPkBOm1zs0SYFJNUVURorrreXonIUjiLhxmVNLXs461jnv
3uCif5N3Q2A2kuHDWJ6PaYdfpfe4nDvk1/lj8Frm050TPgOzb0pv+M3eOZ/t
X/DZwSXiU35z+JbPpDh4yyeH4BcMl8HyK1wngXsASd6Dxu5uvUIuesRbqT3O
xIucjOSRh2Z4A6Z7fSXKHluQbTA2pjkHqyYMZbPGAmiD5HP6yGFxlue6+1n9
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
qySKDb6iDb7S4Cu5nqZYIEVhL+pIN/hyhMl+zZdaLfEl/+n38fPdNdi/2Vh3
45TPTa/7/HsPFP/Jf0cJ2ZjY/Z82KxEWTbdvk6PtIfm72y8cfU++6x7qpcTM
CKUUM/A0RTkr3fMIeAoG9VUB4b+0qhd7ayZx4LKKQ4T/I8BzHPKJ480NcRwL
ixOY1AnFviwGYUiBQC23sVHb9vlrGY+3tu0FQAh8uYAE0XrDtNY3bklPpIdA
04/i0VfbDnhrab+nRl5XLQ5gInZzbX1F92bHtyH2oymUb1JL720ExEo82/T5
l/VQCWqy61K43BLZYAyKipy0XI+KbCAqtv2RV/n1GOcDsavMekCk1r1CIscy
Oy90g2OgZlyoe0bEbGufmHrYzcZh5avVz8evHAMDr70D7SLYf0+En8GkxttF
bLpTxGXdMCiEx4V+EASKVJAaWhyCYQ2J+GK/iKn6XgdVE1eehQU2zbnZKHPw
0pStKlFjnHWQDkst6NGMGkg1pCNFv5pk3fJ6q9iRu/3NyuZP57wPPqRQx9co
1vsJMsldZBKU+VPtyCRdl/aWu2xvuceezlbe6OvgzeFujo73cnx6UAT6HovI
QJuIj3SK1GSv2J4dFHn5iCiqp0RFN/tmzzD/Zt9UJ0ccrenFsWtZnHoRFANr
ohp0ieqmF6YUEM+3gijVww1jksjZBjk5kJNLgZx0nZzzwjYKAqiUvXq5W+Dv
gJ7vHJZATalO0ouDAp/v7XC1kuOjYor3cony0fYuHWcP6tQcStSkKrQLakrx
AhVATe4tNcE0xUFNxJ+goDdGXokaa4BWjE5QY/pgclL20+8rs3cHXn7zfXG3
9/2puXEo9Y9uFnLfS873FnJfa4Azt/TRV+uXPXvaW75Y62r7wj3whJDEKSkb
hePMXl/6rL3M6RS8Y1CJHaNalMwAx74s9pHGD3xr4nDdKQ5DXnGE3dNRbONN
ecMPh/EAEAmAQC0LpRyOWtrlrqUBT9oHgJDQslhK2+T8PjDj9zb9GB7deOnG
W65axuuokdta23Ks1EJWMBMIiL1IEmZD9e7Zla3MLVGObzf9UC2DvJhBXswE
Im+yG9FbAg9N3XVitgObIiPJH3697Qu/2g5siPSGu06NR7cEnwExg+NC0zsq
5tv6hKy190r1ZIzNI4u8Or7ElikTW2csvDxufWUZVV3ZR8aunBPTV64p2Wv/
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
vNmSToarRwVpJkRKNyXS+mmRWZ4RWeTxrEkmsiuS8Nw8I7ZXpgQtT/zniGxI
BPseieizbpGY6hdp2TOxDYzzWpko6BWiuCyd+dGJotUgCvZlUUCi3HGtvkmt
6sSWUSUS0nVlZq0gvE4B07RtCT66JLbXILsOfqr7MqSbqWm6Omv6nu6a7nHb
l/pHHW+We0evbMNydo2rMIjco6qm/439UzoOyMwcWrBxROPimN7HW8shjq9G
OQkfIvBCSHQp7w6n4VfpjQpnQnuc3TzgTOSQ09FjzkDp2AmnYqec3DrldGSf
05vgDwwmweBWoMBRXx6pMYPqKUkxfx78ZeFvqQZ/9RuXQ/VeBUall9SzdpKN
rdDogLq5r2OyqQHfz9PEvds029pK8486Sd7ezbKPb7/S3b37eq3lT4W/4+si
8vQbIvPsm6I49S0A2AYAO8SRpkecGAZE1TwinlsnxJl9Rlw458WFRyFe+FTi
5fqieBnUiJdhHbQEEJfgeXpxjuXzsP7qOOzjvU3C97UboaYPJPS4HGnMqlSs
X7MEhRL1KQ+z/uhlNhBtgJdIQyn4W5IqgK4UiwO+OOWiUcAXBXwhigfXKRrw
UtBtL7tWdGXdYDupHgC2h59At0mDIat5eFeyCegBLKIVwtBtbcfrDqgT73di
W+gBdL8DELYjs7UBQnxPnzwAhPdo6mu358b/qPmDkd/7sHFu5ma3p197z+C7
48/XDDactt774b/yyO97f+j3lluP65v9/TnZZ18j+f1PSdlyF+zhQ7ThQ7Tj
A3SAu84+0nQNvpp93FdWPXlGmu4JaBKaIm33FPYu2u6Zpk/Ly0/6q2tP2nmj
6xMO993lyNADjo22vtoaeyQiEx1fRqc6atCXWzNPRGphQKRQGKfVQyKtHRYZ
HeBC0MksjYg09sTxxb4rMi1yzrnJeU/sVdq89jo6OQwYO0Risluk5wbE9sKo
yC1OiZ0lALm8IApmNfwQnmjTvSrZDVeZFZSBOplIGuT1C8pS8Ns01qXht5lV
pdi2KOG7C2LbqkCgfFLTPHlc03z7wRtdR7cwDcwKy/D8lX1Ezp6JRfY8W2D/
uIaDM0beVFg4qrbz1pKHE8sbnFzd5NRanNPOJGcBTw4Q5TaKnA9WOB/e5Z3I
Aeejh5zfOuZ8/JRziSrnklXOJp9zBsrGjzkb3QWoe5wKN2CMbyBs+lCiuVPl
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
n3gffO+MIk6raf6ueO1c5VyJNqQs5NfPGvT9icgZJL/OS9qPkZp30h2bF+oX
mREuWHnj9nkdOeHK3ZDvXqWbfFo/BQwhCpmiFLYm4ErS3ItQDFzBBz7hq1DC
X6VksEbJEO8r06RkmK+DJCO8nkki0oK1KRFuUZwbXo/ifRFwSdjHOaQCDimS
D3qEyws3LziI/8uuD5IV/GEGbxnhGbUzWlIOL8uWr4xLPuBrMuPgRTLd+HOy
3HyHrAi+rXztfPSGkCItHJoY44cmxhFkj01gMKyjcMgjvFQFsDU0DM65IZ2V
uAg5chGq/s2T/N51+9sXyH/zOsWmxii1OE05xQIVtatUMWngTkxwJ3ZqecWi
ArxqyE48+tFOIvHTksfCPt50sOYTt8gnT8EnkCKN2BNWeRJhlehTVok9Y+Wn
aWiODCwLDnmNU1JbfdAkqRw0CT3LsiLeE3oYYQ/ueplF6WbrqzahHyjfkuNJ
Fmfbb1oyQZsYRldIc31uXXF5RJwB/2pAPTxIutEhMk6Mk3lqiiygE7HroZQY
etKiVNrGsS+frfTyVX+HQtjHPbozpmYrwyq2Aj2y+h6iksHFUzpRDa2CTtaY
dlTD9BM6tj5pYsZpC7t/6wEzzzvY/SkTuz99n5mmTEe2BRul3DlKefKU9hYp
7StRxlemjL9CGd64KFCltGAVSvn57KoIzchioBjeW5DTCy9n5Ye42RDKz0bI
rguRGWpXD2rRLNpobUonWx6WS+rym7LE+A8pPXWBCovvUFl+naqqYaprx6lp
nEbEAmqxLVDLsURtF+jFLQe1rEItwLzc8L13hZoby1R3L8hq7vmBnHlcCsq/
J2xMmy/LxPTI0QkKI/KLLcyLAa1CTgU1VCyC2ooZrghKtulyUmvDAyWCqRMM
0u4JnfAScsmUUFxqP80LvOdoH6HEHihlD1yxK1iJdgQDxYBA+NF2KQcC1icm
QXxVPCCez1A9l6ZqNkGlVJRycV7jwdn3fZEYzlXu/CfnI5PXeUTMVP7Kydri
yf7gm2JIAvlxjVZv8MaCvD3onNDXl5c8tM6sQXpoyQVh68Gc5VTi1/ooZAxB
mUYpaktAkWaEjnOJDV5buEwpPujBOqXDDcpEOIVkom1wdSbWoUy8i1jqxHag
p7qUwvVktEOJaJvioJkYpxXQUAgTJgBq8uF3b0DZuuGDnKYI2fTc/3jgf+yk
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
AafYSsUw4tRKC9QSssFYAje8mU2oMMUUoDIRpb9QKkANQFWPu6gatVMpZKGc
X09JxxzAmlDk1vdWlv/wDTK/fVFO+/luD1N4fIJix7U8ehMVLA4qOTxgS9Ty
4L+IpGQtz/EM/H5OreUptelITvn1Xl0fk8tjrwnKJFPKIplg6qD1yqJ1bR8p
Jxwl3qNeELU7VVm7U0gix45nwFUKdygGxRgkr8tNNpNB3dTwXeHnPn/w//xH
Cl17n+J3r1Fm8jblRddgCPMKDFa2c3NYpDAXXYNlQ8dICPorqqgEyLs22GpD
7rVF31fw1crlgFMuL3CSquAYo+ypCwNKssGjUAepEJWhDgpRN2UClpWoU6us
Qv3WivOtNyh45R2ZMqTGbsimUsXFCSqvzioaBn9dU/Q0dgucThrN9YPzC8yI
XMz2wRhzD98DSvNs694S257XAiU9UDIhVD1k+YfrjNa9QMnPgBKr+be/qAfC
QCnI97ZCQCnKn8QSvJtIfd6NZ1g3sQuU8kCJgFLxHNvPlfGQrw58FzghdGF0
MZ7kq6yTK/cRtyCUcXdKPclRE5n5CUdpwVEZqrBM2ZjQ9UrpT+i4Rs/hJ4Pe
snKabJ0ccPXLp8HrZFJSxehfK786cy6HgtG3VgLv/V+UuHmBMqPvA6PrVF4c
ptrqBDWMc8BIQy2HDlfSpKDkP0YJeiXiA0rAKR6kZgJoJMOyW1944JeVdly4
gc10UOm9k/QpXTbiTmrEkGZELFQOGijvXV55JNAxDKma6e/IChvThbfJefkq
+W7dpvDYGMWmRYXNEmV1esqbrVSyKxU2uCvU+GqFjVhflvNzTToqK/wc1RR+
RD2cWMdX1phbRwKf1hEdNpWx3xCrWAfUw9M7QKeFlzeLTarna7K0ppwuAJ8s
8EnjxiQQliIU8vnI67AP2gxaFZ9fFU6sefOdt8n7rmh++T4EwDWlTa5oabQ6
QzUYqex6prTJVYw0CCMNIzzFwooAAEYt0Q8VgruFjAlCQOqAc7Jx8n8tlbRk
JvtK2IeXauCSi4aIVXipUtRJuaBlJeFeVsqd/tWp9r99iTLjoofKbSotjVMF
7Ch/FnSJ7J0iOizhbgdce2mjjhmufMCsN0eY884E2xydZVvTC+BGwxL3V1ha
ZwA3ZoQgOyO7m5WdPnATYI/9IQZ5x5rhnc/3IvEv9raRVYVCX7Qi26wTTbAn
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
WTECtEiU82J5UZwoIjZBi7af+3j8JvXw7x6kUBdSqIvfd5AAtGE1rZyy/N3I
FuDR8mq1axYeLQ3LSVImFqVEOEBhn3PQY9OtKVfwTO4lWf2auKBfE1dWtZx/
rzzzTEWTMlfxnRX3T/+QQlfepsTty7KhdmFuhErL01QxLFHdojudHvV/deYJ
Lj2pWIgy65SmVlasO2XEYkguK1adsmL6SdiDnLZNKpPlIs1Oh6meClIt6aNK
3EOFsJ0yftNK3LH4S3+NXfzSsV3Ic/x/MliZe4dKc2/BE0A6rF6kmv4yxhWq
Gq7Aqi8N1iw3Byum6+cL2uPTm35DFvSZLwyS8+Jl8t24iWTvLsXGxyg5M0Xp
xTnKicoigwEJn4WqdodS3+AV1UUhfOYovESCurjZvUSG9nGzRZHffqaoVDgL
LQwZ0JOjhhtcg/wt1iB/xb3t4Mdt2EMb97cF59vCPW5mxdprHvc5q5Y6pOEh
hASO4j6HKBH0UMBhsChX48yRG5ISeSiOenv/T+VJZ6ad/o382d9f8b79OkWv
DSItu0i5yRtUnBuminaKaoZFali16gyeBfA7vjJTEqJWHA4Sf08LKqaVVpY+
xMR7M5NUJxPVpY9sTJ00CZ/M4dYTHqrGnFSCIsn59SsJx7wyMSD/cEUbfm/F
8PobZH/nXSX7HrpF0dFhSvz/lV1/bNtHFT93a6VAt1FglcqPaUyAkDZBJJAQ
0pBAgKYVTYRCu6RqNrdbQzpaqx1JSUqbrK2cqhmr3ZY0arIkTb3YizPHJJlr
bBPnHCuJYistEkIICVSQEBJIUCEkkOCP8n7cj+8l39ZupDiKE7+7+7x3733u
3bvvnemRuXNn5TzWTV2KyMVBWJBQ4eK4XAWlVBNYxQEuCpWiC0+w6hJLzkEp
tAsOS2naCS/iztytYhlIW3EJ1HGzWKYqkzX4I0413AKvghqqBSzvgVhYwK3w
LKgjI0sw7CKQtxwskmcTI42gjmFG2nmyAq3JA6ihQNrq5Dvu5KQ0O+vko41J
WK3PhlplrvugLJ4OyUW8hjbSC+QBl8l4K7UnYUSr9ZjakpqkPHoVOlXNTGMe
HfBOP4TAY+aDclZTfH39jTilBSuwlFmZGZHl1KAsJiLRzOjZrdZaTPKf9bFd
Xm1pgYVhm0weC8mZ7g6Z6emWuXAPUJKwXMBKBOTPsEBcHh2Wq1jmOBFnDj3F
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
NGgzvFNzgB9Tdhn4P7wV9uA=\
\>", "ImageResolution" -> \
96.],ExpressionUUID->"1c6b0d77-a084-4255-92bb-81d7fb8465ab"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Questions", "Section",
 CellChangeTimes->{{3.933044963725752*^9, 
  3.9330449795190353`*^9}},ExpressionUUID->"a1ab1e82-09ce-468e-a7d0-\
5f91ed75a90d"],

Cell["\<\
Q1. Make graphics of 5 concentric circles centered at {0, 0} with radii 1, 2, \
... , 5.\
\>", "CodeText",
 CellChangeTimes->{{3.933044981954609*^9, 3.9330449829879637`*^9}, {
   3.9330450176513767`*^9, 3.9330450320914183`*^9}, 3.933045639637404*^9, {
   3.933089544720343*^9, 3.933089556828191*^9}, 3.933179850155089*^9, 
   3.933186285502434*^9, 3.933187554902504*^9, {3.933273757013492*^9, 
   3.933273759221569*^9}, {3.933275173090176*^9, 3.933275174239065*^9}, 
   3.933366419090414*^9, 
   3.933711659115155*^9},ExpressionUUID->"5e7af161-1d1e-4932-855b-\
53e872d326b1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Circle", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}], ",", "#"}], "]"}], "&"}], "/@", 
   RowBox[{"Range", "[", "5", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.933044985463201*^9, 3.933044986750958*^9}, {
  3.9330895601363*^9, 3.933089562755383*^9}, {3.933179852254599*^9, 
  3.933179853366473*^9}, {3.9331862877850657`*^9, 3.9331862921617928`*^9}, {
  3.933187556632497*^9, 3.933187562316023*^9}, {3.933273767268964*^9, 
  3.933273772972868*^9}, {3.933275177576076*^9, 3.933275186793064*^9}, {
  3.933366420576898*^9, 3.933366426894607*^9}, {3.933711665285037*^9, 
  3.933711698402371*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"ca5851d7-84af-4dc7-a3e7-447455e49de9"],

Cell[BoxData[
 GraphicsBox[{CircleBox[{0, 0}, 1], CircleBox[{0, 0}, 2], 
   CircleBox[{0, 0}, 3], CircleBox[{0, 0}, 4], 
   CircleBox[{0, 0}, 5]}]], "Output",
 CellChangeTimes->{
  3.933044988930332*^9, 3.9330895635112047`*^9, 3.9331798539544973`*^9, 
   3.933186292890319*^9, 3.933187562945372*^9, 3.933273773761939*^9, {
   3.933275183581244*^9, 3.933275187404092*^9}, 3.9333664273754473`*^9, {
   3.933711672362569*^9, 3.933711699056349*^9}},
 CellLabel->"Out[14]=",ExpressionUUID->"b24bf240-0260-4a08-a25c-da3b68863ea3"]
}, Open  ]],

Cell["Q2. Make 10 concentric circles with random colours.", "CodeText",
 CellChangeTimes->{{3.933044981954609*^9, 3.9330449829879637`*^9}, {
   3.9330450176513767`*^9, 3.933045056297317*^9}, 3.933045638646614*^9, {
   3.933089575406213*^9, 3.933089586174968*^9}, 3.933089618736126*^9, 
   3.933179861024324*^9, 3.9331863178248987`*^9, 3.933187570594631*^9, {
   3.9332737816404*^9, 3.933273784639071*^9}, 3.933275194729456*^9, 
   3.933366435879066*^9, {3.933711712061687*^9, 
   3.9337117139289494`*^9}},ExpressionUUID->"0882b12f-7c20-4a42-83d8-\
b2f422677fde"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Style", "[", 
     RowBox[{
      RowBox[{"Circle", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", "#"}], "]"}], ",", 
      RowBox[{"RandomColor", "[", "]"}]}], "]"}], "&"}], "/@", 
   RowBox[{"Range", "[", "10", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.933045063288123*^9, 3.9330450677902946`*^9}, {
  3.9330895890689363`*^9, 3.933089594315775*^9}, {3.933179863134802*^9, 
  3.9331798652901382`*^9}, {3.933186352377493*^9, 3.933186356606814*^9}, {
  3.9331875717836657`*^9, 3.9331875774282093`*^9}, {3.933273806775219*^9, 
  3.933273816955276*^9}, {3.933275200585161*^9, 3.933275203145224*^9}, {
  3.933366437367323*^9, 3.933366488788062*^9}, {3.933711720301744*^9, 
  3.933711732739498*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"1f7e8a21-3af1-4620-9d98-f0b63fcca059"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.6019390626150949, 0.9524891092238699, 0.2176502762446184], 
    CircleBox[{0, 0}, 1]}, 
   {RGBColor[0.8653444405963384, 0.31196832553798437`, 0.5390846192316794], 
    CircleBox[{0, 0}, 2]}, 
   {RGBColor[0.06942475377031121, 0.8386910039187561, 0.22195636156205056`], 
    CircleBox[{0, 0}, 3]}, 
   {RGBColor[0.6291526476156417, 0.5854402998538046, 0.3735583899791488], 
    CircleBox[{0, 0}, 4]}, 
   {RGBColor[0.41707150413176786`, 0.7773631749998597, 0.5005148169643578], 
    CircleBox[{0, 0}, 5]}, 
   {RGBColor[0.664534225726334, 0.4654668507165449, 0.06632750706733104], 
    CircleBox[{0, 0}, 6]}, 
   {RGBColor[0.6192135210609022, 0.1525776172119886, 0.666375659060306], 
    CircleBox[{0, 0}, 7]}, 
   {RGBColor[0.2545830529171449, 0.9587972402919189, 0.9229391133794196], 
    CircleBox[{0, 0}, 8]}, 
   {RGBColor[0.6294134976945849, 0.994022594187598, 0.045159518676732624`], 
    CircleBox[{0, 0}, 9]}, 
   {RGBColor[0.9030454211078225, 0.5070571115690101, 0.03949825071344004], 
    CircleBox[{0, 0}, 10]}}]], "Output",
 CellChangeTimes->{
  3.933045068531444*^9, 3.933089595077277*^9, 3.933179865700841*^9, 
   3.933186357027522*^9, 3.933187578444014*^9, 3.933273817767902*^9, 
   3.9332752042849197`*^9, {3.933366452535006*^9, 3.933366489079846*^9}, 
   3.933711733084877*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"e9f3fd16-94f1-46e7-bbb2-f5053d9e5705"]
}, Open  ]],

Cell["\<\
Q3. Make graphics of a 10\[Times]10 grid of circles with radius 1 centered at \
integer points {x, y}.\
\>", "CodeText",
 CellChangeTimes->{{3.933044981954609*^9, 3.9330449829879637`*^9}, {
   3.9330450176513767`*^9, 3.9330450320914183`*^9}, {3.933045084826315*^9, 
   3.9330450895412827`*^9}, 3.933045638006887*^9, {3.933089605540449*^9, 
   3.93308962437987*^9}, 3.9331798750151567`*^9, 3.93318636535917*^9, 
   3.933187587060635*^9, 3.9332738368224363`*^9, {3.9332752137200823`*^9, 
   3.933275215496457*^9}, 3.933366504081997*^9, 
   3.933711742923994*^9},ExpressionUUID->"5acbb0fa-cddc-4869-a018-\
d599c393bee1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Circle", "[", 
     RowBox[{"{", 
      RowBox[{"i", ",", "j"}], "}"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "10"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "10"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.933045091218141*^9, 3.9330451188091393`*^9}, {
  3.9330451674076366`*^9, 3.933045169358844*^9}, {3.933092927485311*^9, 
  3.933092934791684*^9}, {3.933179876398283*^9, 3.933179879887586*^9}, {
  3.933186375094068*^9, 3.933186382901073*^9}, {3.933187598325057*^9, 
  3.93318760509839*^9}, {3.933273846237154*^9, 3.9332738632202587`*^9}, {
  3.933273897129974*^9, 3.933273902631711*^9}, {3.9332740463093224`*^9, 
  3.933274049175581*^9}, {3.93327522166499*^9, 3.93327522675489*^9}, {
  3.933366510439396*^9, 3.933366523546612*^9}, {3.9337117855455236`*^9, 
  3.933711812165011*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"5d7af015-e4bb-466f-bdf6-d8de373cd8e9"],

Cell[BoxData[
 GraphicsBox[{{CircleBox[{1, 1}], CircleBox[{1, 2}], CircleBox[{1, 3}], 
    CircleBox[{1, 4}], CircleBox[{1, 5}], CircleBox[{1, 6}], 
    CircleBox[{1, 7}], CircleBox[{1, 8}], CircleBox[{1, 9}], 
    CircleBox[{1, 10}]}, {CircleBox[{2, 1}], CircleBox[{2, 2}], 
    CircleBox[{2, 3}], CircleBox[{2, 4}], CircleBox[{2, 5}], 
    CircleBox[{2, 6}], CircleBox[{2, 7}], CircleBox[{2, 8}], 
    CircleBox[{2, 9}], CircleBox[{2, 10}]}, {CircleBox[{3, 1}], 
    CircleBox[{3, 2}], CircleBox[{3, 3}], CircleBox[{3, 4}], 
    CircleBox[{3, 5}], CircleBox[{3, 6}], CircleBox[{3, 7}], 
    CircleBox[{3, 8}], CircleBox[{3, 9}], CircleBox[{3, 10}]}, {
    CircleBox[{4, 1}], CircleBox[{4, 2}], CircleBox[{4, 3}], 
    CircleBox[{4, 4}], CircleBox[{4, 5}], CircleBox[{4, 6}], 
    CircleBox[{4, 7}], CircleBox[{4, 8}], CircleBox[{4, 9}], 
    CircleBox[{4, 10}]}, {CircleBox[{5, 1}], CircleBox[{5, 2}], 
    CircleBox[{5, 3}], CircleBox[{5, 4}], CircleBox[{5, 5}], 
    CircleBox[{5, 6}], CircleBox[{5, 7}], CircleBox[{5, 8}], 
    CircleBox[{5, 9}], CircleBox[{5, 10}]}, {CircleBox[{6, 1}], 
    CircleBox[{6, 2}], CircleBox[{6, 3}], CircleBox[{6, 4}], 
    CircleBox[{6, 5}], CircleBox[{6, 6}], CircleBox[{6, 7}], 
    CircleBox[{6, 8}], CircleBox[{6, 9}], CircleBox[{6, 10}]}, {
    CircleBox[{7, 1}], CircleBox[{7, 2}], CircleBox[{7, 3}], 
    CircleBox[{7, 4}], CircleBox[{7, 5}], CircleBox[{7, 6}], 
    CircleBox[{7, 7}], CircleBox[{7, 8}], CircleBox[{7, 9}], 
    CircleBox[{7, 10}]}, {CircleBox[{8, 1}], CircleBox[{8, 2}], 
    CircleBox[{8, 3}], CircleBox[{8, 4}], CircleBox[{8, 5}], 
    CircleBox[{8, 6}], CircleBox[{8, 7}], CircleBox[{8, 8}], 
    CircleBox[{8, 9}], CircleBox[{8, 10}]}, {CircleBox[{9, 1}], 
    CircleBox[{9, 2}], CircleBox[{9, 3}], CircleBox[{9, 4}], 
    CircleBox[{9, 5}], CircleBox[{9, 6}], CircleBox[{9, 7}], 
    CircleBox[{9, 8}], CircleBox[{9, 9}], CircleBox[{9, 10}]}, {
    CircleBox[{10, 1}], CircleBox[{10, 2}], CircleBox[{10, 3}], 
    CircleBox[{10, 4}], CircleBox[{10, 5}], CircleBox[{10, 6}], 
    CircleBox[{10, 7}], CircleBox[{10, 8}], CircleBox[{10, 9}], 
    CircleBox[{10, 10}]}}]], "Output",
 CellChangeTimes->{3.93304511936385*^9, 3.933045169961187*^9, 
  3.93309293555685*^9, 3.933179880313223*^9, 3.933186383270523*^9, 
  3.933187606287635*^9, 3.933273864046978*^9, 3.9332739030446243`*^9, 
  3.933274050179103*^9, 3.933275227486978*^9, 3.933366525994954*^9, 
  3.933711813460628*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"05efa38a-ccdb-4ee9-a5bb-df3923c8f700"]
}, Open  ]],

Cell["\<\
Q4. Make a 10\[Times]10 grid of points with coordinates at integer positions \
up to 10.\
\>", "CodeText",
 CellChangeTimes->{{3.933044981954609*^9, 3.9330449829879637`*^9}, {
   3.9330450176513767`*^9, 3.9330450320914183`*^9}, {3.933045084826315*^9, 
   3.9330450895412827`*^9}, {3.933045185601613*^9, 3.933045192555925*^9}, 
   3.933045637337912*^9, {3.933092949604866*^9, 3.9330929544290657`*^9}, 
   3.933179895300529*^9, 3.933186393195125*^9, 3.933187619495668*^9, 
   3.93327387533532*^9, {3.933275235272347*^9, 3.933275236219849*^9}, 
   3.933275282627016*^9, 3.933366536638393*^9, 
   3.933711854768464*^9},ExpressionUUID->"a8859051-b98e-44a3-b579-\
c3d56e57cd1e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Point", "[", 
     RowBox[{"{", 
      RowBox[{"i", ",", "j"}], "}"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "10"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "10"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.933045196880291*^9, 3.933045198105199*^9}, {
  3.9330929558403273`*^9, 3.9330929615395603`*^9}, {3.9331799014291897`*^9, 
  3.933179907683096*^9}, {3.933180475383464*^9, 3.933180475949798*^9}, {
  3.933186407382338*^9, 3.933186411210795*^9}, {3.933187629106381*^9, 
  3.9331876417554417`*^9}, {3.933273882751553*^9, 3.933273885385454*^9}, {
  3.933275240876005*^9, 3.933275261654573*^9}, {3.933366545833352*^9, 
  3.933366584608498*^9}, {3.9337118631741953`*^9, 3.9337118742509127`*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"5ea1b8aa-02a1-46a1-bf8f-794e694c64e7"],

Cell[BoxData[
 GraphicsBox[{{PointBox[{1, 1}], PointBox[{1, 2}], PointBox[{1, 3}], 
    PointBox[{1, 4}], PointBox[{1, 5}], PointBox[{1, 6}], PointBox[{1, 7}], 
    PointBox[{1, 8}], PointBox[{1, 9}], PointBox[{1, 10}]}, {PointBox[{2, 1}],
     PointBox[{2, 2}], PointBox[{2, 3}], PointBox[{2, 4}], PointBox[{2, 5}], 
    PointBox[{2, 6}], PointBox[{2, 7}], PointBox[{2, 8}], PointBox[{2, 9}], 
    PointBox[{2, 10}]}, {PointBox[{3, 1}], PointBox[{3, 2}], PointBox[{3, 3}],
     PointBox[{3, 4}], PointBox[{3, 5}], PointBox[{3, 6}], PointBox[{3, 7}], 
    PointBox[{3, 8}], PointBox[{3, 9}], PointBox[{3, 10}]}, {PointBox[{4, 1}],
     PointBox[{4, 2}], PointBox[{4, 3}], PointBox[{4, 4}], PointBox[{4, 5}], 
    PointBox[{4, 6}], PointBox[{4, 7}], PointBox[{4, 8}], PointBox[{4, 9}], 
    PointBox[{4, 10}]}, {PointBox[{5, 1}], PointBox[{5, 2}], PointBox[{5, 3}],
     PointBox[{5, 4}], PointBox[{5, 5}], PointBox[{5, 6}], PointBox[{5, 7}], 
    PointBox[{5, 8}], PointBox[{5, 9}], PointBox[{5, 10}]}, {PointBox[{6, 1}],
     PointBox[{6, 2}], PointBox[{6, 3}], PointBox[{6, 4}], PointBox[{6, 5}], 
    PointBox[{6, 6}], PointBox[{6, 7}], PointBox[{6, 8}], PointBox[{6, 9}], 
    PointBox[{6, 10}]}, {PointBox[{7, 1}], PointBox[{7, 2}], PointBox[{7, 3}],
     PointBox[{7, 4}], PointBox[{7, 5}], PointBox[{7, 6}], PointBox[{7, 7}], 
    PointBox[{7, 8}], PointBox[{7, 9}], PointBox[{7, 10}]}, {PointBox[{8, 1}],
     PointBox[{8, 2}], PointBox[{8, 3}], PointBox[{8, 4}], PointBox[{8, 5}], 
    PointBox[{8, 6}], PointBox[{8, 7}], PointBox[{8, 8}], PointBox[{8, 9}], 
    PointBox[{8, 10}]}, {PointBox[{9, 1}], PointBox[{9, 2}], PointBox[{9, 3}],
     PointBox[{9, 4}], PointBox[{9, 5}], PointBox[{9, 6}], PointBox[{9, 7}], 
    PointBox[{9, 8}], PointBox[{9, 9}], PointBox[{9, 10}]}, {
    PointBox[{10, 1}], PointBox[{10, 2}], PointBox[{10, 3}], 
    PointBox[{10, 4}], PointBox[{10, 5}], PointBox[{10, 6}], 
    PointBox[{10, 7}], PointBox[{10, 8}], PointBox[{10, 9}], 
    PointBox[{10, 10}]}}]], "Output",
 CellChangeTimes->{
  3.933045198715712*^9, 3.933092962435878*^9, 3.933179908348542*^9, 
   3.93318047649053*^9, 3.933186412577729*^9, 3.933187642236689*^9, 
   3.93327388585631*^9, {3.933275252224763*^9, 3.933275262670959*^9}, {
   3.9333665727707987`*^9, 3.933366585483659*^9}, 3.933711875643709*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"d9068cf3-9efb-4fe3-9f22-a9eed9afa372"]
}, Open  ]],

Cell["\<\
Q5. Make a Manipulate with between 1 and 20 concentric circles.\
\>", "CodeText",
 CellChangeTimes->{{3.933044981954609*^9, 3.9330449829879637`*^9}, {
   3.9330450176513767`*^9, 3.9330450320914183`*^9}, {3.933045084826315*^9, 
   3.9330450895412827`*^9}, {3.933045203578677*^9, 3.93304522593603*^9}, 
   3.933045635790896*^9, 3.93309298548409*^9, 3.933179919442513*^9, 
   3.933186419723145*^9, 3.933187652915406*^9, 3.933273914763538*^9, {
   3.933275277180876*^9, 3.933275281160717*^9}, 3.933366597148642*^9, 
   3.9337118893609533`*^9},ExpressionUUID->"5bacb8c7-a53a-4a77-9045-\
7169201206ec"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Graphics", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Circle", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", "#"}], "]"}], "&"}], "/@", 
     RowBox[{"Range", "[", "n", "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "1", ",", "20", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9330452161959753`*^9, 3.933045222768099*^9}, {
  3.933092990272451*^9, 3.933092994707386*^9}, {3.933179921736372*^9, 
  3.933179932312632*^9}, {3.9331864369767933`*^9, 3.933186447973238*^9}, {
  3.933187659056711*^9, 3.933187673907609*^9}, {3.933273919331325*^9, 
  3.9332739284506903`*^9}, {3.93327529688512*^9, 3.9332753296718893`*^9}, {
  3.933366606659794*^9, 3.933366637788377*^9}, {3.9337119012117577`*^9, 
  3.933711915288591*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"38326284-39fd-4921-81cf-815a315319a2"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`n$$ = 4, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`n$$], 1, 20, 1}}, Typeset`size$$ = {
    360., {177., 182.42399999999998`}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`n$$ = 1}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Graphics[
        Map[Circle[{0, 0}, #]& , 
         Range[$CellContext`n$$]]], 
      "Specifications" :> {{$CellContext`n$$, 1, 20, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{406., {221.6875, 227.3125}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.933045227819075*^9, 3.933092995158175*^9, 3.933179933117339*^9, 
   3.933186448659341*^9, {3.933187664402978*^9, 3.933187674852688*^9}, 
   3.933273928778553*^9, {3.9332753269953957`*^9, 3.933275329946458*^9}, 
   3.933366638097945*^9, 3.9337119158527403`*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"805750b5-e157-4f5a-b8a9-c1003021e2ef"]
}, Open  ]],

Cell["\<\
Q6. Place 50 spheres with random colours at random integer coordinates up to \
10.\
\>", "CodeText",
 CellChangeTimes->{{3.933044981954609*^9, 3.9330449829879637`*^9}, {
   3.9330450176513767`*^9, 3.9330450320914183`*^9}, {3.933045084826315*^9, 
   3.9330450895412827`*^9}, {3.933045203578677*^9, 3.93304522593603*^9}, 
   3.933045635790896*^9, 3.93309298548409*^9, {3.933179919442513*^9, 
   3.933179950522543*^9}, {3.933186459312559*^9, 3.933186461254586*^9}, 
   3.933187694466559*^9, 3.9332739425423737`*^9, 3.9332753390966463`*^9, 
   3.933275370218625*^9, 3.933366645821126*^9, {3.933711932691123*^9, 
   3.933711935707561*^9}},ExpressionUUID->"56b7d38b-aa0e-4e92-8716-\
54b540714e5d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics3D", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Style", "[", 
     RowBox[{
      RowBox[{"Sphere", "[", 
       RowBox[{"RandomInteger", "[", 
        RowBox[{"10", ",", "3"}], "]"}], "]"}], ",", 
      RowBox[{"RandomColor", "[", "]"}]}], "]"}], ",", "50"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9330452161959753`*^9, 3.933045222768099*^9}, {
  3.933092990272451*^9, 3.933092994707386*^9}, {3.933179921736372*^9, 
  3.933179932312632*^9}, {3.933180507400897*^9, 3.9331805215854263`*^9}, {
  3.933186469087304*^9, 3.933186478724206*^9}, {3.933187113961033*^9, 
  3.933187141516725*^9}, {3.93318770582729*^9, 3.933187713834647*^9}, {
  3.933273952378022*^9, 3.933273960532893*^9}, {3.933275346311891*^9, 
  3.933275367449388*^9}, {3.9333666955793247`*^9, 3.933366742952993*^9}, {
  3.9337119517975597`*^9, 3.9337120384445257`*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"c552233f-49e4-4283-a8b6-4ee7962ee925"],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[
    0.11941223519569655`, 0.42346621624411274`, 0.25180493929335745`], 
    SphereBox[{4, 6, 4}]}, 
   {RGBColor[0.7453953947860466, 0.006933060050780648, 0.4545934687602293], 
    SphereBox[{9, 8, 4}]}, 
   {RGBColor[0.6728001621284632, 0.21804900915898418`, 0.9645678297420333], 
    SphereBox[{3, 1, 9}]}, 
   {RGBColor[0.32374838266538, 0.7498993474628137, 0.9067875158521017], 
    SphereBox[{3, 7, 8}]}, 
   {RGBColor[0.8683017125375296, 0.25332267064764924`, 0.3721451873143897], 
    SphereBox[{6, 4, 0}]}, 
   {RGBColor[0.4486361820336364, 0.8184587394232472, 0.5534851774376526], 
    SphereBox[{8, 1, 1}]}, 
   {RGBColor[0.8410372230873704, 0.4664545688888442, 0.39778861582922453`], 
    SphereBox[{4, 7, 4}]}, 
   {RGBColor[0.1389910733010351, 0.16991330332440735`, 0.553800547975217], 
    SphereBox[{2, 3, 8}]}, 
   {RGBColor[0.8630791371036142, 0.5104296628168072, 0.2409936095260108], 
    SphereBox[{1, 9, 10}]}, 
   {RGBColor[0.6334121283293583, 0.16869992970346992`, 0.7044185454897349], 
    SphereBox[{4, 2, 4}]}, 
   {RGBColor[0.7700638179564447, 0.12459679448278593`, 0.6851137929292721], 
    SphereBox[{5, 1, 0}]}, 
   {RGBColor[0.3961588195192034, 0.12014019495402817`, 0.9107175258236091], 
    SphereBox[{10, 10, 7}]}, 
   {RGBColor[0.7793836479138836, 0.7283880820115811, 0.14963310897451576`], 
    SphereBox[{5, 0, 3}]}, 
   {RGBColor[0.09047901215336673, 0.6494730056443925, 0.24091581350419888`], 
    SphereBox[{1, 10, 10}]}, 
   {RGBColor[0.7256194215023692, 0.05032055856153428, 0.8192288692606038], 
    SphereBox[{8, 7, 9}]}, 
   {RGBColor[0.9026850670880839, 0.8659339095662701, 0.2659340809482331], 
    SphereBox[{7, 0, 2}]}, 
   {RGBColor[0.6977624981795645, 0.4174397144227433, 0.9398076778388289], 
    SphereBox[{5, 2, 0}]}, 
   {RGBColor[0.003982001179250183, 0.758302163099225, 0.1976730571293912], 
    SphereBox[{10, 9, 1}]}, 
   {RGBColor[0.09276781392840383, 0.08413595965255904, 0.0925835954232972], 
    SphereBox[{10, 7, 4}]}, 
   {RGBColor[0.9815654014267259, 0.06328801023982855, 0.5812483071761216], 
    SphereBox[{3, 7, 2}]}, 
   {RGBColor[0.8257480095807401, 0.3734393580061206, 0.6969702175216594], 
    SphereBox[{2, 0, 10}]}, 
   {RGBColor[0.7382695115006614, 0.3980258242906318, 0.4805706555796714], 
    SphereBox[{9, 2, 5}]}, 
   {RGBColor[0.366926887405419, 0.36155046176170336`, 0.960262899523916], 
    SphereBox[{10, 9, 4}]}, 
   {RGBColor[0.47852455429754914`, 0.37696554828894646`, 0.8002277357019405], 
    SphereBox[{7, 8, 10}]}, 
   {RGBColor[0.3212012400444777, 0.7506008926233088, 0.275668367092031], 
    SphereBox[{4, 2, 5}]}, 
   {RGBColor[0.23415332778835696`, 0.03596037136190544, 0.4155721959417493], 
    SphereBox[{0, 9, 3}]}, 
   {RGBColor[0.3397662070448888, 0.7817541836297177, 0.7960141704752175], 
    SphereBox[{0, 1, 10}]}, 
   {RGBColor[0.7541350644840763, 0.78389093725508, 0.6270345684705081], 
    SphereBox[{0, 9, 6}]}, 
   {RGBColor[0.8876302461306549, 0.6061994624689486, 0.5826806585946578], 
    SphereBox[{0, 9, 3}]}, 
   {RGBColor[0.5027368146039284, 0.7804722535099289, 0.8380560720844035], 
    SphereBox[{5, 6, 10}]}, 
   {RGBColor[0.06800506730752964, 0.5113615472150372, 0.45068948836596845`], 
    SphereBox[{5, 3, 8}]}, 
   {RGBColor[0.09827794695878023, 0.08085640893038559, 0.6087018018245349], 
    SphereBox[{5, 3, 10}]}, 
   {RGBColor[0.5484187117943924, 0.565900417322464, 0.0006754048333696971], 
    SphereBox[{6, 10, 4}]}, 
   {RGBColor[0.516451413563976, 0.027533241895524085`, 0.9216093873634115], 
    SphereBox[{7, 0, 1}]}, 
   {RGBColor[0.28449368139397957`, 0.08757792624251737, 0.05699501092657466], 
    SphereBox[{9, 1, 4}]}, 
   {RGBColor[0.2635562967549696, 0.829468380824522, 0.3627387190151139], 
    SphereBox[{8, 2, 6}]}, 
   {RGBColor[0.9357959827676579, 0.009963064455533521, 0.6546302074110029], 
    SphereBox[{10, 2, 3}]}, 
   {RGBColor[0.6344759067041172, 0.6096802319083101, 0.07608040395026072], 
    SphereBox[{0, 4, 9}]}, 
   {RGBColor[0.812434273455408, 0.7566646092608171, 0.7108101880681978], 
    SphereBox[{2, 9, 6}]}, 
   {RGBColor[0.5184968629485633, 0.6686890277901572, 0.6089699735721448], 
    SphereBox[{9, 0, 3}]}, 
   {RGBColor[0.7885336741858435, 0.5921640476701244, 0.5679232558260685], 
    SphereBox[{1, 6, 3}]}, 
   {RGBColor[0.9717365736448589, 0.8527797333595699, 0.1719495825560413], 
    SphereBox[{5, 2, 0}]}, 
   {RGBColor[0.5755203263501836, 0.25996491985790615`, 0.8391693678791381], 
    SphereBox[{6, 6, 4}]}, 
   {RGBColor[0.051805210867547746`, 0.7418269180473465, 0.8706858175022683], 
    SphereBox[{5, 8, 0}]}, 
   {RGBColor[0.08780434464450182, 0.885606205743271, 0.6879012051761668], 
    SphereBox[{0, 5, 3}]}, 
   {RGBColor[0.8679084705510123, 0.7763417892599385, 0.4675127055915005], 
    SphereBox[{1, 7, 9}]}, 
   {RGBColor[0.5103862980874203, 0.062478050486652226`, 0.31595736134927344`],
     SphereBox[{10, 3, 2}]}, 
   {RGBColor[0.3415677569364677, 0.47308331076555743`, 0.3978413598458459], 
    SphereBox[{5, 5, 8}]}, 
   {RGBColor[0.8297365044313059, 0.11801839893689903`, 0.6937426550953985], 
    SphereBox[{4, 3, 9}]}, 
   {RGBColor[0.5845666808850829, 0.9683526743266844, 0.5248596418149498], 
    SphereBox[{5, 5, 9}]}}]], "Output",
 CellChangeTimes->{3.9337120388191547`*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"f966664e-b66e-4925-b33b-a813418a96e6"]
}, Open  ]],

Cell["\<\
Q7. Make a 10\[Times]10\[Times]10 array of spheres with RGB components \
ranging from 0 to 1. The spheres should be centered at integer coordinates, \
and should just touch each other.\
\>", "CodeText",
 CellChangeTimes->{{3.933044981954609*^9, 3.9330449829879637`*^9}, {
   3.9330450176513767`*^9, 3.9330450320914183`*^9}, {3.933045084826315*^9, 
   3.9330450895412827`*^9}, {3.933045203578677*^9, 3.93304522593603*^9}, 
   3.933045635790896*^9, 3.93309298548409*^9, {3.933179919442513*^9, 
   3.933179950522543*^9}, {3.9331800246437483`*^9, 3.933180026218544*^9}, 
   3.933186491489092*^9, {3.933187726579035*^9, 3.933187739975668*^9}, 
   3.9332739713886633`*^9, 3.933275384173807*^9, 3.9332755193526154`*^9, 
   3.933366780784316*^9, 
   3.933712053024065*^9},ExpressionUUID->"b578ceab-39b5-492a-ba7e-\
78f27a53f278"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics3D", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Style", "[", 
     RowBox[{
      RowBox[{"Sphere", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"i", ",", "j", ",", "k"}], "}"}], ",", "0.5"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{
        FractionBox["i", "10"], ",", 
        FractionBox["j", "10"], ",", 
        FractionBox["k", "10"]}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "10"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "10"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "10"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9330452161959753`*^9, 3.933045222768099*^9}, {
  3.933092990272451*^9, 3.933092994707386*^9}, {3.933179921736372*^9, 
  3.933179932312632*^9}, {3.933180042114746*^9, 3.9331800476925*^9}, {
  3.933186509439237*^9, 3.9331865331397333`*^9}, {3.933186571465776*^9, 
  3.9331865753666477`*^9}, {3.933187745017213*^9, 3.9331877512264*^9}, {
  3.9332739896313457`*^9, 3.933274016164159*^9}, {3.933275395704958*^9, 
  3.933275432923729*^9}, {3.933366782588698*^9, 3.933366794214595*^9}, {
  3.933712072741611*^9, 3.933712131965371*^9}, {3.93371224589256*^9, 
  3.93371232938308*^9}, {3.93371236095162*^9, 3.933712371705418*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"dc7f5bc8-eaf8-4803-8f88-22e3f589c946"],

Cell[BoxData[
 Graphics3DBox[{{{
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{1, 1, 1}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{1, 1, 2}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{1, 1, 3}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{1, 1, 4}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{1, 1, 5}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{1, 1, 6}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{1, 1, 7}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{1, 1, 8}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{1, 1, 9}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 10], 0.1], 1], SphereBox[{1, 1, 10}, 0.5]}}, {
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{1, 2, 1}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{1, 2, 2}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{1, 2, 3}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{1, 2, 4}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{1, 2, 5}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{1, 2, 6}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{1, 2, 7}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{1, 2, 8}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{1, 2, 9}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 5], 0.2], 1], SphereBox[{1, 2, 10}, 0.5]}}, {
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{1, 3, 1}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{1, 3, 2}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{1, 3, 3}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{1, 3, 4}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{1, 3, 5}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{1, 3, 6}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{1, 3, 7}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{1, 3, 8}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{1, 3, 9}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[3, 10], 0.3], 1], SphereBox[{1, 3, 10}, 0.5]}}, {
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{1, 4, 1}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{1, 4, 2}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{1, 4, 3}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{1, 4, 4}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{1, 4, 5}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{1, 4, 6}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{1, 4, 7}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{1, 4, 8}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{1, 4, 9}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[2, 5], 0.4], 1], SphereBox[{1, 4, 10}, 0.5]}}, {
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{1, 5, 1}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{1, 5, 2}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{1, 5, 3}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{1, 5, 4}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{1, 5, 5}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{1, 5, 6}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{1, 5, 7}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{1, 5, 8}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{1, 5, 9}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 2], 0.5], 1], SphereBox[{1, 5, 10}, 0.5]}}, {
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{1, 6, 1}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{1, 6, 2}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{1, 6, 3}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{1, 6, 4}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{1, 6, 5}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{1, 6, 6}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{1, 6, 7}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{1, 6, 8}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{1, 6, 9}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[3, 5], 0.6], 1], SphereBox[{1, 6, 10}, 0.5]}}, {
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{1, 7, 1}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{1, 7, 2}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{1, 7, 3}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{1, 7, 4}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{1, 7, 5}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{1, 7, 6}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{1, 7, 7}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{1, 7, 8}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{1, 7, 9}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[7, 10], 0.7], 1], SphereBox[{1, 7, 10}, 0.5]}}, {
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{1, 8, 1}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{1, 8, 2}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{1, 8, 3}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{1, 8, 4}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{1, 8, 5}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{1, 8, 6}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{1, 8, 7}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{1, 8, 8}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{1, 8, 9}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[4, 5], 0.8], 1], SphereBox[{1, 8, 10}, 0.5]}}, {
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{1, 9, 1}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{1, 9, 2}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{1, 9, 3}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{1, 9, 4}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{1, 9, 5}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{1, 9, 6}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{1, 9, 7}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{1, 9, 8}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{1, 9, 9}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[9, 10], 0.9], 1], SphereBox[{1, 9, 10}, 0.5]}}, {
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 1, 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{1, 10, 1}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 1, 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{1, 10, 2}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 1, 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{1, 10, 3}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 1, 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{1, 10, 4}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 1, 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{1, 10, 5}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 1, 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{1, 10, 6}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 1, 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{1, 10, 7}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 1, 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{1, 10, 8}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 1, 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{1, 10, 9}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 1, 1], SphereBox[{1, 10, 10}, 0.5]}}}, {{
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{2, 1, 1}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{2, 1, 2}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{2, 1, 3}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{2, 1, 4}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{2, 1, 5}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{2, 1, 6}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{2, 1, 7}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{2, 1, 8}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{2, 1, 9}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 10], 0.1], 1], SphereBox[{2, 1, 10}, 0.5]}}, {
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{2, 2, 1}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{2, 2, 2}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{2, 2, 3}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{2, 2, 4}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{2, 2, 5}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{2, 2, 6}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{2, 2, 7}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{2, 2, 8}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{2, 2, 9}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 5], 0.2], 1], SphereBox[{2, 2, 10}, 0.5]}}, {
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{2, 3, 1}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{2, 3, 2}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{2, 3, 3}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{2, 3, 4}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{2, 3, 5}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{2, 3, 6}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{2, 3, 7}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{2, 3, 8}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{2, 3, 9}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[3, 10], 0.3], 1], SphereBox[{2, 3, 10}, 0.5]}}, {
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{2, 4, 1}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{2, 4, 2}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{2, 4, 3}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{2, 4, 4}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{2, 4, 5}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{2, 4, 6}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{2, 4, 7}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{2, 4, 8}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{2, 4, 9}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[2, 5], 0.4], 1], SphereBox[{2, 4, 10}, 0.5]}}, {
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{2, 5, 1}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{2, 5, 2}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{2, 5, 3}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{2, 5, 4}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{2, 5, 5}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{2, 5, 6}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{2, 5, 7}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{2, 5, 8}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{2, 5, 9}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 2], 0.5], 1], SphereBox[{2, 5, 10}, 0.5]}}, {
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{2, 6, 1}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{2, 6, 2}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{2, 6, 3}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{2, 6, 4}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{2, 6, 5}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{2, 6, 6}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{2, 6, 7}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{2, 6, 8}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{2, 6, 9}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[3, 5], 0.6], 1], SphereBox[{2, 6, 10}, 0.5]}}, {
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{2, 7, 1}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{2, 7, 2}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{2, 7, 3}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{2, 7, 4}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{2, 7, 5}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{2, 7, 6}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{2, 7, 7}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{2, 7, 8}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{2, 7, 9}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[7, 10], 0.7], 1], SphereBox[{2, 7, 10}, 0.5]}}, {
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{2, 8, 1}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{2, 8, 2}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{2, 8, 3}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{2, 8, 4}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{2, 8, 5}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{2, 8, 6}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{2, 8, 7}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{2, 8, 8}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{2, 8, 9}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[4, 5], 0.8], 1], SphereBox[{2, 8, 10}, 0.5]}}, {
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{2, 9, 1}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{2, 9, 2}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{2, 9, 3}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{2, 9, 4}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{2, 9, 5}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{2, 9, 6}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{2, 9, 7}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{2, 9, 8}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{2, 9, 9}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[9, 10], 0.9], 1], SphereBox[{2, 9, 10}, 0.5]}}, {
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 1, 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{2, 10, 1}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 1, 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{2, 10, 2}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 1, 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{2, 10, 3}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 1, 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{2, 10, 4}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 1, 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{2, 10, 5}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 1, 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{2, 10, 6}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 1, 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{2, 10, 7}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 1, 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{2, 10, 8}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 1, 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{2, 10, 9}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 1, 1], SphereBox[{2, 10, 10}, 0.5]}}}, {{
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{3, 1, 1}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{3, 1, 2}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{3, 1, 3}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{3, 1, 4}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{3, 1, 5}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{3, 1, 6}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{3, 1, 7}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{3, 1, 8}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{3, 1, 9}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 10], 0.1], 1], SphereBox[{3, 1, 10}, 0.5]}}, {
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{3, 2, 1}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{3, 2, 2}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{3, 2, 3}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{3, 2, 4}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{3, 2, 5}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{3, 2, 6}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{3, 2, 7}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{3, 2, 8}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{3, 2, 9}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 5], 0.2], 1], SphereBox[{3, 2, 10}, 0.5]}}, {
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{3, 3, 1}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{3, 3, 2}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{3, 3, 3}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{3, 3, 4}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{3, 3, 5}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{3, 3, 6}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{3, 3, 7}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{3, 3, 8}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{3, 3, 9}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[3, 10], 0.3], 1], SphereBox[{3, 3, 10}, 0.5]}}, {
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{3, 4, 1}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{3, 4, 2}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{3, 4, 3}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{3, 4, 4}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{3, 4, 5}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{3, 4, 6}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{3, 4, 7}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{3, 4, 8}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{3, 4, 9}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[2, 5], 0.4], 1], SphereBox[{3, 4, 10}, 0.5]}}, {
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{3, 5, 1}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{3, 5, 2}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{3, 5, 3}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{3, 5, 4}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{3, 5, 5}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{3, 5, 6}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{3, 5, 7}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{3, 5, 8}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{3, 5, 9}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 2], 0.5], 1], SphereBox[{3, 5, 10}, 0.5]}}, {
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{3, 6, 1}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{3, 6, 2}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{3, 6, 3}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{3, 6, 4}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{3, 6, 5}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{3, 6, 6}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{3, 6, 7}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{3, 6, 8}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{3, 6, 9}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[3, 5], 0.6], 1], SphereBox[{3, 6, 10}, 0.5]}}, {
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{3, 7, 1}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{3, 7, 2}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{3, 7, 3}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{3, 7, 4}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{3, 7, 5}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{3, 7, 6}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{3, 7, 7}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{3, 7, 8}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{3, 7, 9}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[7, 10], 0.7], 1], SphereBox[{3, 7, 10}, 0.5]}}, {
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{3, 8, 1}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{3, 8, 2}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{3, 8, 3}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{3, 8, 4}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{3, 8, 5}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{3, 8, 6}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{3, 8, 7}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{3, 8, 8}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{3, 8, 9}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[4, 5], 0.8], 1], SphereBox[{3, 8, 10}, 0.5]}}, {
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{3, 9, 1}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{3, 9, 2}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{3, 9, 3}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{3, 9, 4}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{3, 9, 5}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{3, 9, 6}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{3, 9, 7}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{3, 9, 8}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{3, 9, 9}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[9, 10], 0.9], 1], SphereBox[{3, 9, 10}, 0.5]}}, {
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 1, 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{3, 10, 1}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 1, 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{3, 10, 2}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 1, 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{3, 10, 3}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 1, 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{3, 10, 4}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 1, 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{3, 10, 5}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 1, 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{3, 10, 6}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 1, 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{3, 10, 7}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 1, 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{3, 10, 8}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 1, 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{3, 10, 9}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 1, 1], SphereBox[{3, 10, 10}, 0.5]}}}, {{
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{4, 1, 1}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{4, 1, 2}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{4, 1, 3}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{4, 1, 4}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{4, 1, 5}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{4, 1, 6}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{4, 1, 7}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{4, 1, 8}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{4, 1, 9}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 10], 0.1], 1], SphereBox[{4, 1, 10}, 0.5]}}, {
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{4, 2, 1}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{4, 2, 2}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{4, 2, 3}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{4, 2, 4}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{4, 2, 5}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{4, 2, 6}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{4, 2, 7}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{4, 2, 8}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{4, 2, 9}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 5], 0.2], 1], SphereBox[{4, 2, 10}, 0.5]}}, {
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{4, 3, 1}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{4, 3, 2}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{4, 3, 3}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{4, 3, 4}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{4, 3, 5}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{4, 3, 6}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{4, 3, 7}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{4, 3, 8}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{4, 3, 9}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[3, 10], 0.3], 1], SphereBox[{4, 3, 10}, 0.5]}}, {
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{4, 4, 1}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{4, 4, 2}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{4, 4, 3}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{4, 4, 4}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{4, 4, 5}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{4, 4, 6}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{4, 4, 7}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{4, 4, 8}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{4, 4, 9}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[2, 5], 0.4], 1], SphereBox[{4, 4, 10}, 0.5]}}, {
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{4, 5, 1}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{4, 5, 2}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{4, 5, 3}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{4, 5, 4}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{4, 5, 5}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{4, 5, 6}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{4, 5, 7}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{4, 5, 8}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{4, 5, 9}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 2], 0.5], 1], SphereBox[{4, 5, 10}, 0.5]}}, {
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{4, 6, 1}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{4, 6, 2}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{4, 6, 3}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{4, 6, 4}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{4, 6, 5}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{4, 6, 6}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{4, 6, 7}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{4, 6, 8}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{4, 6, 9}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[3, 5], 0.6], 1], SphereBox[{4, 6, 10}, 0.5]}}, {
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{4, 7, 1}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{4, 7, 2}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{4, 7, 3}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{4, 7, 4}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{4, 7, 5}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{4, 7, 6}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{4, 7, 7}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{4, 7, 8}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{4, 7, 9}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[7, 10], 0.7], 1], SphereBox[{4, 7, 10}, 0.5]}}, {
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{4, 8, 1}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{4, 8, 2}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{4, 8, 3}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{4, 8, 4}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{4, 8, 5}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{4, 8, 6}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{4, 8, 7}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{4, 8, 8}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{4, 8, 9}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[4, 5], 0.8], 1], SphereBox[{4, 8, 10}, 0.5]}}, {
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{4, 9, 1}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{4, 9, 2}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{4, 9, 3}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{4, 9, 4}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{4, 9, 5}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{4, 9, 6}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{4, 9, 7}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{4, 9, 8}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{4, 9, 9}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[9, 10], 0.9], 1], SphereBox[{4, 9, 10}, 0.5]}}, {
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 1, 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{4, 10, 1}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 1, 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{4, 10, 2}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 1, 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{4, 10, 3}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 1, 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{4, 10, 4}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 1, 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{4, 10, 5}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 1, 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{4, 10, 6}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 1, 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{4, 10, 7}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 1, 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{4, 10, 8}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 1, 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{4, 10, 9}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 1, 1], SphereBox[{4, 10, 10}, 0.5]}}}, {{
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{5, 1, 1}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{5, 1, 2}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{5, 1, 3}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{5, 1, 4}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{5, 1, 5}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{5, 1, 6}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{5, 1, 7}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{5, 1, 8}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{5, 1, 9}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 10], 0.1], 1], SphereBox[{5, 1, 10}, 0.5]}}, {
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{5, 2, 1}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{5, 2, 2}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{5, 2, 3}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{5, 2, 4}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{5, 2, 5}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{5, 2, 6}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{5, 2, 7}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{5, 2, 8}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{5, 2, 9}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 5], 0.2], 1], SphereBox[{5, 2, 10}, 0.5]}}, {
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{5, 3, 1}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{5, 3, 2}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{5, 3, 3}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{5, 3, 4}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{5, 3, 5}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{5, 3, 6}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{5, 3, 7}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{5, 3, 8}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{5, 3, 9}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[3, 10], 0.3], 1], SphereBox[{5, 3, 10}, 0.5]}}, {
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{5, 4, 1}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{5, 4, 2}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{5, 4, 3}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{5, 4, 4}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{5, 4, 5}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{5, 4, 6}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{5, 4, 7}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{5, 4, 8}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{5, 4, 9}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[2, 5], 0.4], 1], SphereBox[{5, 4, 10}, 0.5]}}, {
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{5, 5, 1}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{5, 5, 2}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{5, 5, 3}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{5, 5, 4}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{5, 5, 5}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{5, 5, 6}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{5, 5, 7}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{5, 5, 8}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{5, 5, 9}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 2], 0.5], 1], SphereBox[{5, 5, 10}, 0.5]}}, {
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{5, 6, 1}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{5, 6, 2}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{5, 6, 3}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{5, 6, 4}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{5, 6, 5}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{5, 6, 6}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{5, 6, 7}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{5, 6, 8}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{5, 6, 9}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[3, 5], 0.6], 1], SphereBox[{5, 6, 10}, 0.5]}}, {
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{5, 7, 1}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{5, 7, 2}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{5, 7, 3}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{5, 7, 4}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{5, 7, 5}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{5, 7, 6}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{5, 7, 7}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{5, 7, 8}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{5, 7, 9}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[7, 10], 0.7], 1], SphereBox[{5, 7, 10}, 0.5]}}, {
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{5, 8, 1}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{5, 8, 2}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{5, 8, 3}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{5, 8, 4}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{5, 8, 5}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{5, 8, 6}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{5, 8, 7}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{5, 8, 8}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{5, 8, 9}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[4, 5], 0.8], 1], SphereBox[{5, 8, 10}, 0.5]}}, {
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{5, 9, 1}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{5, 9, 2}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{5, 9, 3}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{5, 9, 4}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{5, 9, 5}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{5, 9, 6}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{5, 9, 7}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{5, 9, 8}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{5, 9, 9}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[9, 10], 0.9], 1], SphereBox[{5, 9, 10}, 0.5]}}, {
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 1, 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{5, 10, 1}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 1, 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{5, 10, 2}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 1, 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{5, 10, 3}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 1, 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{5, 10, 4}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 1, 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{5, 10, 5}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 1, 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{5, 10, 6}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 1, 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{5, 10, 7}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 1, 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{5, 10, 8}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 1, 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{5, 10, 9}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 1, 1], SphereBox[{5, 10, 10}, 0.5]}}}, {{
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{6, 1, 1}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{6, 1, 2}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{6, 1, 3}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{6, 1, 4}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{6, 1, 5}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{6, 1, 6}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{6, 1, 7}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{6, 1, 8}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{6, 1, 9}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 10], 0.1], 1], SphereBox[{6, 1, 10}, 0.5]}}, {
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{6, 2, 1}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{6, 2, 2}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{6, 2, 3}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{6, 2, 4}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{6, 2, 5}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{6, 2, 6}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{6, 2, 7}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{6, 2, 8}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{6, 2, 9}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 5], 0.2], 1], SphereBox[{6, 2, 10}, 0.5]}}, {
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{6, 3, 1}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{6, 3, 2}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{6, 3, 3}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{6, 3, 4}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{6, 3, 5}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{6, 3, 6}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{6, 3, 7}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{6, 3, 8}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{6, 3, 9}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[3, 10], 0.3], 1], SphereBox[{6, 3, 10}, 0.5]}}, {
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{6, 4, 1}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{6, 4, 2}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{6, 4, 3}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{6, 4, 4}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{6, 4, 5}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{6, 4, 6}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{6, 4, 7}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{6, 4, 8}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{6, 4, 9}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[2, 5], 0.4], 1], SphereBox[{6, 4, 10}, 0.5]}}, {
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{6, 5, 1}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{6, 5, 2}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{6, 5, 3}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{6, 5, 4}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{6, 5, 5}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{6, 5, 6}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{6, 5, 7}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{6, 5, 8}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{6, 5, 9}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 2], 0.5], 1], SphereBox[{6, 5, 10}, 0.5]}}, {
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{6, 6, 1}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{6, 6, 2}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{6, 6, 3}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{6, 6, 4}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{6, 6, 5}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{6, 6, 6}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{6, 6, 7}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{6, 6, 8}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{6, 6, 9}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[3, 5], 0.6], 1], SphereBox[{6, 6, 10}, 0.5]}}, {
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{6, 7, 1}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{6, 7, 2}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{6, 7, 3}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{6, 7, 4}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{6, 7, 5}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{6, 7, 6}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{6, 7, 7}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{6, 7, 8}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{6, 7, 9}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[7, 10], 0.7], 1], SphereBox[{6, 7, 10}, 0.5]}}, {
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{6, 8, 1}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{6, 8, 2}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{6, 8, 3}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{6, 8, 4}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{6, 8, 5}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{6, 8, 6}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{6, 8, 7}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{6, 8, 8}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{6, 8, 9}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[4, 5], 0.8], 1], SphereBox[{6, 8, 10}, 0.5]}}, {
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{6, 9, 1}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{6, 9, 2}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{6, 9, 3}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{6, 9, 4}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{6, 9, 5}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{6, 9, 6}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{6, 9, 7}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{6, 9, 8}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{6, 9, 9}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[9, 10], 0.9], 1], SphereBox[{6, 9, 10}, 0.5]}}, {
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 1, 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{6, 10, 1}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 1, 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{6, 10, 2}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 1, 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{6, 10, 3}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 1, 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{6, 10, 4}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 1, 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{6, 10, 5}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 1, 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{6, 10, 6}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 1, 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{6, 10, 7}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 1, 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{6, 10, 8}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 1, 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{6, 10, 9}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 1, 1], SphereBox[{6, 10, 10}, 0.5]}}}, {{
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{7, 1, 1}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{7, 1, 2}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{7, 1, 3}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{7, 1, 4}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{7, 1, 5}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{7, 1, 6}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{7, 1, 7}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{7, 1, 8}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{7, 1, 9}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 10], 0.1], 1], SphereBox[{7, 1, 10}, 0.5]}}, {
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{7, 2, 1}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{7, 2, 2}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{7, 2, 3}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{7, 2, 4}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{7, 2, 5}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{7, 2, 6}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{7, 2, 7}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{7, 2, 8}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{7, 2, 9}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 5], 0.2], 1], SphereBox[{7, 2, 10}, 0.5]}}, {
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{7, 3, 1}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{7, 3, 2}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{7, 3, 3}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{7, 3, 4}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{7, 3, 5}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{7, 3, 6}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{7, 3, 7}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{7, 3, 8}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{7, 3, 9}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[3, 10], 0.3], 1], SphereBox[{7, 3, 10}, 0.5]}}, {
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{7, 4, 1}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{7, 4, 2}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{7, 4, 3}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{7, 4, 4}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{7, 4, 5}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{7, 4, 6}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{7, 4, 7}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{7, 4, 8}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{7, 4, 9}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[2, 5], 0.4], 1], SphereBox[{7, 4, 10}, 0.5]}}, {
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{7, 5, 1}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{7, 5, 2}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{7, 5, 3}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{7, 5, 4}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{7, 5, 5}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{7, 5, 6}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{7, 5, 7}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{7, 5, 8}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{7, 5, 9}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 2], 0.5], 1], SphereBox[{7, 5, 10}, 0.5]}}, {
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{7, 6, 1}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{7, 6, 2}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{7, 6, 3}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{7, 6, 4}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{7, 6, 5}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{7, 6, 6}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{7, 6, 7}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{7, 6, 8}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{7, 6, 9}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[3, 5], 0.6], 1], SphereBox[{7, 6, 10}, 0.5]}}, {
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{7, 7, 1}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{7, 7, 2}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{7, 7, 3}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{7, 7, 4}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{7, 7, 5}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{7, 7, 6}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{7, 7, 7}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{7, 7, 8}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{7, 7, 9}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[7, 10], 0.7], 1], SphereBox[{7, 7, 10}, 0.5]}}, {
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{7, 8, 1}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{7, 8, 2}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{7, 8, 3}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{7, 8, 4}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{7, 8, 5}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{7, 8, 6}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{7, 8, 7}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{7, 8, 8}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{7, 8, 9}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[4, 5], 0.8], 1], SphereBox[{7, 8, 10}, 0.5]}}, {
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{7, 9, 1}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{7, 9, 2}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{7, 9, 3}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{7, 9, 4}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{7, 9, 5}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{7, 9, 6}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{7, 9, 7}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{7, 9, 8}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{7, 9, 9}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[9, 10], 0.9], 1], SphereBox[{7, 9, 10}, 0.5]}}, {
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 1, 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{7, 10, 1}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 1, 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{7, 10, 2}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 1, 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{7, 10, 3}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 1, 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{7, 10, 4}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 1, 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{7, 10, 5}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 1, 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{7, 10, 6}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 1, 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{7, 10, 7}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 1, 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{7, 10, 8}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 1, 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{7, 10, 9}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 1, 1], SphereBox[{7, 10, 10}, 0.5]}}}, {{
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{8, 1, 1}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{8, 1, 2}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{8, 1, 3}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{8, 1, 4}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{8, 1, 5}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{8, 1, 6}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{8, 1, 7}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{8, 1, 8}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{8, 1, 9}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 10], 0.1], 1], SphereBox[{8, 1, 10}, 0.5]}}, {
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{8, 2, 1}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{8, 2, 2}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{8, 2, 3}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{8, 2, 4}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{8, 2, 5}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{8, 2, 6}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{8, 2, 7}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{8, 2, 8}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{8, 2, 9}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 5], 0.2], 1], SphereBox[{8, 2, 10}, 0.5]}}, {
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{8, 3, 1}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{8, 3, 2}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{8, 3, 3}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{8, 3, 4}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{8, 3, 5}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{8, 3, 6}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{8, 3, 7}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{8, 3, 8}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{8, 3, 9}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[3, 10], 0.3], 1], SphereBox[{8, 3, 10}, 0.5]}}, {
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{8, 4, 1}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{8, 4, 2}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{8, 4, 3}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{8, 4, 4}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{8, 4, 5}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{8, 4, 6}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{8, 4, 7}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{8, 4, 8}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{8, 4, 9}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[2, 5], 0.4], 1], SphereBox[{8, 4, 10}, 0.5]}}, {
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{8, 5, 1}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{8, 5, 2}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{8, 5, 3}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{8, 5, 4}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{8, 5, 5}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{8, 5, 6}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{8, 5, 7}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{8, 5, 8}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{8, 5, 9}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 2], 0.5], 1], SphereBox[{8, 5, 10}, 0.5]}}, {
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{8, 6, 1}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{8, 6, 2}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{8, 6, 3}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{8, 6, 4}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{8, 6, 5}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{8, 6, 6}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{8, 6, 7}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{8, 6, 8}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{8, 6, 9}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[3, 5], 0.6], 1], SphereBox[{8, 6, 10}, 0.5]}}, {
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{8, 7, 1}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{8, 7, 2}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{8, 7, 3}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{8, 7, 4}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{8, 7, 5}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{8, 7, 6}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{8, 7, 7}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{8, 7, 8}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{8, 7, 9}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[7, 10], 0.7], 1], SphereBox[{8, 7, 10}, 0.5]}}, {
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{8, 8, 1}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{8, 8, 2}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{8, 8, 3}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{8, 8, 4}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{8, 8, 5}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{8, 8, 6}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{8, 8, 7}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{8, 8, 8}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{8, 8, 9}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[4, 5], 0.8], 1], SphereBox[{8, 8, 10}, 0.5]}}, {
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{8, 9, 1}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{8, 9, 2}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{8, 9, 3}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{8, 9, 4}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{8, 9, 5}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{8, 9, 6}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{8, 9, 7}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{8, 9, 8}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{8, 9, 9}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[9, 10], 0.9], 1], SphereBox[{8, 9, 10}, 0.5]}}, {
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 1, 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{8, 10, 1}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 1, 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{8, 10, 2}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 1, 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{8, 10, 3}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 1, 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{8, 10, 4}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 1, 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{8, 10, 5}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 1, 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{8, 10, 6}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 1, 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{8, 10, 7}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 1, 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{8, 10, 8}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 1, 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{8, 10, 9}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 1, 1], SphereBox[{8, 10, 10}, 0.5]}}}, {{
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{9, 1, 1}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{9, 1, 2}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{9, 1, 3}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{9, 1, 4}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{9, 1, 5}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{9, 1, 6}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{9, 1, 7}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{9, 1, 8}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{9, 1, 9}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 10], 0.1], 1], SphereBox[{9, 1, 10}, 0.5]}}, {
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{9, 2, 1}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{9, 2, 2}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{9, 2, 3}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{9, 2, 4}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{9, 2, 5}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{9, 2, 6}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{9, 2, 7}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{9, 2, 8}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{9, 2, 9}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 5], 0.2], 1], SphereBox[{9, 2, 10}, 0.5]}}, {
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{9, 3, 1}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{9, 3, 2}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{9, 3, 3}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{9, 3, 4}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{9, 3, 5}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{9, 3, 6}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{9, 3, 7}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{9, 3, 8}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{9, 3, 9}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[3, 10], 0.3], 1], SphereBox[{9, 3, 10}, 0.5]}}, {
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{9, 4, 1}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{9, 4, 2}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{9, 4, 3}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{9, 4, 4}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{9, 4, 5}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{9, 4, 6}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{9, 4, 7}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{9, 4, 8}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{9, 4, 9}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[2, 5], 0.4], 1], SphereBox[{9, 4, 10}, 0.5]}}, {
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{9, 5, 1}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{9, 5, 2}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{9, 5, 3}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{9, 5, 4}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{9, 5, 5}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{9, 5, 6}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{9, 5, 7}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{9, 5, 8}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{9, 5, 9}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 2], 0.5], 1], SphereBox[{9, 5, 10}, 0.5]}}, {
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{9, 6, 1}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{9, 6, 2}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{9, 6, 3}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{9, 6, 4}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{9, 6, 5}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{9, 6, 6}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{9, 6, 7}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{9, 6, 8}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{9, 6, 9}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[3, 5], 0.6], 1], SphereBox[{9, 6, 10}, 0.5]}}, {
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{9, 7, 1}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{9, 7, 2}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{9, 7, 3}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{9, 7, 4}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{9, 7, 5}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{9, 7, 6}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{9, 7, 7}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{9, 7, 8}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{9, 7, 9}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[7, 10], 0.7], 1], SphereBox[{9, 7, 10}, 0.5]}}, {
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{9, 8, 1}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{9, 8, 2}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{9, 8, 3}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{9, 8, 4}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{9, 8, 5}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{9, 8, 6}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{9, 8, 7}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{9, 8, 8}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{9, 8, 9}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[4, 5], 0.8], 1], SphereBox[{9, 8, 10}, 0.5]}}, {
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{9, 9, 1}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{9, 9, 2}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{9, 9, 3}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{9, 9, 4}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{9, 9, 5}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{9, 9, 6}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{9, 9, 7}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{9, 9, 8}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{9, 9, 9}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[9, 10], 0.9], 1], SphereBox[{9, 9, 10}, 0.5]}}, {
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 1, 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{9, 10, 1}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 1, 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{9, 10, 2}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 1, 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{9, 10, 3}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 1, 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{9, 10, 4}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 1, 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{9, 10, 5}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 1, 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{9, 10, 6}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 1, 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{9, 10, 7}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 1, 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{9, 10, 8}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 1, 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{9, 10, 9}, 0.5]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 1, 1], SphereBox[{9, 10, 10}, 0.5]}}}, {{
     {RGBColor[1, 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{10, 1, 1}, 0.5]}, 
     {RGBColor[1, 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{10, 1, 2}, 0.5]}, 
     {RGBColor[1, 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{10, 1, 3}, 0.5]}, 
     {RGBColor[1, 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{10, 1, 4}, 0.5]}, 
     {RGBColor[1, 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{10, 1, 5}, 0.5]}, 
     {RGBColor[1, 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{10, 1, 6}, 0.5]}, 
     {RGBColor[1, 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{10, 1, 7}, 0.5]}, 
     {RGBColor[1, 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{10, 1, 8}, 0.5]}, 
     {RGBColor[1, 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{10, 1, 9}, 0.5]}, 
     {RGBColor[1, 
       NCache[
        Rational[1, 10], 0.1], 1], SphereBox[{10, 1, 10}, 0.5]}}, {
     {RGBColor[1, 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{10, 2, 1}, 0.5]}, 
     {RGBColor[1, 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{10, 2, 2}, 0.5]}, 
     {RGBColor[1, 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{10, 2, 3}, 0.5]}, 
     {RGBColor[1, 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{10, 2, 4}, 0.5]}, 
     {RGBColor[1, 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{10, 2, 5}, 0.5]}, 
     {RGBColor[1, 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{10, 2, 6}, 0.5]}, 
     {RGBColor[1, 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{10, 2, 7}, 0.5]}, 
     {RGBColor[1, 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{10, 2, 8}, 0.5]}, 
     {RGBColor[1, 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{10, 2, 9}, 0.5]}, 
     {RGBColor[1, 
       NCache[
        Rational[1, 5], 0.2], 1], SphereBox[{10, 2, 10}, 0.5]}}, {
     {RGBColor[1, 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{10, 3, 1}, 0.5]}, 
     {RGBColor[1, 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{10, 3, 2}, 0.5]}, 
     {RGBColor[1, 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{10, 3, 3}, 0.5]}, 
     {RGBColor[1, 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{10, 3, 4}, 0.5]}, 
     {RGBColor[1, 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{10, 3, 5}, 0.5]}, 
     {RGBColor[1, 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{10, 3, 6}, 0.5]}, 
     {RGBColor[1, 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{10, 3, 7}, 0.5]}, 
     {RGBColor[1, 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{10, 3, 8}, 0.5]}, 
     {RGBColor[1, 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{10, 3, 9}, 0.5]}, 
     {RGBColor[1, 
       NCache[
        Rational[3, 10], 0.3], 1], SphereBox[{10, 3, 10}, 0.5]}}, {
     {RGBColor[1, 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{10, 4, 1}, 0.5]}, 
     {RGBColor[1, 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{10, 4, 2}, 0.5]}, 
     {RGBColor[1, 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{10, 4, 3}, 0.5]}, 
     {RGBColor[1, 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{10, 4, 4}, 0.5]}, 
     {RGBColor[1, 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{10, 4, 5}, 0.5]}, 
     {RGBColor[1, 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{10, 4, 6}, 0.5]}, 
     {RGBColor[1, 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{10, 4, 7}, 0.5]}, 
     {RGBColor[1, 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{10, 4, 8}, 0.5]}, 
     {RGBColor[1, 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{10, 4, 9}, 0.5]}, 
     {RGBColor[1, 
       NCache[
        Rational[2, 5], 0.4], 1], SphereBox[{10, 4, 10}, 0.5]}}, {
     {RGBColor[1, 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{10, 5, 1}, 0.5]}, 
     {RGBColor[1, 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{10, 5, 2}, 0.5]}, 
     {RGBColor[1, 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{10, 5, 3}, 0.5]}, 
     {RGBColor[1, 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{10, 5, 4}, 0.5]}, 
     {RGBColor[1, 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{10, 5, 5}, 0.5]}, 
     {RGBColor[1, 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{10, 5, 6}, 0.5]}, 
     {RGBColor[1, 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{10, 5, 7}, 0.5]}, 
     {RGBColor[1, 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{10, 5, 8}, 0.5]}, 
     {RGBColor[1, 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{10, 5, 9}, 0.5]}, 
     {RGBColor[1, 
       NCache[
        Rational[1, 2], 0.5], 1], SphereBox[{10, 5, 10}, 0.5]}}, {
     {RGBColor[1, 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{10, 6, 1}, 0.5]}, 
     {RGBColor[1, 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{10, 6, 2}, 0.5]}, 
     {RGBColor[1, 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{10, 6, 3}, 0.5]}, 
     {RGBColor[1, 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{10, 6, 4}, 0.5]}, 
     {RGBColor[1, 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{10, 6, 5}, 0.5]}, 
     {RGBColor[1, 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{10, 6, 6}, 0.5]}, 
     {RGBColor[1, 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{10, 6, 7}, 0.5]}, 
     {RGBColor[1, 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{10, 6, 8}, 0.5]}, 
     {RGBColor[1, 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{10, 6, 9}, 0.5]}, 
     {RGBColor[1, 
       NCache[
        Rational[3, 5], 0.6], 1], SphereBox[{10, 6, 10}, 0.5]}}, {
     {RGBColor[1, 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{10, 7, 1}, 0.5]}, 
     {RGBColor[1, 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{10, 7, 2}, 0.5]}, 
     {RGBColor[1, 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{10, 7, 3}, 0.5]}, 
     {RGBColor[1, 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{10, 7, 4}, 0.5]}, 
     {RGBColor[1, 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{10, 7, 5}, 0.5]}, 
     {RGBColor[1, 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{10, 7, 6}, 0.5]}, 
     {RGBColor[1, 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{10, 7, 7}, 0.5]}, 
     {RGBColor[1, 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{10, 7, 8}, 0.5]}, 
     {RGBColor[1, 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{10, 7, 9}, 0.5]}, 
     {RGBColor[1, 
       NCache[
        Rational[7, 10], 0.7], 1], SphereBox[{10, 7, 10}, 0.5]}}, {
     {RGBColor[1, 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{10, 8, 1}, 0.5]}, 
     {RGBColor[1, 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{10, 8, 2}, 0.5]}, 
     {RGBColor[1, 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{10, 8, 3}, 0.5]}, 
     {RGBColor[1, 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{10, 8, 4}, 0.5]}, 
     {RGBColor[1, 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{10, 8, 5}, 0.5]}, 
     {RGBColor[1, 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{10, 8, 6}, 0.5]}, 
     {RGBColor[1, 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{10, 8, 7}, 0.5]}, 
     {RGBColor[1, 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{10, 8, 8}, 0.5]}, 
     {RGBColor[1, 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{10, 8, 9}, 0.5]}, 
     {RGBColor[1, 
       NCache[
        Rational[4, 5], 0.8], 1], SphereBox[{10, 8, 10}, 0.5]}}, {
     {RGBColor[1, 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{10, 9, 1}, 0.5]}, 
     {RGBColor[1, 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{10, 9, 2}, 0.5]}, 
     {RGBColor[1, 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{10, 9, 3}, 0.5]}, 
     {RGBColor[1, 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{10, 9, 4}, 0.5]}, 
     {RGBColor[1, 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{10, 9, 5}, 0.5]}, 
     {RGBColor[1, 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{10, 9, 6}, 0.5]}, 
     {RGBColor[1, 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{10, 9, 7}, 0.5]}, 
     {RGBColor[1, 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{10, 9, 8}, 0.5]}, 
     {RGBColor[1, 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{10, 9, 9}, 0.5]}, 
     {RGBColor[1, 
       NCache[
        Rational[9, 10], 0.9], 1], SphereBox[{10, 9, 10}, 0.5]}}, {
     {RGBColor[1, 1, 
       NCache[
        Rational[1, 10], 0.1]], SphereBox[{10, 10, 1}, 0.5]}, 
     {RGBColor[1, 1, 
       NCache[
        Rational[1, 5], 0.2]], SphereBox[{10, 10, 2}, 0.5]}, 
     {RGBColor[1, 1, 
       NCache[
        Rational[3, 10], 0.3]], SphereBox[{10, 10, 3}, 0.5]}, 
     {RGBColor[1, 1, 
       NCache[
        Rational[2, 5], 0.4]], SphereBox[{10, 10, 4}, 0.5]}, 
     {RGBColor[1, 1, 
       NCache[
        Rational[1, 2], 0.5]], SphereBox[{10, 10, 5}, 0.5]}, 
     {RGBColor[1, 1, 
       NCache[
        Rational[3, 5], 0.6]], SphereBox[{10, 10, 6}, 0.5]}, 
     {RGBColor[1, 1, 
       NCache[
        Rational[7, 10], 0.7]], SphereBox[{10, 10, 7}, 0.5]}, 
     {RGBColor[1, 1, 
       NCache[
        Rational[4, 5], 0.8]], SphereBox[{10, 10, 8}, 0.5]}, 
     {RGBColor[1, 1, 
       NCache[
        Rational[9, 10], 0.9]], SphereBox[{10, 10, 9}, 0.5]}, 
     {RGBColor[1, 1, 1], SphereBox[{10, 10, 10}, 0.5]}}}},
  ImageSize->{380.76688541880634`, 374.2903939381698},
  ImageSizeRaw->Automatic,
  ViewPoint->{0.9129328203926902, 2.617005739811262, 1.941091090918912},
  ViewVertical->{0.7902623472519819, 0.03478071958290275, 
   0.6117807810491301}]], "Output",
 CellChangeTimes->{
  3.933045227819075*^9, 3.933092995158175*^9, 3.933179933117339*^9, 
   3.933180048223353*^9, {3.93318652622665*^9, 3.9331865339006557`*^9}, 
   3.93318657573284*^9, 3.9331877534441347`*^9, 3.933274016744499*^9, {
   3.933275405190322*^9, 3.933275433879262*^9}, {3.933366787404607*^9, 
   3.9333667946781597`*^9}, {3.933712247869692*^9, 3.933712329822074*^9}, 
   3.933712372472083*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"e55f1e64-4471-4bfc-b6ba-9a81bc91ee5e"]
}, Open  ]],

Cell["\<\
Q8. Make a Manipulate with t varying between \[Minus]2 and +2 that contains \
circles of radius x centered at {t*x, 0} with x going from 1 to 10.\
\>", "CodeText",
 CellChangeTimes->{{3.933044981954609*^9, 3.9330449829879637`*^9}, {
   3.9330450176513767`*^9, 3.9330450320914183`*^9}, 3.933045639637404*^9, {
   3.933089544720343*^9, 3.933089556828191*^9}, 3.933179850155089*^9, 
   3.933186285502434*^9, 3.933187554902504*^9, {3.9331877768028517`*^9, 
   3.933187786934906*^9}, 3.9332740397367764`*^9, 3.933275474710528*^9, 
   3.93336680245008*^9, 
   3.9337123852689047`*^9},ExpressionUUID->"62d000ed-23c3-4378-ad5d-\
ad5e9f37b5d4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Graphics", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Circle", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"t", " ", "x"}], ",", "0"}], "}"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "10"}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.933044985463201*^9, 3.933044986750958*^9}, {
  3.9330895601363*^9, 3.933089562755383*^9}, {3.933179852254599*^9, 
  3.933179853366473*^9}, {3.9331862877850657`*^9, 3.9331862921617928`*^9}, {
  3.933187556632497*^9, 3.933187562316023*^9}, {3.9331877892979193`*^9, 
  3.933187793852765*^9}, {3.93327406553126*^9, 3.933274081095523*^9}, {
  3.93327548895892*^9, 3.933275505250259*^9}, {3.93336682674713*^9, 
  3.933366883161257*^9}, {3.9337123951101713`*^9, 3.933712472580783*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"35c0c4c9-2776-4e0a-a5d1-319f67edf658"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = -0.8200000000000001, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], -2, 2}}, Typeset`size$$ = {
    360., {41., 46.512699360341145`}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = -2}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Graphics[
        Table[
         Circle[{$CellContext`t$$ $CellContext`x, 0}], {$CellContext`x, 10}]],
       "Specifications" :> {{$CellContext`t$$, -2, 2}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{406., {85.6875, 91.3125}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.933044988930332*^9, 3.9330895635112047`*^9, 3.9331798539544973`*^9, 
   3.933186292890319*^9, 3.933187562945372*^9, 3.933187794540848*^9, 
   3.9332740814515944`*^9, 3.9332755060137987`*^9, {3.933366840828714*^9, 
   3.9333668912658854`*^9}, {3.933712451758913*^9, 3.933712473165884*^9}},
 CellLabel->"Out[32]=",ExpressionUUID->"4445d1a6-46e5-4068-b937-14b702b25082"]
}, Open  ]],

Cell["\<\
Q9. Make a 5\[Times]5 array of regular hexagons with size 1/2, centered at \
integer points.\
\>", "CodeText",
 CellChangeTimes->{{3.933044981954609*^9, 3.9330449829879637`*^9}, {
   3.9330450176513767`*^9, 3.9330450320914183`*^9}, 3.933045639637404*^9, {
   3.933089544720343*^9, 3.933089556828191*^9}, 3.933179850155089*^9, 
   3.933186285502434*^9, 3.933187554902504*^9, {3.9331877768028517`*^9, 
   3.933187786934906*^9}, 3.9332740397367764`*^9, 3.933275474710528*^9, 
   3.93336680245008*^9, 3.9337123852689047`*^9, {3.933712504386428*^9, 
   3.933712507538385*^9}},ExpressionUUID->"7688c120-d5cf-4bf5-9367-\
03194b99a432"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"RegularPolygon", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", ",", "j"}], "}"}], ",", 
      FractionBox["1", "2"], ",", "6"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "5"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.933044985463201*^9, 3.933044986750958*^9}, {
  3.9330895601363*^9, 3.933089562755383*^9}, {3.933179852254599*^9, 
  3.933179853366473*^9}, {3.9331862877850657`*^9, 3.9331862921617928`*^9}, {
  3.933187556632497*^9, 3.933187562316023*^9}, {3.9331877892979193`*^9, 
  3.933187793852765*^9}, {3.93327406553126*^9, 3.933274081095523*^9}, {
  3.93327548895892*^9, 3.933275505250259*^9}, {3.93336682674713*^9, 
  3.933366883161257*^9}, {3.9337123951101713`*^9, 3.933712472580783*^9}, {
  3.9337125210989513`*^9, 3.933712575808161*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"60612cbd-55d1-4e99-b6df-efe25f8d2f6b"],

Cell[BoxData[
 GraphicsBox[{{
    InterpretationBox[
     PolygonBox[
      NCache[{{Rational[5, 4], 1 + Rational[-1, 4] 3^Rational[1, 2]}, {
        Rational[3, 2], 1}, {
        Rational[5, 4], 1 + Rational[1, 4] 3^Rational[1, 2]}, {
        Rational[3, 4], 1 + Rational[1, 4] 3^Rational[1, 2]}, {
        Rational[1, 2], 1}, {
        Rational[3, 4], 1 + Rational[-1, 4] 3^Rational[1, 2]}}, {{1.25, 
        0.5669872981077807}, {1.5, 1}, {1.25, 1.4330127018922192`}, {0.75, 
        1.4330127018922192`}, {0.5, 1}, {0.75, 0.5669872981077807}}]],
     RegularPolygon[{1, 1}, 
      Rational[1, 2], 6]], 
    InterpretationBox[
     PolygonBox[
      NCache[{{Rational[5, 4], 2 + Rational[-1, 4] 3^Rational[1, 2]}, {
        Rational[3, 2], 2}, {
        Rational[5, 4], 2 + Rational[1, 4] 3^Rational[1, 2]}, {
        Rational[3, 4], 2 + Rational[1, 4] 3^Rational[1, 2]}, {
        Rational[1, 2], 2}, {
        Rational[3, 4], 2 + Rational[-1, 4] 3^Rational[1, 2]}}, {{1.25, 
        1.5669872981077808`}, {1.5, 2}, {1.25, 2.433012701892219}, {0.75, 
        2.433012701892219}, {0.5, 2}, {0.75, 1.5669872981077808`}}]],
     RegularPolygon[{1, 2}, 
      Rational[1, 2], 6]], 
    InterpretationBox[
     PolygonBox[
      NCache[{{Rational[5, 4], 3 + Rational[-1, 4] 3^Rational[1, 2]}, {
        Rational[3, 2], 3}, {
        Rational[5, 4], 3 + Rational[1, 4] 3^Rational[1, 2]}, {
        Rational[3, 4], 3 + Rational[1, 4] 3^Rational[1, 2]}, {
        Rational[1, 2], 3}, {
        Rational[3, 4], 3 + Rational[-1, 4] 3^Rational[1, 2]}}, {{1.25, 
        2.566987298107781}, {1.5, 3}, {1.25, 3.433012701892219}, {0.75, 
        3.433012701892219}, {0.5, 3}, {0.75, 2.566987298107781}}]],
     RegularPolygon[{1, 3}, 
      Rational[1, 2], 6]], 
    InterpretationBox[
     PolygonBox[
      NCache[{{Rational[5, 4], 4 + Rational[-1, 4] 3^Rational[1, 2]}, {
        Rational[3, 2], 4}, {
        Rational[5, 4], 4 + Rational[1, 4] 3^Rational[1, 2]}, {
        Rational[3, 4], 4 + Rational[1, 4] 3^Rational[1, 2]}, {
        Rational[1, 2], 4}, {
        Rational[3, 4], 4 + Rational[-1, 4] 3^Rational[1, 2]}}, {{1.25, 
        3.566987298107781}, {1.5, 4}, {1.25, 4.43301270189222}, {0.75, 
        4.43301270189222}, {0.5, 4}, {0.75, 3.566987298107781}}]],
     RegularPolygon[{1, 4}, 
      Rational[1, 2], 6]], 
    InterpretationBox[
     PolygonBox[
      NCache[{{Rational[5, 4], 5 + Rational[-1, 4] 3^Rational[1, 2]}, {
        Rational[3, 2], 5}, {
        Rational[5, 4], 5 + Rational[1, 4] 3^Rational[1, 2]}, {
        Rational[3, 4], 5 + Rational[1, 4] 3^Rational[1, 2]}, {
        Rational[1, 2], 5}, {
        Rational[3, 4], 5 + Rational[-1, 4] 3^Rational[1, 2]}}, {{1.25, 
        4.56698729810778}, {1.5, 5}, {1.25, 5.43301270189222}, {0.75, 
        5.43301270189222}, {0.5, 5}, {0.75, 4.56698729810778}}]],
     RegularPolygon[{1, 5}, 
      Rational[1, 2], 6]]}, {
    InterpretationBox[
     PolygonBox[
      NCache[{{Rational[9, 4], 1 + Rational[-1, 4] 3^Rational[1, 2]}, {
        Rational[5, 2], 1}, {
        Rational[9, 4], 1 + Rational[1, 4] 3^Rational[1, 2]}, {
        Rational[7, 4], 1 + Rational[1, 4] 3^Rational[1, 2]}, {
        Rational[3, 2], 1}, {
        Rational[7, 4], 1 + Rational[-1, 4] 3^Rational[1, 2]}}, {{2.25, 
        0.5669872981077807}, {2.5, 1}, {2.25, 1.4330127018922192`}, {1.75, 
        1.4330127018922192`}, {1.5, 1}, {1.75, 0.5669872981077807}}]],
     RegularPolygon[{2, 1}, 
      Rational[1, 2], 6]], 
    InterpretationBox[
     PolygonBox[
      NCache[{{Rational[9, 4], 2 + Rational[-1, 4] 3^Rational[1, 2]}, {
        Rational[5, 2], 2}, {
        Rational[9, 4], 2 + Rational[1, 4] 3^Rational[1, 2]}, {
        Rational[7, 4], 2 + Rational[1, 4] 3^Rational[1, 2]}, {
        Rational[3, 2], 2}, {
        Rational[7, 4], 2 + Rational[-1, 4] 3^Rational[1, 2]}}, {{2.25, 
        1.5669872981077808`}, {2.5, 2}, {2.25, 2.433012701892219}, {1.75, 
        2.433012701892219}, {1.5, 2}, {1.75, 1.5669872981077808`}}]],
     RegularPolygon[{2, 2}, 
      Rational[1, 2], 6]], 
    InterpretationBox[
     PolygonBox[
      NCache[{{Rational[9, 4], 3 + Rational[-1, 4] 3^Rational[1, 2]}, {
        Rational[5, 2], 3}, {
        Rational[9, 4], 3 + Rational[1, 4] 3^Rational[1, 2]}, {
        Rational[7, 4], 3 + Rational[1, 4] 3^Rational[1, 2]}, {
        Rational[3, 2], 3}, {
        Rational[7, 4], 3 + Rational[-1, 4] 3^Rational[1, 2]}}, {{2.25, 
        2.566987298107781}, {2.5, 3}, {2.25, 3.433012701892219}, {1.75, 
        3.433012701892219}, {1.5, 3}, {1.75, 2.566987298107781}}]],
     RegularPolygon[{2, 3}, 
      Rational[1, 2], 6]], 
    InterpretationBox[
     PolygonBox[
      NCache[{{Rational[9, 4], 4 + Rational[-1, 4] 3^Rational[1, 2]}, {
        Rational[5, 2], 4}, {
        Rational[9, 4], 4 + Rational[1, 4] 3^Rational[1, 2]}, {
        Rational[7, 4], 4 + Rational[1, 4] 3^Rational[1, 2]}, {
        Rational[3, 2], 4}, {
        Rational[7, 4], 4 + Rational[-1, 4] 3^Rational[1, 2]}}, {{2.25, 
        3.566987298107781}, {2.5, 4}, {2.25, 4.43301270189222}, {1.75, 
        4.43301270189222}, {1.5, 4}, {1.75, 3.566987298107781}}]],
     RegularPolygon[{2, 4}, 
      Rational[1, 2], 6]], 
    InterpretationBox[
     PolygonBox[
      NCache[{{Rational[9, 4], 5 + Rational[-1, 4] 3^Rational[1, 2]}, {
        Rational[5, 2], 5}, {
        Rational[9, 4], 5 + Rational[1, 4] 3^Rational[1, 2]}, {
        Rational[7, 4], 5 + Rational[1, 4] 3^Rational[1, 2]}, {
        Rational[3, 2], 5}, {
        Rational[7, 4], 5 + Rational[-1, 4] 3^Rational[1, 2]}}, {{2.25, 
        4.56698729810778}, {2.5, 5}, {2.25, 5.43301270189222}, {1.75, 
        5.43301270189222}, {1.5, 5}, {1.75, 4.56698729810778}}]],
     RegularPolygon[{2, 5}, 
      Rational[1, 2], 6]]}, {
    InterpretationBox[
     PolygonBox[
      NCache[{{Rational[13, 4], 1 + Rational[-1, 4] 3^Rational[1, 2]}, {
        Rational[7, 2], 1}, {
        Rational[13, 4], 1 + Rational[1, 4] 3^Rational[1, 2]}, {
        Rational[11, 4], 1 + Rational[1, 4] 3^Rational[1, 2]}, {
        Rational[5, 2], 1}, {
        Rational[11, 4], 1 + Rational[-1, 4] 3^Rational[1, 2]}}, {{3.25, 
        0.5669872981077807}, {3.5, 1}, {3.25, 1.4330127018922192`}, {2.75, 
        1.4330127018922192`}, {2.5, 1}, {2.75, 0.5669872981077807}}]],
     RegularPolygon[{3, 1}, 
      Rational[1, 2], 6]], 
    InterpretationBox[
     PolygonBox[
      NCache[{{Rational[13, 4], 2 + Rational[-1, 4] 3^Rational[1, 2]}, {
        Rational[7, 2], 2}, {
        Rational[13, 4], 2 + Rational[1, 4] 3^Rational[1, 2]}, {
        Rational[11, 4], 2 + Rational[1, 4] 3^Rational[1, 2]}, {
        Rational[5, 2], 2}, {
        Rational[11, 4], 2 + Rational[-1, 4] 3^Rational[1, 2]}}, {{3.25, 
        1.5669872981077808`}, {3.5, 2}, {3.25, 2.433012701892219}, {2.75, 
        2.433012701892219}, {2.5, 2}, {2.75, 1.5669872981077808`}}]],
     RegularPolygon[{3, 2}, 
      Rational[1, 2], 6]], 
    InterpretationBox[
     PolygonBox[
      NCache[{{Rational[13, 4], 3 + Rational[-1, 4] 3^Rational[1, 2]}, {
        Rational[7, 2], 3}, {
        Rational[13, 4], 3 + Rational[1, 4] 3^Rational[1, 2]}, {
        Rational[11, 4], 3 + Rational[1, 4] 3^Rational[1, 2]}, {
        Rational[5, 2], 3}, {
        Rational[11, 4], 3 + Rational[-1, 4] 3^Rational[1, 2]}}, {{3.25, 
        2.566987298107781}, {3.5, 3}, {3.25, 3.433012701892219}, {2.75, 
        3.433012701892219}, {2.5, 3}, {2.75, 2.566987298107781}}]],
     RegularPolygon[{3, 3}, 
      Rational[1, 2], 6]], 
    InterpretationBox[
     PolygonBox[
      NCache[{{Rational[13, 4], 4 + Rational[-1, 4] 3^Rational[1, 2]}, {
        Rational[7, 2], 4}, {
        Rational[13, 4], 4 + Rational[1, 4] 3^Rational[1, 2]}, {
        Rational[11, 4], 4 + Rational[1, 4] 3^Rational[1, 2]}, {
        Rational[5, 2], 4}, {
        Rational[11, 4], 4 + Rational[-1, 4] 3^Rational[1, 2]}}, {{3.25, 
        3.566987298107781}, {3.5, 4}, {3.25, 4.43301270189222}, {2.75, 
        4.43301270189222}, {2.5, 4}, {2.75, 3.566987298107781}}]],
     RegularPolygon[{3, 4}, 
      Rational[1, 2], 6]], 
    InterpretationBox[
     PolygonBox[
      NCache[{{Rational[13, 4], 5 + Rational[-1, 4] 3^Rational[1, 2]}, {
        Rational[7, 2], 5}, {
        Rational[13, 4], 5 + Rational[1, 4] 3^Rational[1, 2]}, {
        Rational[11, 4], 5 + Rational[1, 4] 3^Rational[1, 2]}, {
        Rational[5, 2], 5}, {
        Rational[11, 4], 5 + Rational[-1, 4] 3^Rational[1, 2]}}, {{3.25, 
        4.56698729810778}, {3.5, 5}, {3.25, 5.43301270189222}, {2.75, 
        5.43301270189222}, {2.5, 5}, {2.75, 4.56698729810778}}]],
     RegularPolygon[{3, 5}, 
      Rational[1, 2], 6]]}, {
    InterpretationBox[
     PolygonBox[
      NCache[{{Rational[17, 4], 1 + Rational[-1, 4] 3^Rational[1, 2]}, {
        Rational[9, 2], 1}, {
        Rational[17, 4], 1 + Rational[1, 4] 3^Rational[1, 2]}, {
        Rational[15, 4], 1 + Rational[1, 4] 3^Rational[1, 2]}, {
        Rational[7, 2], 1}, {
        Rational[15, 4], 1 + Rational[-1, 4] 3^Rational[1, 2]}}, {{4.25, 
        0.5669872981077807}, {4.5, 1}, {4.25, 1.4330127018922192`}, {3.75, 
        1.4330127018922192`}, {3.5, 1}, {3.75, 0.5669872981077807}}]],
     RegularPolygon[{4, 1}, 
      Rational[1, 2], 6]], 
    InterpretationBox[
     PolygonBox[
      NCache[{{Rational[17, 4], 2 + Rational[-1, 4] 3^Rational[1, 2]}, {
        Rational[9, 2], 2}, {
        Rational[17, 4], 2 + Rational[1, 4] 3^Rational[1, 2]}, {
        Rational[15, 4], 2 + Rational[1, 4] 3^Rational[1, 2]}, {
        Rational[7, 2], 2}, {
        Rational[15, 4], 2 + Rational[-1, 4] 3^Rational[1, 2]}}, {{4.25, 
        1.5669872981077808`}, {4.5, 2}, {4.25, 2.433012701892219}, {3.75, 
        2.433012701892219}, {3.5, 2}, {3.75, 1.5669872981077808`}}]],
     RegularPolygon[{4, 2}, 
      Rational[1, 2], 6]], 
    InterpretationBox[
     PolygonBox[
      NCache[{{Rational[17, 4], 3 + Rational[-1, 4] 3^Rational[1, 2]}, {
        Rational[9, 2], 3}, {
        Rational[17, 4], 3 + Rational[1, 4] 3^Rational[1, 2]}, {
        Rational[15, 4], 3 + Rational[1, 4] 3^Rational[1, 2]}, {
        Rational[7, 2], 3}, {
        Rational[15, 4], 3 + Rational[-1, 4] 3^Rational[1, 2]}}, {{4.25, 
        2.566987298107781}, {4.5, 3}, {4.25, 3.433012701892219}, {3.75, 
        3.433012701892219}, {3.5, 3}, {3.75, 2.566987298107781}}]],
     RegularPolygon[{4, 3}, 
      Rational[1, 2], 6]], 
    InterpretationBox[
     PolygonBox[
      NCache[{{Rational[17, 4], 4 + Rational[-1, 4] 3^Rational[1, 2]}, {
        Rational[9, 2], 4}, {
        Rational[17, 4], 4 + Rational[1, 4] 3^Rational[1, 2]}, {
        Rational[15, 4], 4 + Rational[1, 4] 3^Rational[1, 2]}, {
        Rational[7, 2], 4}, {
        Rational[15, 4], 4 + Rational[-1, 4] 3^Rational[1, 2]}}, {{4.25, 
        3.566987298107781}, {4.5, 4}, {4.25, 4.43301270189222}, {3.75, 
        4.43301270189222}, {3.5, 4}, {3.75, 3.566987298107781}}]],
     RegularPolygon[{4, 4}, 
      Rational[1, 2], 6]], 
    InterpretationBox[
     PolygonBox[
      NCache[{{Rational[17, 4], 5 + Rational[-1, 4] 3^Rational[1, 2]}, {
        Rational[9, 2], 5}, {
        Rational[17, 4], 5 + Rational[1, 4] 3^Rational[1, 2]}, {
        Rational[15, 4], 5 + Rational[1, 4] 3^Rational[1, 2]}, {
        Rational[7, 2], 5}, {
        Rational[15, 4], 5 + Rational[-1, 4] 3^Rational[1, 2]}}, {{4.25, 
        4.56698729810778}, {4.5, 5}, {4.25, 5.43301270189222}, {3.75, 
        5.43301270189222}, {3.5, 5}, {3.75, 4.56698729810778}}]],
     RegularPolygon[{4, 5}, 
      Rational[1, 2], 6]]}, {
    InterpretationBox[
     PolygonBox[
      NCache[{{Rational[21, 4], 1 + Rational[-1, 4] 3^Rational[1, 2]}, {
        Rational[11, 2], 1}, {
        Rational[21, 4], 1 + Rational[1, 4] 3^Rational[1, 2]}, {
        Rational[19, 4], 1 + Rational[1, 4] 3^Rational[1, 2]}, {
        Rational[9, 2], 1}, {
        Rational[19, 4], 1 + Rational[-1, 4] 3^Rational[1, 2]}}, {{5.25, 
        0.5669872981077807}, {5.5, 1}, {5.25, 1.4330127018922192`}, {4.75, 
        1.4330127018922192`}, {4.5, 1}, {4.75, 0.5669872981077807}}]],
     RegularPolygon[{5, 1}, 
      Rational[1, 2], 6]], 
    InterpretationBox[
     PolygonBox[
      NCache[{{Rational[21, 4], 2 + Rational[-1, 4] 3^Rational[1, 2]}, {
        Rational[11, 2], 2}, {
        Rational[21, 4], 2 + Rational[1, 4] 3^Rational[1, 2]}, {
        Rational[19, 4], 2 + Rational[1, 4] 3^Rational[1, 2]}, {
        Rational[9, 2], 2}, {
        Rational[19, 4], 2 + Rational[-1, 4] 3^Rational[1, 2]}}, {{5.25, 
        1.5669872981077808`}, {5.5, 2}, {5.25, 2.433012701892219}, {4.75, 
        2.433012701892219}, {4.5, 2}, {4.75, 1.5669872981077808`}}]],
     RegularPolygon[{5, 2}, 
      Rational[1, 2], 6]], 
    InterpretationBox[
     PolygonBox[
      NCache[{{Rational[21, 4], 3 + Rational[-1, 4] 3^Rational[1, 2]}, {
        Rational[11, 2], 3}, {
        Rational[21, 4], 3 + Rational[1, 4] 3^Rational[1, 2]}, {
        Rational[19, 4], 3 + Rational[1, 4] 3^Rational[1, 2]}, {
        Rational[9, 2], 3}, {
        Rational[19, 4], 3 + Rational[-1, 4] 3^Rational[1, 2]}}, {{5.25, 
        2.566987298107781}, {5.5, 3}, {5.25, 3.433012701892219}, {4.75, 
        3.433012701892219}, {4.5, 3}, {4.75, 2.566987298107781}}]],
     RegularPolygon[{5, 3}, 
      Rational[1, 2], 6]], 
    InterpretationBox[
     PolygonBox[
      NCache[{{Rational[21, 4], 4 + Rational[-1, 4] 3^Rational[1, 2]}, {
        Rational[11, 2], 4}, {
        Rational[21, 4], 4 + Rational[1, 4] 3^Rational[1, 2]}, {
        Rational[19, 4], 4 + Rational[1, 4] 3^Rational[1, 2]}, {
        Rational[9, 2], 4}, {
        Rational[19, 4], 4 + Rational[-1, 4] 3^Rational[1, 2]}}, {{5.25, 
        3.566987298107781}, {5.5, 4}, {5.25, 4.43301270189222}, {4.75, 
        4.43301270189222}, {4.5, 4}, {4.75, 3.566987298107781}}]],
     RegularPolygon[{5, 4}, 
      Rational[1, 2], 6]], 
    InterpretationBox[
     PolygonBox[
      NCache[{{Rational[21, 4], 5 + Rational[-1, 4] 3^Rational[1, 2]}, {
        Rational[11, 2], 5}, {
        Rational[21, 4], 5 + Rational[1, 4] 3^Rational[1, 2]}, {
        Rational[19, 4], 5 + Rational[1, 4] 3^Rational[1, 2]}, {
        Rational[9, 2], 5}, {
        Rational[19, 4], 5 + Rational[-1, 4] 3^Rational[1, 2]}}, {{5.25, 
        4.56698729810778}, {5.5, 5}, {5.25, 5.43301270189222}, {4.75, 
        5.43301270189222}, {4.5, 5}, {4.75, 4.56698729810778}}]],
     RegularPolygon[{5, 5}, 
      Rational[1, 2], 6]]}}]], "Output",
 CellChangeTimes->{
  3.933044988930332*^9, 3.9330895635112047`*^9, 3.9331798539544973`*^9, 
   3.933186292890319*^9, 3.933187562945372*^9, 3.933187794540848*^9, 
   3.9332740814515944`*^9, 3.9332755060137987`*^9, {3.933366840828714*^9, 
   3.9333668912658854`*^9}, {3.933712451758913*^9, 3.933712473165884*^9}, 
   3.9337125777828903`*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"1a202bbe-0ece-4359-9a69-23633f77121b"]
}, Open  ]],

Cell["\<\
Q10. Make a line in 3D that goes through 50 random points with integer \
coordinates randomly chosen up to 50.\
\>", "CodeText",
 CellChangeTimes->{{3.933044981954609*^9, 3.9330449829879637`*^9}, {
   3.9330450176513767`*^9, 3.9330450320914183`*^9}, 3.933045639637404*^9, {
   3.933089544720343*^9, 3.933089556828191*^9}, 3.933179850155089*^9, 
   3.933186285502434*^9, 3.933187554902504*^9, {3.9331877768028517`*^9, 
   3.933187786934906*^9}, 3.9332740397367764`*^9, 3.933275474710528*^9, 
   3.93336680245008*^9, 3.9337123852689047`*^9, {3.933712606465802*^9, 
   3.933712608233295*^9}},ExpressionUUID->"91d30211-345a-42e2-b907-\
ccaa61a45016"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics3D", "[", 
  RowBox[{"Line", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"RandomInteger", "[", 
      RowBox[{"50", ",", "3"}], "]"}], ",", "50"}], "]"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.933044985463201*^9, 3.933044986750958*^9}, {
  3.9330895601363*^9, 3.933089562755383*^9}, {3.933179852254599*^9, 
  3.933179853366473*^9}, {3.9331862877850657`*^9, 3.9331862921617928`*^9}, {
  3.933187556632497*^9, 3.933187562316023*^9}, {3.9331877892979193`*^9, 
  3.933187793852765*^9}, {3.93327406553126*^9, 3.933274081095523*^9}, {
  3.93327548895892*^9, 3.933275505250259*^9}, {3.93336682674713*^9, 
  3.933366883161257*^9}, {3.9337123951101713`*^9, 3.933712472580783*^9}, {
  3.933712617316633*^9, 3.933712639530435*^9}, {3.9337126703247843`*^9, 
  3.933712681909809*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"ef2b2496-e806-4244-90fb-aa8e1b367464"],

Cell[BoxData[
 Graphics3DBox[Line3DBox[CompressedData["
1:eJw1kFkOgkAQRAcUFXdFcRcVl4ABlaN4BA+g9/+zOj5JXnrC9HR11f71eb59
51wlaiIUseiLSMxEnbp3v6/J3VTsxJLzXRT0+Py3eQ9qKsaiJQ7MTXnX4+0R
bZs3ECdxofboX4gNPSPhiY64srvVoZiIuQjQDOifgfV2mVXAFj07l3gtmW9e
2+xlbxp4rDE/Z6c13owEzYD8/jlaz42sMjIq2NdRE7LI0FniNSKDB/cheXrs
VOKji4ZlsSKXM/Ny7kL8TNhtzuwc/QN1x5yS+wHaPl5itCuyulE3+P0CryEQ
Gg==
   "]]]], "Output",
 CellChangeTimes->{
  3.933044988930332*^9, 3.9330895635112047`*^9, 3.9331798539544973`*^9, 
   3.933186292890319*^9, 3.933187562945372*^9, 3.933187794540848*^9, 
   3.9332740814515944`*^9, 3.9332755060137987`*^9, {3.933366840828714*^9, 
   3.9333668912658854`*^9}, {3.933712451758913*^9, 3.933712473165884*^9}, 
   3.9337126839845123`*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"d3cb7651-67b7-496d-8eba-84ebb7ebe6f3"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Extended Questions", "Section",
 CellChangeTimes->{{3.933045572414176*^9, 
  3.933045576505332*^9}},ExpressionUUID->"15289483-f97a-4ce9-8060-\
d19485e93761"],

Cell["\<\
+Q1. Make a Manipulate to create an n\[Times]n regular grid of points at \
integer positions, with n going from 5 to 20.\
\>", "CodeText",
 CellChangeTimes->{{3.933044981954609*^9, 3.9330449829879637`*^9}, {
   3.9330450176513767`*^9, 3.9330450320914183`*^9}, {3.933045084826315*^9, 
   3.9330450895412827`*^9}, {3.933045286272798*^9, 3.933045318006721*^9}, {
   3.933045368732009*^9, 3.933045377536852*^9}, {3.933045545062495*^9, 
   3.933045552087694*^9}, {3.933045582724339*^9, 3.933045598952709*^9}, 
   3.933045631467128*^9, 3.93309304924282*^9, {3.933180223133634*^9, 
   3.93318024931849*^9}, 3.9331865794094343`*^9, 3.9331880901694*^9, {
   3.93327420521961*^9, 3.933274212519644*^9}, {3.933276454283779*^9, 
   3.9332764594369297`*^9}, 3.933366911146174*^9, 
   3.9337127216313753`*^9},ExpressionUUID->"65988677-9616-4537-9056-\
6a71fe34d260"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Graphics", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{"i", ",", "j"}], "}"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "n"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "n"}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "5", ",", "20"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.933045601648616*^9, 3.933045605875023*^9}, {
   3.933093051132093*^9, 3.933093054976057*^9}, {3.933180224610448*^9, 
   3.933180234152701*^9}, 3.933186585174122*^9, {3.9331880923951817`*^9, 
   3.9331880941041107`*^9}, {3.933274222955741*^9, 3.93327423397295*^9}, {
   3.9332764645716267`*^9, 3.9332764784749193`*^9}, {3.933366915829917*^9, 
   3.93336697640342*^9}, {3.933712741460362*^9, 3.9337128420678473`*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"caf82913-b230-47a1-953c-cbf6e1f1a140"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`n$$ = 20., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`n$$], 5, 20}}, Typeset`size$$ = {
    360., {177., 182.42400000000004`}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`n$$ = 5}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Graphics[
        Table[
         Point[{$CellContext`i, $CellContext`j}], {$CellContext`i, \
$CellContext`n$$}, {$CellContext`j, $CellContext`n$$}]], 
      "Specifications" :> {{$CellContext`n$$, 5, 20}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{406., {221.6875, 227.3125}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.933045606539266*^9, 3.933093055525054*^9, 3.933180234928944*^9, 
   3.9331865859485817`*^9, 3.9331880945226994`*^9, 3.933274234565363*^9, 
   3.9332764789458733`*^9, {3.9333669271689167`*^9, 3.933366977086282*^9}, {
   3.933712824362816*^9, 3.933712842846303*^9}},
 CellLabel->"Out[36]=",ExpressionUUID->"055c5e91-9ead-4592-ab02-cb0e0e668017"]
}, Open  ]],

Cell["\<\
+Q2. Place 30 radius-1 circles with random colours at random integer \
coordinates up to 10.\
\>", "CodeText",
 CellChangeTimes->{{3.933044981954609*^9, 3.9330449829879637`*^9}, {
   3.9330450176513767`*^9, 3.9330450320914183`*^9}, {3.933045084826315*^9, 
   3.9330450895412827`*^9}, {3.933045286272798*^9, 3.933045318006721*^9}, {
   3.933045368732009*^9, 3.933045377536852*^9}, {3.933045545062495*^9, 
   3.933045552087694*^9}, {3.933045582724339*^9, 3.933045630763904*^9}, 
   3.933093066507454*^9, {3.9331802453032618`*^9, 3.9331802485563793`*^9}, 
   3.9331866019893427`*^9, 3.9331881037730417`*^9, 3.933274271868187*^9, 
   3.933276486124844*^9, 3.9332766670670233`*^9, 3.933366993541621*^9, 
   3.933712857285166*^9, 
   3.9337128918708763`*^9},ExpressionUUID->"cc87318f-58c7-41d8-8e49-\
b1dac081d316"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Style", "[", 
     RowBox[{
      RowBox[{"Circle", "[", 
       RowBox[{"RandomInteger", "[", 
        RowBox[{"10", ",", "2"}], "]"}], "]"}], ",", 
      RowBox[{"RandomColor", "[", "]"}]}], "]"}], ",", "30"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.933045646511365*^9, 3.9330456475080767`*^9}, {
  3.933093068209293*^9, 3.933093071895693*^9}, {3.933180257394599*^9, 
  3.93318026574537*^9}, {3.9331866124917*^9, 3.933186620825633*^9}, {
  3.933188119735406*^9, 3.933188126693767*^9}, {3.933274293060886*^9, 
  3.933274302346307*^9}, {3.9332764974801064`*^9, 3.933276527905301*^9}, {
  3.933367037052046*^9, 3.933367056934552*^9}, {3.93371289525771*^9, 
  3.933712955858048*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"5be751e6-b90e-4894-8de2-72ebbd628fc8"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.6493871870558603, 0.504943387904832, 0.37201513498661964`], 
    CircleBox[{3, 8}]}, 
   {RGBColor[0.4682730302393563, 0.1177422925287408, 0.583670214066764], 
    CircleBox[{8, 3}]}, 
   {RGBColor[0.01117333220684591, 0.48411412989528424`, 0.8058943817420814], 
    CircleBox[{3, 1}]}, 
   {RGBColor[0.8084812364700031, 0.01465833398948635, 0.010482302059903859`], 
    CircleBox[{6, 7}]}, 
   {RGBColor[0.9514048522277148, 0.50876004318154, 0.006759426704166183], 
    CircleBox[{0, 6}]}, 
   {RGBColor[0.33804302910275363`, 0.5068718789188702, 0.4316324581516553], 
    CircleBox[{6, 0}]}, 
   {RGBColor[0.9146963432592647, 0.4794485732308176, 0.42055051081141936`], 
    CircleBox[{6, 1}]}, 
   {RGBColor[0.9136294654445158, 0.1490853467990425, 0.9305923461431846], 
    CircleBox[{10, 8}]}, 
   {RGBColor[0.21836747738782347`, 0.010906625412559379`, 0.4770689013020022],
     CircleBox[{2, 6}]}, 
   {RGBColor[0.5594320217824345, 0.45502939368318907`, 0.9168380373467033], 
    CircleBox[{1, 1}]}, 
   {RGBColor[0.7126636018479204, 0.6397518284558379, 0.7419598483296976], 
    CircleBox[{4, 4}]}, 
   {RGBColor[0.19805348389725852`, 0.9523210610097299, 0.7882017947969859], 
    CircleBox[{3, 3}]}, 
   {RGBColor[0.3797532678073552, 0.005857069774426238, 0.400741738120588], 
    CircleBox[{7, 7}]}, 
   {RGBColor[0.5999018046446114, 0.5802758449683192, 0.8371019266489699], 
    CircleBox[{1, 9}]}, 
   {RGBColor[0.16563919255268922`, 0.36527809067790007`, 0.3940294788327259], 
    CircleBox[{10, 10}]}, 
   {RGBColor[0.6732172897840882, 0.9883553597589487, 0.8077318503886046], 
    CircleBox[{5, 9}]}, 
   {RGBColor[0.6974163003176868, 0.03829408399569845, 0.14662008867637621`], 
    CircleBox[{8, 6}]}, 
   {RGBColor[0.3904635721626266, 0.8151218436523524, 0.5093470987631175], 
    CircleBox[{8, 1}]}, 
   {RGBColor[0.9308693148007638, 0.8161006677940188, 0.028536780365084224`], 
    CircleBox[{6, 10}]}, 
   {RGBColor[0.5616364655108277, 0.35423403628937056`, 0.46082685562816095`], 
    CircleBox[{6, 0}]}, 
   {RGBColor[0.42089501311653543`, 0.38226216943566627`, 0.5934246873099369], 
    CircleBox[{9, 6}]}, 
   {RGBColor[0.9972729215923606, 0.7547754113098979, 0.09767679714137922], 
    CircleBox[{4, 5}]}, 
   {RGBColor[0.7652423284942371, 0.7769730185632662, 0.3336703658445008], 
    CircleBox[{4, 8}]}, 
   {RGBColor[0.32944272236977423`, 0.9494074063202469, 0.5470674791847137], 
    CircleBox[{6, 0}]}, 
   {RGBColor[0.6718950659217993, 0.0654869969771068, 0.5350272289225693], 
    CircleBox[{4, 7}]}, 
   {RGBColor[0.6108470551038527, 0.007283267106673819, 0.53270575557238], 
    CircleBox[{8, 10}]}, 
   {RGBColor[0.600945360371, 0.014246994453040562`, 0.8521033454841651], 
    CircleBox[{6, 8}]}, 
   {RGBColor[0.9462646185415877, 0.13251857990784344`, 0.8774175705385157], 
    CircleBox[{9, 4}]}, 
   {RGBColor[0.38736092698151214`, 0.48843886902486044`, 0.3636744751007597], 
    CircleBox[{3, 4}]}, 
   {RGBColor[0.6179235683344351, 0.035404251128198005`, 0.16710113296366047`],
     CircleBox[{4, 10}]}}]], "Output",
 CellChangeTimes->{
  3.933045648095525*^9, 3.933093072568637*^9, 3.933180266425596*^9, 
   3.933186621314743*^9, 3.933188127121689*^9, 3.933274302937787*^9, 
   3.93327652875839*^9, 3.933367057246872*^9, {3.933712936779419*^9, 
   3.933712956913864*^9}},
 CellLabel->"Out[38]=",ExpressionUUID->"c22059e1-d6f2-48fe-87cc-56742e7b5dc0"]
}, Open  ]],

Cell["\<\
+Q3. Display 100 polygons with side length 10, opacity .5, and random choices \
of colours, sides between 3 and 8, and integer coordinates up to 100. \
\>", "CodeText",
 CellChangeTimes->{{3.933044981954609*^9, 3.9330449829879637`*^9}, {
   3.9330450176513767`*^9, 3.9330450320914183`*^9}, {3.933045084826315*^9, 
   3.9330450895412827`*^9}, {3.933045286272798*^9, 3.933045318006721*^9}, {
   3.933045368732009*^9, 3.933045377536852*^9}, {3.933045545062495*^9, 
   3.933045552087694*^9}, {3.933045582724339*^9, 3.933045598952709*^9}, {
   3.933045654828909*^9, 3.9330456668860083`*^9}, 3.933045736409889*^9, 
   3.933093082081451*^9, 3.933180276922765*^9, 3.933186631520351*^9, {
   3.933188136235816*^9, 3.9331881450240517`*^9}, 3.933274311211767*^9, 
   3.933276554620142*^9, 3.933276665367118*^9, 3.933367068678151*^9, 
   3.933712970692966*^9, 
   3.9337130186920643`*^9},ExpressionUUID->"7d0a007d-6ca9-41d6-ae41-\
d091ee3cea9d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Style", "[", 
     RowBox[{
      RowBox[{"RegularPolygon", "[", 
       RowBox[{
        RowBox[{"RandomInteger", "[", 
         RowBox[{"100", ",", "2"}], "]"}], ",", 
        RowBox[{"RandomInteger", "[", 
         RowBox[{"{", 
          RowBox[{"3", ",", "8"}], "}"}], "]"}], ",", "10"}], "]"}], ",", 
      RowBox[{"RandomColor", "[", "]"}], ",", 
      RowBox[{"Opacity", "[", "0.5", "]"}]}], "]"}], ",", "100"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.933045668871724*^9, 3.933045670351816*^9}, {
  3.9330930870089808`*^9, 3.933093095152356*^9}, {3.933180287808238*^9, 
  3.933180334695085*^9}, {3.933186671477257*^9, 3.933186749813414*^9}, {
  3.93318682967554*^9, 3.933186900276577*^9}, {3.9331881482665873`*^9, 
  3.933188158821327*^9}, {3.933274322521419*^9, 3.933274337743745*^9}, {
  3.9332765892289133`*^9, 3.9332766502688007`*^9}, {3.933367089807831*^9, 
  3.9333671025593224`*^9}, {3.933712979397196*^9, 3.933713062395549*^9}, {
  3.933713096767788*^9, 3.933713117276865*^9}, {3.933713165199708*^9, 
  3.933713185804031*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"5bae3c17-d5e7-47c8-8545-1fb71f5cbd9c"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.3105674103401195, 0.6518637481565726, 0.009451014668502511], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{74 + Rational[7, 4] (-1 + 5^Rational[1, 2]), 35 - 
         7 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        74 + Rational[7, 4] (1 + 5^Rational[1, 2]), 35 - 
         7 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {81, 35}, {
        74 + Rational[7, 4] (1 + 5^Rational[1, 2]), 35 + 
         7 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        74 + Rational[7, 4] (-1 + 5^Rational[1, 2]), 35 + 
         7 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        74 + Rational[7, 4] (1 - 5^Rational[1, 2]), 35 + 
         7 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        74 + Rational[7, 4] (-1 - 5^Rational[1, 2]), 35 + 
         7 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {67, 35}, {
        74 + Rational[7, 4] (-1 - 5^Rational[1, 2]), 35 - 
         7 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        74 + Rational[7, 4] (1 - 5^Rational[1, 2]), 35 - 
         7 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{76.16311896062463, 28.342604385933925`}, {
        79.66311896062463, 30.88550323395269}, {81, 35}, {79.66311896062463, 
        39.11449676604731}, {76.16311896062463, 41.657395614066075`}, {
        71.83688103937537, 41.657395614066075`}, {68.33688103937537, 
        39.11449676604731}, {67, 35}, {68.33688103937537, 
        30.88550323395269}, {71.83688103937537, 28.342604385933925`}}]],
     RegularPolygon[{74, 35}, 7, 10]]}, 
   {RGBColor[0.9961303158428028, 0.8598022753874857, 0.47841027535855507`], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{63 + 5^Rational[1, 2], 30 - 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        65 + 5^Rational[1, 2], 30 - 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {68, 30}, {
        65 + 5^Rational[1, 2], 30 + 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        63 + 5^Rational[1, 2], 30 + 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        65 - 5^Rational[1, 2], 30 + 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        63 - 5^Rational[1, 2], 30 + 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {60, 30}, {
        63 - 5^Rational[1, 2], 30 - 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        65 - 5^Rational[1, 2], 30 - 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{65.23606797749979, 26.195773934819385`}, {
        67.23606797749979, 27.648858990830107`}, {68, 30}, {67.23606797749979,
         32.35114100916989}, {65.23606797749979, 33.804226065180615`}, {
        62.763932022500214`, 33.804226065180615`}, {60.763932022500214`, 
        32.35114100916989}, {60, 30}, {60.763932022500214`, 
        27.648858990830107`}, {62.763932022500214`, 26.195773934819385`}}]],
     RegularPolygon[{64, 30}, 4, 10]]}, 
   {RGBColor[0.2836047740728507, 0.9501594694705211, 0.14448323917043115`], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{38 + 5^Rational[1, 2], 62 - 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        40 + 5^Rational[1, 2], 62 - 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {43, 62}, {
        40 + 5^Rational[1, 2], 62 + 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        38 + 5^Rational[1, 2], 62 + 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        40 - 5^Rational[1, 2], 62 + 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        38 - 5^Rational[1, 2], 62 + 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {35, 62}, {
        38 - 5^Rational[1, 2], 62 - 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        40 - 5^Rational[1, 2], 62 - 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{40.236067977499786`, 58.195773934819385`}, {
        42.236067977499786`, 59.64885899083011}, {43, 62}, {
        42.236067977499786`, 64.3511410091699}, {40.236067977499786`, 
        65.80422606518061}, {37.763932022500214`, 65.80422606518061}, {
        35.763932022500214`, 64.3511410091699}, {35, 62}, {
        35.763932022500214`, 59.64885899083011}, {37.763932022500214`, 
        58.195773934819385`}}]],
     RegularPolygon[{39, 62}, 4, 10]]}, 
   {RGBColor[0.8663522069886302, 0.9727071222264727, 0.46394108947685697`], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{45 + Rational[3, 2] (-1 + 5^Rational[1, 2]), 40 - 
         6 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        45 + Rational[3, 2] (1 + 5^Rational[1, 2]), 40 - 
         6 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {51, 40}, {
        45 + Rational[3, 2] (1 + 5^Rational[1, 2]), 40 + 
         6 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        45 + Rational[3, 2] (-1 + 5^Rational[1, 2]), 40 + 
         6 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        45 + Rational[3, 2] (1 - 5^Rational[1, 2]), 40 + 
         6 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        45 + Rational[3, 2] (-1 - 5^Rational[1, 2]), 40 + 
         6 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {39, 40}, {
        45 + Rational[3, 2] (-1 - 5^Rational[1, 2]), 40 - 
         6 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        45 + Rational[3, 2] (1 - 5^Rational[1, 2]), 40 - 
         6 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{46.85410196624969, 34.29366090222908}, {
        49.85410196624969, 36.47328848624516}, {51, 40}, {49.85410196624969, 
        43.52671151375484}, {46.85410196624969, 45.70633909777092}, {
        43.14589803375031, 45.70633909777092}, {40.14589803375031, 
        43.52671151375484}, {39, 40}, {40.14589803375031, 
        36.47328848624516}, {43.14589803375031, 34.29366090222908}}]],
     RegularPolygon[{45, 40}, 6, 10]]}, 
   {RGBColor[0.31108451247575486`, 0.14932168347432295`, 0.6439784738385286], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{95 + Rational[3, 2] (-1 + 5^Rational[1, 2]), 71 - 
         6 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        95 + Rational[3, 2] (1 + 5^Rational[1, 2]), 71 - 
         6 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {101, 71}, {
        95 + Rational[3, 2] (1 + 5^Rational[1, 2]), 71 + 
         6 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        95 + Rational[3, 2] (-1 + 5^Rational[1, 2]), 71 + 
         6 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        95 + Rational[3, 2] (1 - 5^Rational[1, 2]), 71 + 
         6 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        95 + Rational[3, 2] (-1 - 5^Rational[1, 2]), 71 + 
         6 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {89, 71}, {
        95 + Rational[3, 2] (-1 - 5^Rational[1, 2]), 71 - 
         6 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        95 + Rational[3, 2] (1 - 5^Rational[1, 2]), 71 - 
         6 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{96.85410196624969, 65.29366090222908}, {
        99.85410196624969, 67.47328848624517}, {101, 71}, {99.85410196624969, 
        74.52671151375483}, {96.85410196624969, 76.70633909777092}, {
        93.14589803375031, 76.70633909777092}, {90.14589803375031, 
        74.52671151375483}, {89, 71}, {90.14589803375031, 
        67.47328848624517}, {93.14589803375031, 65.29366090222908}}]],
     RegularPolygon[{95, 71}, 6, 10]]}, 
   {RGBColor[0.07660502221433418, 0.2599873507022956, 0.7855900392105186], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{34 + Rational[5, 4] (-1 + 5^Rational[1, 2]), 17 - 
         5 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        34 + Rational[5, 4] (1 + 5^Rational[1, 2]), 17 - 
         5 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {39, 17}, {
        34 + Rational[5, 4] (1 + 5^Rational[1, 2]), 17 + 
         5 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        34 + Rational[5, 4] (-1 + 5^Rational[1, 2]), 17 + 
         5 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        34 + Rational[5, 4] (1 - 5^Rational[1, 2]), 17 + 
         5 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        34 + Rational[5, 4] (-1 - 5^Rational[1, 2]), 17 + 
         5 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {29, 17}, {
        34 + Rational[5, 4] (-1 - 5^Rational[1, 2]), 17 - 
         5 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        34 + Rational[5, 4] (1 - 5^Rational[1, 2]), 17 - 
         5 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{35.545084971874736`, 12.244717418524232`}, {
        38.045084971874736`, 14.061073738537633`}, {39, 17}, {
        38.045084971874736`, 19.938926261462367`}, {35.545084971874736`, 
        21.755282581475768`}, {32.454915028125264`, 21.755282581475768`}, {
        29.954915028125264`, 19.938926261462367`}, {29, 17}, {
        29.954915028125264`, 14.061073738537633`}, {32.454915028125264`, 
        12.244717418524232`}}]],
     RegularPolygon[{34, 17}, 5, 10]]}, 
   {RGBColor[0.8138389462013638, 0.9617839461625015, 0.2751014497885622], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{81 + Rational[3, 4] (-1 + 5^Rational[1, 2]), 30 - 
         3 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        81 + Rational[3, 4] (1 + 5^Rational[1, 2]), 30 - 
         3 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {84, 30}, {
        81 + Rational[3, 4] (1 + 5^Rational[1, 2]), 30 + 
         3 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        81 + Rational[3, 4] (-1 + 5^Rational[1, 2]), 30 + 
         3 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        81 + Rational[3, 4] (1 - 5^Rational[1, 2]), 30 + 
         3 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        81 + Rational[3, 4] (-1 - 5^Rational[1, 2]), 30 + 
         3 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {78, 30}, {
        81 + Rational[3, 4] (-1 - 5^Rational[1, 2]), 30 - 
         3 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        81 + Rational[3, 4] (1 - 5^Rational[1, 2]), 30 - 
         3 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{81.92705098312484, 27.14683045111454}, {
        83.42705098312484, 28.23664424312258}, {84, 30}, {83.42705098312484, 
        31.76335575687742}, {81.92705098312484, 32.85316954888546}, {
        80.07294901687516, 32.85316954888546}, {78.57294901687516, 
        31.76335575687742}, {78, 30}, {78.57294901687516, 
        28.23664424312258}, {80.07294901687516, 27.14683045111454}}]],
     RegularPolygon[{81, 30}, 3, 10]]}, 
   {RGBColor[0.6222138582719199, 0.8556321751906177, 0.9909614125110815], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{15 + Rational[3, 2] (-1 + 5^Rational[1, 2]), 53 - 
         6 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        15 + Rational[3, 2] (1 + 5^Rational[1, 2]), 53 - 
         6 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {21, 53}, {
        15 + Rational[3, 2] (1 + 5^Rational[1, 2]), 53 + 
         6 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        15 + Rational[3, 2] (-1 + 5^Rational[1, 2]), 53 + 
         6 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        15 + Rational[3, 2] (1 - 5^Rational[1, 2]), 53 + 
         6 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        15 + Rational[3, 2] (-1 - 5^Rational[1, 2]), 53 + 
         6 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {9, 53}, {
        15 + Rational[3, 2] (-1 - 5^Rational[1, 2]), 53 - 
         6 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        15 + Rational[3, 2] (1 - 5^Rational[1, 2]), 53 - 
         6 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{16.854101966249686`, 47.29366090222908}, {
        19.854101966249686`, 49.47328848624516}, {21, 53}, {
        19.854101966249686`, 56.52671151375484}, {16.854101966249686`, 
        58.70633909777092}, {13.145898033750315`, 58.70633909777092}, {
        10.145898033750315`, 56.52671151375484}, {9, 53}, {
        10.145898033750315`, 49.47328848624516}, {13.145898033750315`, 
        47.29366090222908}}]],
     RegularPolygon[{15, 53}, 6, 10]]}, 
   {RGBColor[0.9272761184228007, 0.24902371311289961`, 0.7498335244457672], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{69 + 2 (-1 + 5^Rational[1, 2]), 30 - 
         8 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        69 + 2 (1 + 5^Rational[1, 2]), 30 - 
         8 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {77, 30}, {
        69 + 2 (1 + 5^Rational[1, 2]), 30 + 
         8 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        69 + 2 (-1 + 5^Rational[1, 2]), 30 + 
         8 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        69 + 2 (1 - 5^Rational[1, 2]), 30 + 
         8 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        69 + 2 (-1 - 5^Rational[1, 2]), 30 + 
         8 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {61, 30}, {
        69 + 2 (-1 - 5^Rational[1, 2]), 30 - 
         8 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        69 + 2 (1 - 5^Rational[1, 2]), 30 - 
         8 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{71.47213595499957, 22.39154786963877}, {
        75.47213595499957, 25.297717981660213`}, {77, 30}, {75.47213595499957,
         34.70228201833979}, {71.47213595499957, 37.60845213036123}, {
        66.52786404500043, 37.60845213036123}, {62.52786404500042, 
        34.70228201833979}, {61, 30}, {62.52786404500042, 
        25.297717981660213`}, {66.52786404500043, 22.39154786963877}}]],
     RegularPolygon[{69, 30}, 8, 10]]}, 
   {RGBColor[0.6985152207942291, 0.9271928672907914, 0.21336974645370965`], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{62 + Rational[3, 4] (-1 + 5^Rational[1, 2]), 74 - 
         3 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        62 + Rational[3, 4] (1 + 5^Rational[1, 2]), 74 - 
         3 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {65, 74}, {
        62 + Rational[3, 4] (1 + 5^Rational[1, 2]), 74 + 
         3 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        62 + Rational[3, 4] (-1 + 5^Rational[1, 2]), 74 + 
         3 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        62 + Rational[3, 4] (1 - 5^Rational[1, 2]), 74 + 
         3 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        62 + Rational[3, 4] (-1 - 5^Rational[1, 2]), 74 + 
         3 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {59, 74}, {
        62 + Rational[3, 4] (-1 - 5^Rational[1, 2]), 74 - 
         3 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        62 + Rational[3, 4] (1 - 5^Rational[1, 2]), 74 - 
         3 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{62.92705098312484, 71.14683045111454}, {
        64.42705098312484, 72.23664424312258}, {65, 74}, {64.42705098312484, 
        75.76335575687742}, {62.92705098312484, 76.85316954888546}, {
        61.07294901687516, 76.85316954888546}, {59.57294901687516, 
        75.76335575687742}, {59, 74}, {59.57294901687516, 
        72.23664424312258}, {61.07294901687516, 71.14683045111454}}]],
     RegularPolygon[{62, 74}, 3, 10]]}, 
   {RGBColor[0.26011447258565656`, 0.24054192766374438`, 0.7921736008134075], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{37 + Rational[7, 4] (-1 + 5^Rational[1, 2]), 41 - 
         7 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        37 + Rational[7, 4] (1 + 5^Rational[1, 2]), 41 - 
         7 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {44, 41}, {
        37 + Rational[7, 4] (1 + 5^Rational[1, 2]), 41 + 
         7 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        37 + Rational[7, 4] (-1 + 5^Rational[1, 2]), 41 + 
         7 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        37 + Rational[7, 4] (1 - 5^Rational[1, 2]), 41 + 
         7 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2]},
         {
        37 + Rational[7, 4] (-1 - 5^Rational[1, 2]), 41 + 
         7 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {30, 41}, {
        37 + Rational[7, 4] (-1 - 5^Rational[1, 2]), 41 - 
         7 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        37 + Rational[7, 4] (1 - 5^Rational[1, 2]), 41 - 
         7 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{39.16311896062463, 34.342604385933925`}, {
        42.66311896062463, 36.88550323395269}, {44, 41}, {42.66311896062463, 
        45.11449676604731}, {39.16311896062463, 47.657395614066075`}, {
        34.83688103937537, 47.657395614066075`}, {31.336881039375367`, 
        45.11449676604731}, {30, 41}, {31.336881039375367`, 
        36.88550323395269}, {34.83688103937537, 34.342604385933925`}}]],
     RegularPolygon[{37, 41}, 7, 10]]}, 
   {RGBColor[0.8555549419683277, 0.34511642181976554`, 0.6932933717911574], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{36 + 2 (-1 + 5^Rational[1, 2]), 60 - 
         8 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        36 + 2 (1 + 5^Rational[1, 2]), 60 - 
         8 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {44, 60}, {
        36 + 2 (1 + 5^Rational[1, 2]), 60 + 
         8 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        36 + 2 (-1 + 5^Rational[1, 2]), 60 + 
         8 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        36 + 2 (1 - 5^Rational[1, 2]), 60 + 
         8 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        36 + 2 (-1 - 5^Rational[1, 2]), 60 + 
         8 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {28, 60}, {
        36 + 2 (-1 - 5^Rational[1, 2]), 60 - 
         8 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        36 + 2 (1 - 5^Rational[1, 2]), 60 - 
         8 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{38.47213595499958, 52.39154786963877}, {
        42.47213595499958, 55.29771798166021}, {44, 60}, {42.47213595499958, 
        64.70228201833979}, {38.47213595499958, 67.60845213036123}, {
        33.52786404500042, 67.60845213036123}, {29.52786404500042, 
        64.70228201833979}, {28, 60}, {29.52786404500042, 
        55.29771798166021}, {33.52786404500042, 52.39154786963877}}]],
     RegularPolygon[{36, 60}, 8, 10]]}, 
   {RGBColor[0.19995748095975818`, 0.9786276168975216, 0.376412413152037], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{65 + Rational[3, 2] (-1 + 5^Rational[1, 2]), 34 - 
         6 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        65 + Rational[3, 2] (1 + 5^Rational[1, 2]), 34 - 
         6 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {71, 34}, {
        65 + Rational[3, 2] (1 + 5^Rational[1, 2]), 34 + 
         6 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        65 + Rational[3, 2] (-1 + 5^Rational[1, 2]), 34 + 
         6 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        65 + Rational[3, 2] (1 - 5^Rational[1, 2]), 34 + 
         6 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        65 + Rational[3, 2] (-1 - 5^Rational[1, 2]), 34 + 
         6 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {59, 34}, {
        65 + Rational[3, 2] (-1 - 5^Rational[1, 2]), 34 - 
         6 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        65 + Rational[3, 2] (1 - 5^Rational[1, 2]), 34 - 
         6 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{66.85410196624969, 28.293660902229078`}, {
        69.85410196624969, 30.47328848624516}, {71, 34}, {69.85410196624969, 
        37.52671151375484}, {66.85410196624969, 39.70633909777092}, {
        63.14589803375031, 39.70633909777092}, {60.14589803375031, 
        37.52671151375484}, {59, 34}, {60.14589803375031, 
        30.47328848624516}, {63.14589803375031, 28.293660902229078`}}]],
     RegularPolygon[{65, 34}, 6, 10]]}, 
   {RGBColor[0.27421128760145264`, 0.06382771535565701, 0.919203050475109], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{68 + 5^Rational[1, 2], 78 - 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        70 + 5^Rational[1, 2], 78 - 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {73, 78}, {
        70 + 5^Rational[1, 2], 78 + 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        68 + 5^Rational[1, 2], 78 + 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        70 - 5^Rational[1, 2], 78 + 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        68 - 5^Rational[1, 2], 78 + 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {65, 78}, {
        68 - 5^Rational[1, 2], 78 - 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        70 - 5^Rational[1, 2], 78 - 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{70.23606797749979, 74.19577393481939}, {
        72.23606797749979, 75.6488589908301}, {73, 78}, {72.23606797749979, 
        80.3511410091699}, {70.23606797749979, 81.80422606518061}, {
        67.76393202250021, 81.80422606518061}, {65.76393202250021, 
        80.3511410091699}, {65, 78}, {65.76393202250021, 75.6488589908301}, {
        67.76393202250021, 74.19577393481939}}]],
     RegularPolygon[{69, 78}, 4, 10]]}, 
   {RGBColor[0.5896017017618378, 0.15551546847397413`, 0.18586548323926277`], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{65 + Rational[3, 2] (-1 + 5^Rational[1, 2]), 24 - 
         6 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        65 + Rational[3, 2] (1 + 5^Rational[1, 2]), 24 - 
         6 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {71, 24}, {
        65 + Rational[3, 2] (1 + 5^Rational[1, 2]), 24 + 
         6 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        65 + Rational[3, 2] (-1 + 5^Rational[1, 2]), 24 + 
         6 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        65 + Rational[3, 2] (1 - 5^Rational[1, 2]), 24 + 
         6 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        65 + Rational[3, 2] (-1 - 5^Rational[1, 2]), 24 + 
         6 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {59, 24}, {
        65 + Rational[3, 2] (-1 - 5^Rational[1, 2]), 24 - 
         6 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        65 + Rational[3, 2] (1 - 5^Rational[1, 2]), 24 - 
         6 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{66.85410196624969, 18.293660902229078`}, {
        69.85410196624969, 20.47328848624516}, {71, 24}, {69.85410196624969, 
        27.52671151375484}, {66.85410196624969, 29.706339097770922`}, {
        63.14589803375031, 29.706339097770922`}, {60.14589803375031, 
        27.52671151375484}, {59, 24}, {60.14589803375031, 
        20.47328848624516}, {63.14589803375031, 18.293660902229078`}}]],
     RegularPolygon[{65, 24}, 6, 10]]}, 
   {RGBColor[0.8847884571350482, 0.9176017658143321, 0.9558252641612517], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{28 + Rational[7, 4] (-1 + 5^Rational[1, 2]), 79 - 
         7 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        28 + Rational[7, 4] (1 + 5^Rational[1, 2]), 79 - 
         7 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {35, 79}, {
        28 + Rational[7, 4] (1 + 5^Rational[1, 2]), 79 + 
         7 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        28 + Rational[7, 4] (-1 + 5^Rational[1, 2]), 79 + 
         7 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        28 + Rational[7, 4] (1 - 5^Rational[1, 2]), 79 + 
         7 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        28 + Rational[7, 4] (-1 - 5^Rational[1, 2]), 79 + 
         7 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {21, 79}, {
        28 + Rational[7, 4] (-1 - 5^Rational[1, 2]), 79 - 
         7 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        28 + Rational[7, 4] (1 - 5^Rational[1, 2]), 79 - 
         7 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{30.163118960624633`, 72.34260438593392}, {
        33.66311896062463, 74.88550323395269}, {35, 79}, {33.66311896062463, 
        83.11449676604731}, {30.163118960624633`, 85.65739561406608}, {
        25.836881039375367`, 85.65739561406608}, {22.336881039375367`, 
        83.11449676604731}, {21, 79}, {22.336881039375367`, 
        74.88550323395269}, {25.836881039375367`, 72.34260438593392}}]],
     RegularPolygon[{28, 79}, 7, 10]]}, 
   {RGBColor[0.4598900388817664, 0.19508461226916318`, 0.4147398887814182], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{69 + 5^Rational[1, 2], 1 - 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        71 + 5^Rational[1, 2], 1 - 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {74, 1}, {
        71 + 5^Rational[1, 2], 1 + 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        69 + 5^Rational[1, 2], 1 + 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        71 - 5^Rational[1, 2], 1 + 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        69 - 5^Rational[1, 2], 1 + 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {66, 1}, {
        69 - 5^Rational[1, 2], 1 - 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        71 - 5^Rational[1, 2], 1 - 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{71.23606797749979, -2.804226065180614}, {
        73.23606797749979, -1.3511410091698925`}, {74, 1}, {73.23606797749979,
         3.3511410091698925`}, {71.23606797749979, 4.804226065180615}, {
        68.76393202250021, 4.804226065180615}, {66.76393202250021, 
        3.3511410091698925`}, {66, 1}, {
        66.76393202250021, -1.3511410091698925`}, {
        68.76393202250021, -2.804226065180614}}]],
     RegularPolygon[{70, 1}, 4, 10]]}, 
   {RGBColor[0.4321493547297206, 0.767441485239724, 0.8170783944854547], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{17 + 5^Rational[1, 2], 2 - 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        19 + 5^Rational[1, 2], 2 - 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {22, 2}, {
        19 + 5^Rational[1, 2], 2 + 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        17 + 5^Rational[1, 2], 2 + 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        19 - 5^Rational[1, 2], 2 + 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        17 - 5^Rational[1, 2], 2 + 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {14, 2}, {
        17 - 5^Rational[1, 2], 2 - 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        19 - 5^Rational[1, 2], 2 - 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{19.23606797749979, -1.8042260651806141`}, {
        21.23606797749979, -0.35114100916989255`}, {22, 2}, {
        21.23606797749979, 4.3511410091698925`}, {19.23606797749979, 
        5.804226065180615}, {16.76393202250021, 5.804226065180615}, {
        14.76393202250021, 4.3511410091698925`}, {14, 2}, {
        14.76393202250021, -0.35114100916989255`}, {
        16.76393202250021, -1.8042260651806141`}}]],
     RegularPolygon[{18, 2}, 4, 10]]}, 
   {RGBColor[0.3126778024624568, 0.18912006328701159`, 0.7210032217147904], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{51 + 2 (-1 + 5^Rational[1, 2]), 90 - 
         8 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        51 + 2 (1 + 5^Rational[1, 2]), 90 - 
         8 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {59, 90}, {
        51 + 2 (1 + 5^Rational[1, 2]), 90 + 
         8 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        51 + 2 (-1 + 5^Rational[1, 2]), 90 + 
         8 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        51 + 2 (1 - 5^Rational[1, 2]), 90 + 
         8 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        51 + 2 (-1 - 5^Rational[1, 2]), 90 + 
         8 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {43, 90}, {
        51 + 2 (-1 - 5^Rational[1, 2]), 90 - 
         8 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        51 + 2 (1 - 5^Rational[1, 2]), 90 - 
         8 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{53.47213595499958, 82.39154786963877}, {
        57.47213595499958, 85.29771798166021}, {59, 90}, {57.47213595499958, 
        94.70228201833979}, {53.47213595499958, 97.60845213036123}, {
        48.52786404500042, 97.60845213036123}, {44.52786404500042, 
        94.70228201833979}, {43, 90}, {44.52786404500042, 
        85.29771798166021}, {48.52786404500042, 82.39154786963877}}]],
     RegularPolygon[{51, 90}, 8, 10]]}, 
   {RGBColor[0.4676656982720473, 0.16798551327809297`, 0.2523759414032374], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{74 + Rational[5, 4] (-1 + 5^Rational[1, 2]), 41 - 
         5 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        74 + Rational[5, 4] (1 + 5^Rational[1, 2]), 41 - 
         5 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {79, 41}, {
        74 + Rational[5, 4] (1 + 5^Rational[1, 2]), 41 + 
         5 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        74 + Rational[5, 4] (-1 + 5^Rational[1, 2]), 41 + 
         5 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        74 + Rational[5, 4] (1 - 5^Rational[1, 2]), 41 + 
         5 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        74 + Rational[5, 4] (-1 - 5^Rational[1, 2]), 41 + 
         5 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {69, 41}, {
        74 + Rational[5, 4] (-1 - 5^Rational[1, 2]), 41 - 
         5 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        74 + Rational[5, 4] (1 - 5^Rational[1, 2]), 41 - 
         5 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{75.54508497187474, 36.24471741852423}, {
        78.04508497187474, 38.06107373853764}, {79, 41}, {78.04508497187474, 
        43.93892626146236}, {75.54508497187474, 45.75528258147577}, {
        72.45491502812526, 45.75528258147577}, {69.95491502812526, 
        43.93892626146236}, {69, 41}, {69.95491502812526, 
        38.06107373853764}, {72.45491502812526, 36.24471741852423}}]],
     RegularPolygon[{74, 41}, 5, 10]]}, 
   {RGBColor[0.23370444531648338`, 0.8757055793906763, 0.6811457782771324], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{58 + Rational[3, 2] (-1 + 5^Rational[1, 2]), 63 - 
         6 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        58 + Rational[3, 2] (1 + 5^Rational[1, 2]), 63 - 
         6 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {64, 63}, {
        58 + Rational[3, 2] (1 + 5^Rational[1, 2]), 63 + 
         6 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        58 + Rational[3, 2] (-1 + 5^Rational[1, 2]), 63 + 
         6 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        58 + Rational[3, 2] (1 - 5^Rational[1, 2]), 63 + 
         6 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        58 + Rational[3, 2] (-1 - 5^Rational[1, 2]), 63 + 
         6 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {52, 63}, {
        58 + Rational[3, 2] (-1 - 5^Rational[1, 2]), 63 - 
         6 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        58 + Rational[3, 2] (1 - 5^Rational[1, 2]), 63 - 
         6 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{59.85410196624969, 57.29366090222908}, {
        62.85410196624969, 59.47328848624516}, {64, 63}, {62.85410196624969, 
        66.52671151375483}, {59.85410196624969, 68.70633909777092}, {
        56.14589803375031, 68.70633909777092}, {53.14589803375031, 
        66.52671151375483}, {52, 63}, {53.14589803375031, 
        59.47328848624516}, {56.14589803375031, 57.29366090222908}}]],
     RegularPolygon[{58, 63}, 6, 10]]}, 
   {RGBColor[
    0.0037682303892285773`, 0.07383581228099856, 0.40298743799683767`], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{32 + 2 (-1 + 5^Rational[1, 2]), 44 - 
         8 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        32 + 2 (1 + 5^Rational[1, 2]), 44 - 
         8 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {40, 44}, {
        32 + 2 (1 + 5^Rational[1, 2]), 44 + 
         8 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        32 + 2 (-1 + 5^Rational[1, 2]), 44 + 
         8 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        32 + 2 (1 - 5^Rational[1, 2]), 44 + 
         8 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        32 + 2 (-1 - 5^Rational[1, 2]), 44 + 
         8 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {24, 44}, {
        32 + 2 (-1 - 5^Rational[1, 2]), 44 - 
         8 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        32 + 2 (1 - 5^Rational[1, 2]), 44 - 
         8 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{34.47213595499958, 36.39154786963877}, {
        38.47213595499958, 39.29771798166021}, {40, 44}, {38.47213595499958, 
        48.70228201833979}, {34.47213595499958, 51.60845213036123}, {
        29.52786404500042, 51.60845213036123}, {25.52786404500042, 
        48.70228201833979}, {24, 44}, {25.52786404500042, 
        39.29771798166021}, {29.52786404500042, 36.39154786963877}}]],
     RegularPolygon[{32, 44}, 8, 10]]}, 
   {RGBColor[0.3194934234053868, 0.7984761003348806, 0.4217140671247226], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{66 + Rational[3, 4] (-1 + 5^Rational[1, 2]), 43 - 
         3 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        66 + Rational[3, 4] (1 + 5^Rational[1, 2]), 43 - 
         3 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {69, 43}, {
        66 + Rational[3, 4] (1 + 5^Rational[1, 2]), 43 + 
         3 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        66 + Rational[3, 4] (-1 + 5^Rational[1, 2]), 43 + 
         3 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        66 + Rational[3, 4] (1 - 5^Rational[1, 2]), 43 + 
         3 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        66 + Rational[3, 4] (-1 - 5^Rational[1, 2]), 43 + 
         3 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {63, 43}, {
        66 + Rational[3, 4] (-1 - 5^Rational[1, 2]), 43 - 
         3 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        66 + Rational[3, 4] (1 - 5^Rational[1, 2]), 43 - 
         3 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{66.92705098312484, 40.14683045111454}, {
        68.42705098312484, 41.23664424312258}, {69, 43}, {68.42705098312484, 
        44.76335575687742}, {66.92705098312484, 45.85316954888546}, {
        65.07294901687516, 45.85316954888546}, {63.57294901687516, 
        44.76335575687742}, {63, 43}, {63.57294901687516, 
        41.23664424312258}, {65.07294901687516, 40.14683045111454}}]],
     RegularPolygon[{66, 43}, 3, 10]]}, 
   {RGBColor[0.8560804177366728, 0.17095200138030564`, 0.8542144992789451], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{12 + Rational[3, 4] (-1 + 5^Rational[1, 2]), 7 - 
         3 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        12 + Rational[3, 4] (1 + 5^Rational[1, 2]), 7 - 
         3 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {15, 7}, {
        12 + Rational[3, 4] (1 + 5^Rational[1, 2]), 7 + 
         3 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        12 + Rational[3, 4] (-1 + 5^Rational[1, 2]), 7 + 
         3 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        12 + Rational[3, 4] (1 - 5^Rational[1, 2]), 7 + 
         3 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        12 + Rational[3, 4] (-1 - 5^Rational[1, 2]), 7 + 
         3 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {9, 7}, {
        12 + Rational[3, 4] (-1 - 5^Rational[1, 2]), 7 - 
         3 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        12 + Rational[3, 4] (1 - 5^Rational[1, 2]), 7 - 
         3 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{12.927050983124843`, 4.146830451114539}, {
        14.427050983124843`, 5.236644243122581}, {15, 7}, {
        14.427050983124843`, 8.76335575687742}, {12.927050983124843`, 
        9.853169548885461}, {11.072949016875157`, 9.853169548885461}, {
        9.572949016875157, 8.76335575687742}, {9, 7}, {9.572949016875157, 
        5.236644243122581}, {11.072949016875157`, 4.146830451114539}}]],
     RegularPolygon[{12, 7}, 3, 10]]}, 
   {RGBColor[0.3852532009083365, 0.5076556353518933, 0.21545752495443393`], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{12 + 5^Rational[1, 2], 58 - 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        14 + 5^Rational[1, 2], 58 - 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {17, 58}, {
        14 + 5^Rational[1, 2], 58 + 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        12 + 5^Rational[1, 2], 58 + 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        14 - 5^Rational[1, 2], 58 + 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        12 - 5^Rational[1, 2], 58 + 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {9, 58}, {
        12 - 5^Rational[1, 2], 58 - 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        14 - 5^Rational[1, 2], 58 - 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{14.23606797749979, 54.195773934819385`}, {
        16.23606797749979, 55.64885899083011}, {17, 58}, {16.23606797749979, 
        60.35114100916989}, {14.23606797749979, 61.804226065180615`}, {
        11.76393202250021, 61.804226065180615`}, {9.76393202250021, 
        60.35114100916989}, {9, 58}, {9.76393202250021, 55.64885899083011}, {
        11.76393202250021, 54.195773934819385`}}]],
     RegularPolygon[{13, 58}, 4, 10]]}, 
   {RGBColor[0.10139965300431553`, 0.9802087035049534, 0.38397655535319664`], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{73 + Rational[5, 4] (-1 + 5^Rational[1, 2]), 80 - 
         5 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        73 + Rational[5, 4] (1 + 5^Rational[1, 2]), 80 - 
         5 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {78, 80}, {
        73 + Rational[5, 4] (1 + 5^Rational[1, 2]), 80 + 
         5 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        73 + Rational[5, 4] (-1 + 5^Rational[1, 2]), 80 + 
         5 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        73 + Rational[5, 4] (1 - 5^Rational[1, 2]), 80 + 
         5 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        73 + Rational[5, 4] (-1 - 5^Rational[1, 2]), 80 + 
         5 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {68, 80}, {
        73 + Rational[5, 4] (-1 - 5^Rational[1, 2]), 80 - 
         5 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        73 + Rational[5, 4] (1 - 5^Rational[1, 2]), 80 - 
         5 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{74.54508497187474, 75.24471741852423}, {
        77.04508497187474, 77.06107373853763}, {78, 80}, {77.04508497187474, 
        82.93892626146237}, {74.54508497187474, 84.75528258147577}, {
        71.45491502812526, 84.75528258147577}, {68.95491502812526, 
        82.93892626146237}, {68, 80}, {68.95491502812526, 
        77.06107373853763}, {71.45491502812526, 75.24471741852423}}]],
     RegularPolygon[{73, 80}, 5, 10]]}, 
   {RGBColor[0.9543521257085674, 0.5908881105373751, 0.37963986220062074`], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{78 + Rational[5, 4] (-1 + 5^Rational[1, 2]), 73 - 
         5 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        78 + Rational[5, 4] (1 + 5^Rational[1, 2]), 73 - 
         5 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {83, 73}, {
        78 + Rational[5, 4] (1 + 5^Rational[1, 2]), 73 + 
         5 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        78 + Rational[5, 4] (-1 + 5^Rational[1, 2]), 73 + 
         5 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        78 + Rational[5, 4] (1 - 5^Rational[1, 2]), 73 + 
         5 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        78 + Rational[5, 4] (-1 - 5^Rational[1, 2]), 73 + 
         5 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {73, 73}, {
        78 + Rational[5, 4] (-1 - 5^Rational[1, 2]), 73 - 
         5 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        78 + Rational[5, 4] (1 - 5^Rational[1, 2]), 73 - 
         5 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{79.54508497187474, 68.24471741852423}, {
        82.04508497187474, 70.06107373853763}, {83, 73}, {82.04508497187474, 
        75.93892626146237}, {79.54508497187474, 77.75528258147577}, {
        76.45491502812526, 77.75528258147577}, {73.95491502812526, 
        75.93892626146237}, {73, 73}, {73.95491502812526, 
        70.06107373853763}, {76.45491502812526, 68.24471741852423}}]],
     RegularPolygon[{78, 73}, 5, 10]]}, 
   {RGBColor[0.6273007877809773, 0.7573070831103559, 0.7048312518200599], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{51 + Rational[7, 4] (-1 + 5^Rational[1, 2]), 56 - 
         7 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        51 + Rational[7, 4] (1 + 5^Rational[1, 2]), 56 - 
         7 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {58, 56}, {
        51 + Rational[7, 4] (1 + 5^Rational[1, 2]), 56 + 
         7 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        51 + Rational[7, 4] (-1 + 5^Rational[1, 2]), 56 + 
         7 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        51 + Rational[7, 4] (1 - 5^Rational[1, 2]), 56 + 
         7 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        51 + Rational[7, 4] (-1 - 5^Rational[1, 2]), 56 + 
         7 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {44, 56}, {
        51 + Rational[7, 4] (-1 - 5^Rational[1, 2]), 56 - 
         7 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        51 + Rational[7, 4] (1 - 5^Rational[1, 2]), 56 - 
         7 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{53.16311896062463, 49.342604385933925`}, {
        56.66311896062463, 51.88550323395269}, {58, 56}, {56.66311896062463, 
        60.11449676604731}, {53.16311896062463, 62.657395614066075`}, {
        48.83688103937537, 62.657395614066075`}, {45.33688103937537, 
        60.11449676604731}, {44, 56}, {45.33688103937537, 
        51.88550323395269}, {48.83688103937537, 49.342604385933925`}}]],
     RegularPolygon[{51, 56}, 7, 10]]}, 
   {RGBColor[0.1546222903451433, 0.8178763344009408, 0.5693211688904398], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{71 + Rational[3, 2] (-1 + 5^Rational[1, 2]), 91 - 
         6 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        71 + Rational[3, 2] (1 + 5^Rational[1, 2]), 91 - 
         6 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {77, 91}, {
        71 + Rational[3, 2] (1 + 5^Rational[1, 2]), 91 + 
         6 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        71 + Rational[3, 2] (-1 + 5^Rational[1, 2]), 91 + 
         6 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        71 + Rational[3, 2] (1 - 5^Rational[1, 2]), 91 + 
         6 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        71 + Rational[3, 2] (-1 - 5^Rational[1, 2]), 91 + 
         6 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {65, 91}, {
        71 + Rational[3, 2] (-1 - 5^Rational[1, 2]), 91 - 
         6 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        71 + Rational[3, 2] (1 - 5^Rational[1, 2]), 91 - 
         6 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{72.85410196624969, 85.29366090222908}, {
        75.85410196624969, 87.47328848624517}, {77, 91}, {75.85410196624969, 
        94.52671151375483}, {72.85410196624969, 96.70633909777092}, {
        69.14589803375031, 96.70633909777092}, {66.14589803375031, 
        94.52671151375483}, {65, 91}, {66.14589803375031, 
        87.47328848624517}, {69.14589803375031, 85.29366090222908}}]],
     RegularPolygon[{71, 91}, 6, 10]]}, 
   {RGBColor[0.09830271292059756, 0.04050271747150891, 0.4268227844917749], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{43 + 
         Rational[7, 4] (-1 + 5^Rational[1, 2]), (-7) (Rational[5, 8] + 
           Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2]}, {
        43 + Rational[7, 4] (1 + 5^Rational[1, 2]), (-7) (Rational[5, 8] + 
           Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2]}, {50, 0}, {
        43 + Rational[7, 4] (1 + 5^Rational[1, 2]), 
         7 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        43 + Rational[7, 4] (-1 + 5^Rational[1, 2]), 
         7 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        43 + Rational[7, 4] (1 - 5^Rational[1, 2]), 
         7 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        43 + Rational[7, 4] (-1 - 5^Rational[1, 2]), 
         7 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {36, 0}, {
        43 + Rational[7, 4] (-1 - 5^Rational[1, 2]), (-7) (Rational[5, 8] + 
           Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2]}, {
        43 + Rational[7, 4] (1 - 5^Rational[1, 2]), (-7) (Rational[5, 8] + 
           Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2]}}, {{
        45.16311896062463, -6.657395614066075}, {
        48.66311896062463, -4.114496766047312}, {50, 0}, {48.66311896062463, 
        4.114496766047312}, {45.16311896062463, 6.657395614066075}, {
        40.83688103937537, 6.657395614066075}, {37.33688103937537, 
        4.114496766047312}, {36, 0}, {
        37.33688103937537, -4.114496766047312}, {
        40.83688103937537, -6.657395614066075}}]],
     RegularPolygon[{43, 0}, 7, 10]]}, 
   {RGBColor[0.6214372438311737, 0.5155970196030484, 0.8905176779173503], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{89 + 5^Rational[1, 2], 8 - 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        91 + 5^Rational[1, 2], 8 - 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {94, 8}, {
        91 + 5^Rational[1, 2], 8 + 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        89 + 5^Rational[1, 2], 8 + 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        91 - 5^Rational[1, 2], 8 + 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        89 - 5^Rational[1, 2], 8 + 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {86, 8}, {
        89 - 5^Rational[1, 2], 8 - 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        91 - 5^Rational[1, 2], 8 - 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{91.23606797749979, 4.195773934819385}, {
        93.23606797749979, 5.6488589908301075`}, {94, 8}, {93.23606797749979, 
        10.351141009169893`}, {91.23606797749979, 11.804226065180615`}, {
        88.76393202250021, 11.804226065180615`}, {86.76393202250021, 
        10.351141009169893`}, {86, 8}, {86.76393202250021, 
        5.6488589908301075`}, {88.76393202250021, 4.195773934819385}}]],
     RegularPolygon[{90, 8}, 4, 10]]}, 
   {RGBColor[0.8737180748125946, 0.36921897744621734`, 0.4695026446076749], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{71 + 5^Rational[1, 2], 51 - 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        73 + 5^Rational[1, 2], 51 - 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {76, 51}, {
        73 + 5^Rational[1, 2], 51 + 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        71 + 5^Rational[1, 2], 51 + 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        73 - 5^Rational[1, 2], 51 + 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        71 - 5^Rational[1, 2], 51 + 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {68, 51}, {
        71 - 5^Rational[1, 2], 51 - 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        73 - 5^Rational[1, 2], 51 - 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{73.23606797749979, 47.195773934819385`}, {
        75.23606797749979, 48.64885899083011}, {76, 51}, {75.23606797749979, 
        53.35114100916989}, {73.23606797749979, 54.804226065180615`}, {
        70.76393202250021, 54.804226065180615`}, {68.76393202250021, 
        53.35114100916989}, {68, 51}, {68.76393202250021, 
        48.64885899083011}, {70.76393202250021, 47.195773934819385`}}]],
     RegularPolygon[{72, 51}, 4, 10]]}, 
   {RGBColor[0.5827006834007762, 0.794682225130193, 0.15888746496632433`], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{52 + 2 (-1 + 5^Rational[1, 2]), 42 - 
         8 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        52 + 2 (1 + 5^Rational[1, 2]), 42 - 
         8 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {60, 42}, {
        52 + 2 (1 + 5^Rational[1, 2]), 42 + 
         8 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        52 + 2 (-1 + 5^Rational[1, 2]), 42 + 
         8 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        52 + 2 (1 - 5^Rational[1, 2]), 42 + 
         8 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        52 + 2 (-1 - 5^Rational[1, 2]), 42 + 
         8 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {44, 42}, {
        52 + 2 (-1 - 5^Rational[1, 2]), 42 - 
         8 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        52 + 2 (1 - 5^Rational[1, 2]), 42 - 
         8 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{54.47213595499958, 34.39154786963877}, {
        58.47213595499958, 37.29771798166021}, {60, 42}, {58.47213595499958, 
        46.70228201833979}, {54.47213595499958, 49.60845213036123}, {
        49.52786404500042, 49.60845213036123}, {45.52786404500042, 
        46.70228201833979}, {44, 42}, {45.52786404500042, 
        37.29771798166021}, {49.52786404500042, 34.39154786963877}}]],
     RegularPolygon[{52, 42}, 8, 10]]}, 
   {RGBColor[0.23038305653091018`, 0.7785359207507838, 0.23457320862153774`], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{2 + 2 (-1 + 5^Rational[1, 2]), 78 - 
         8 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        2 + 2 (1 + 5^Rational[1, 2]), 78 - 
         8 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {10, 78}, {
        2 + 2 (1 + 5^Rational[1, 2]), 78 + 
         8 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        2 + 2 (-1 + 5^Rational[1, 2]), 78 + 
         8 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        2 + 2 (1 - 5^Rational[1, 2]), 78 + 
         8 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        2 + 2 (-1 - 5^Rational[1, 2]), 78 + 
         8 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {-6, 78}, {
        2 + 2 (-1 - 5^Rational[1, 2]), 78 - 
         8 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        2 + 2 (1 - 5^Rational[1, 2]), 78 - 
         8 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{4.47213595499958, 70.39154786963877}, {
        8.47213595499958, 73.29771798166021}, {10, 78}, {8.47213595499958, 
        82.70228201833979}, {4.47213595499958, 
        85.60845213036123}, {-0.4721359549995796, 
        85.60845213036123}, {-4.47213595499958, 82.70228201833979}, {-6, 
        78}, {-4.47213595499958, 73.29771798166021}, {-0.4721359549995796, 
        70.39154786963877}}]],
     RegularPolygon[{2, 78}, 8, 10]]}, 
   {RGBColor[0.38174308751957087`, 0.39574794551345605`, 0.08494609474551451],
     Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{1 + Rational[3, 4] (-1 + 5^Rational[1, 2]), 32 - 
         3 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        1 + Rational[3, 4] (1 + 5^Rational[1, 2]), 32 - 
         3 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {4, 32}, {
        1 + Rational[3, 4] (1 + 5^Rational[1, 2]), 32 + 
         3 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        1 + Rational[3, 4] (-1 + 5^Rational[1, 2]), 32 + 
         3 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        1 + Rational[3, 4] (1 - 5^Rational[1, 2]), 32 + 
         3 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        1 + Rational[3, 4] (-1 - 5^Rational[1, 2]), 32 + 
         3 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {-2, 32}, {
        1 + Rational[3, 4] (-1 - 5^Rational[1, 2]), 32 - 
         3 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        1 + Rational[3, 4] (1 - 5^Rational[1, 2]), 32 - 
         3 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{1.9270509831248424`, 29.14683045111454}, {
        3.4270509831248424`, 30.23664424312258}, {4, 32}, {
        3.4270509831248424`, 33.76335575687742}, {1.9270509831248424`, 
        34.85316954888546}, {0.07294901687515765, 
        34.85316954888546}, {-1.4270509831248424`, 33.76335575687742}, {-2, 
        32}, {-1.4270509831248424`, 30.23664424312258}, {0.07294901687515765, 
        29.14683045111454}}]],
     RegularPolygon[{1, 32}, 3, 10]]}, 
   {RGBColor[0.6909076908028156, 0.8383612383000489, 0.387978915788056], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{39 + 5^Rational[1, 2], 23 - 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        41 + 5^Rational[1, 2], 23 - 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {44, 23}, {
        41 + 5^Rational[1, 2], 23 + 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        39 + 5^Rational[1, 2], 23 + 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        41 - 5^Rational[1, 2], 23 + 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        39 - 5^Rational[1, 2], 23 + 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {36, 23}, {
        39 - 5^Rational[1, 2], 23 - 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        41 - 5^Rational[1, 2], 23 - 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{41.236067977499786`, 19.195773934819385`}, {
        43.236067977499786`, 20.648858990830107`}, {44, 23}, {
        43.236067977499786`, 25.351141009169893`}, {41.236067977499786`, 
        26.804226065180615`}, {38.763932022500214`, 26.804226065180615`}, {
        36.763932022500214`, 25.351141009169893`}, {36, 23}, {
        36.763932022500214`, 20.648858990830107`}, {38.763932022500214`, 
        19.195773934819385`}}]],
     RegularPolygon[{40, 23}, 4, 10]]}, 
   {RGBColor[0.4170017779934585, 0.21437562759112083`, 0.9766336736751757], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{14 + Rational[3, 2] (-1 + 5^Rational[1, 2]), 66 - 
         6 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        14 + Rational[3, 2] (1 + 5^Rational[1, 2]), 66 - 
         6 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {20, 66}, {
        14 + Rational[3, 2] (1 + 5^Rational[1, 2]), 66 + 
         6 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        14 + Rational[3, 2] (-1 + 5^Rational[1, 2]), 66 + 
         6 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        14 + Rational[3, 2] (1 - 5^Rational[1, 2]), 66 + 
         6 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        14 + Rational[3, 2] (-1 - 5^Rational[1, 2]), 66 + 
         6 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {8, 66}, {
        14 + Rational[3, 2] (-1 - 5^Rational[1, 2]), 66 - 
         6 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        14 + Rational[3, 2] (1 - 5^Rational[1, 2]), 66 - 
         6 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{15.854101966249685`, 60.29366090222908}, {
        18.854101966249686`, 62.47328848624516}, {20, 66}, {
        18.854101966249686`, 69.52671151375483}, {15.854101966249685`, 
        71.70633909777092}, {12.145898033750315`, 71.70633909777092}, {
        9.145898033750315, 69.52671151375483}, {8, 66}, {9.145898033750315, 
        62.47328848624516}, {12.145898033750315`, 60.29366090222908}}]],
     RegularPolygon[{14, 66}, 6, 10]]}, 
   {RGBColor[0.2855160380059878, 0.07240712819928197, 0.7436891874037348], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{10 + 2 (-1 + 5^Rational[1, 2]), 51 - 
         8 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        10 + 2 (1 + 5^Rational[1, 2]), 51 - 
         8 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {18, 51}, {
        10 + 2 (1 + 5^Rational[1, 2]), 51 + 
         8 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        10 + 2 (-1 + 5^Rational[1, 2]), 51 + 
         8 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        10 + 2 (1 - 5^Rational[1, 2]), 51 + 
         8 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        10 + 2 (-1 - 5^Rational[1, 2]), 51 + 
         8 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {2, 51}, {
        10 + 2 (-1 - 5^Rational[1, 2]), 51 - 
         8 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        10 + 2 (1 - 5^Rational[1, 2]), 51 - 
         8 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{12.47213595499958, 43.39154786963877}, {
        16.47213595499958, 46.29771798166021}, {18, 51}, {16.47213595499958, 
        55.70228201833979}, {12.47213595499958, 58.60845213036123}, {
        7.52786404500042, 58.60845213036123}, {3.5278640450004204`, 
        55.70228201833979}, {2, 51}, {3.5278640450004204`, 
        46.29771798166021}, {7.52786404500042, 43.39154786963877}}]],
     RegularPolygon[{10, 51}, 8, 10]]}, 
   {RGBColor[0.6877875252659662, 0.19165430039865128`, 0.33215920657844045`], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{96 + Rational[7, 4] (-1 + 5^Rational[1, 2]), 33 - 
         7 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        96 + Rational[7, 4] (1 + 5^Rational[1, 2]), 33 - 
         7 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {103, 33}, {
        96 + Rational[7, 4] (1 + 5^Rational[1, 2]), 33 + 
         7 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        96 + Rational[7, 4] (-1 + 5^Rational[1, 2]), 33 + 
         7 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        96 + Rational[7, 4] (1 - 5^Rational[1, 2]), 33 + 
         7 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        96 + Rational[7, 4] (-1 - 5^Rational[1, 2]), 33 + 
         7 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {89, 33}, {
        96 + Rational[7, 4] (-1 - 5^Rational[1, 2]), 33 - 
         7 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        96 + Rational[7, 4] (1 - 5^Rational[1, 2]), 33 - 
         7 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{98.16311896062463, 26.342604385933925`}, {
        101.66311896062463`, 28.88550323395269}, {103, 33}, {
        101.66311896062463`, 37.11449676604731}, {98.16311896062463, 
        39.657395614066075`}, {93.83688103937537, 39.657395614066075`}, {
        90.33688103937537, 37.11449676604731}, {89, 33}, {90.33688103937537, 
        28.88550323395269}, {93.83688103937537, 26.342604385933925`}}]],
     RegularPolygon[{96, 33}, 7, 10]]}, 
   {RGBColor[0.034962786068166274`, 0.3960047545476657, 0.2766741273054627], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{99 + 2 (-1 + 5^Rational[1, 2]), 59 - 
         8 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        99 + 2 (1 + 5^Rational[1, 2]), 59 - 
         8 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {107, 59}, {
        99 + 2 (1 + 5^Rational[1, 2]), 59 + 
         8 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        99 + 2 (-1 + 5^Rational[1, 2]), 59 + 
         8 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        99 + 2 (1 - 5^Rational[1, 2]), 59 + 
         8 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        99 + 2 (-1 - 5^Rational[1, 2]), 59 + 
         8 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {91, 59}, {
        99 + 2 (-1 - 5^Rational[1, 2]), 59 - 
         8 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        99 + 2 (1 - 5^Rational[1, 2]), 59 - 
         8 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{101.47213595499957`, 51.39154786963877}, {
        105.47213595499957`, 54.29771798166021}, {107, 59}, {
        105.47213595499957`, 63.70228201833979}, {101.47213595499957`, 
        66.60845213036123}, {96.52786404500043, 66.60845213036123}, {
        92.52786404500043, 63.70228201833979}, {91, 59}, {92.52786404500043, 
        54.29771798166021}, {96.52786404500043, 51.39154786963877}}]],
     RegularPolygon[{99, 59}, 8, 10]]}, 
   {RGBColor[0.8017206875088778, 0.6572300979230452, 0.9915825341759896], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{93 + Rational[7, 4] (-1 + 5^Rational[1, 2]), 75 - 
         7 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        93 + Rational[7, 4] (1 + 5^Rational[1, 2]), 75 - 
         7 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {100, 75}, {
        93 + Rational[7, 4] (1 + 5^Rational[1, 2]), 75 + 
         7 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        93 + Rational[7, 4] (-1 + 5^Rational[1, 2]), 75 + 
         7 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        93 + Rational[7, 4] (1 - 5^Rational[1, 2]), 75 + 
         7 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        93 + Rational[7, 4] (-1 - 5^Rational[1, 2]), 75 + 
         7 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {86, 75}, {
        93 + Rational[7, 4] (-1 - 5^Rational[1, 2]), 75 - 
         7 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        93 + Rational[7, 4] (1 - 5^Rational[1, 2]), 75 - 
         7 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{95.16311896062463, 68.34260438593392}, {
        98.66311896062463, 70.88550323395269}, {100, 75}, {98.66311896062463, 
        79.11449676604731}, {95.16311896062463, 81.65739561406608}, {
        90.83688103937537, 81.65739561406608}, {87.33688103937537, 
        79.11449676604731}, {86, 75}, {87.33688103937537, 
        70.88550323395269}, {90.83688103937537, 68.34260438593392}}]],
     RegularPolygon[{93, 75}, 7, 10]]}, 
   {RGBColor[0.8349844091564427, 0.32508684287416756`, 0.07701779804375075], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{60 + Rational[3, 2] (-1 + 5^Rational[1, 2]), 38 - 
         6 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        60 + Rational[3, 2] (1 + 5^Rational[1, 2]), 38 - 
         6 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {66, 38}, {
        60 + Rational[3, 2] (1 + 5^Rational[1, 2]), 38 + 
         6 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        60 + Rational[3, 2] (-1 + 5^Rational[1, 2]), 38 + 
         6 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        60 + Rational[3, 2] (1 - 5^Rational[1, 2]), 38 + 
         6 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        60 + Rational[3, 2] (-1 - 5^Rational[1, 2]), 38 + 
         6 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {54, 38}, {
        60 + Rational[3, 2] (-1 - 5^Rational[1, 2]), 38 - 
         6 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        60 + Rational[3, 2] (1 - 5^Rational[1, 2]), 38 - 
         6 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{61.85410196624969, 32.29366090222908}, {
        64.85410196624969, 34.47328848624516}, {66, 38}, {64.85410196624969, 
        41.52671151375484}, {61.85410196624969, 43.70633909777092}, {
        58.14589803375031, 43.70633909777092}, {55.14589803375031, 
        41.52671151375484}, {54, 38}, {55.14589803375031, 
        34.47328848624516}, {58.14589803375031, 32.29366090222908}}]],
     RegularPolygon[{60, 38}, 6, 10]]}, 
   {RGBColor[0.4131420309497382, 0.5760103589594929, 0.2042075956300824], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{92 + 2 (-1 + 5^Rational[1, 2]), 31 - 
         8 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        92 + 2 (1 + 5^Rational[1, 2]), 31 - 
         8 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {100, 31}, {
        92 + 2 (1 + 5^Rational[1, 2]), 31 + 
         8 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        92 + 2 (-1 + 5^Rational[1, 2]), 31 + 
         8 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        92 + 2 (1 - 5^Rational[1, 2]), 31 + 
         8 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        92 + 2 (-1 - 5^Rational[1, 2]), 31 + 
         8 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {84, 31}, {
        92 + 2 (-1 - 5^Rational[1, 2]), 31 - 
         8 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        92 + 2 (1 - 5^Rational[1, 2]), 31 - 
         8 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{94.47213595499957, 23.39154786963877}, {
        98.47213595499957, 26.297717981660213`}, {100, 31}, {
        98.47213595499957, 35.70228201833979}, {94.47213595499957, 
        38.60845213036123}, {89.52786404500043, 38.60845213036123}, {
        85.52786404500043, 35.70228201833979}, {84, 31}, {85.52786404500043, 
        26.297717981660213`}, {89.52786404500043, 23.39154786963877}}]],
     RegularPolygon[{92, 31}, 8, 10]]}, 
   {RGBColor[0.6621310153927376, 0.1824055196826322, 0.4111480794951936], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{16 + 2 (-1 + 5^Rational[1, 2]), 74 - 
         8 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        16 + 2 (1 + 5^Rational[1, 2]), 74 - 
         8 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {24, 74}, {
        16 + 2 (1 + 5^Rational[1, 2]), 74 + 
         8 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        16 + 2 (-1 + 5^Rational[1, 2]), 74 + 
         8 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        16 + 2 (1 - 5^Rational[1, 2]), 74 + 
         8 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        16 + 2 (-1 - 5^Rational[1, 2]), 74 + 
         8 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {8, 74}, {
        16 + 2 (-1 - 5^Rational[1, 2]), 74 - 
         8 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        16 + 2 (1 - 5^Rational[1, 2]), 74 - 
         8 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{18.47213595499958, 66.39154786963877}, {
        22.47213595499958, 69.29771798166021}, {24, 74}, {22.47213595499958, 
        78.70228201833979}, {18.47213595499958, 81.60845213036123}, {
        13.52786404500042, 81.60845213036123}, {9.52786404500042, 
        78.70228201833979}, {8, 74}, {9.52786404500042, 69.29771798166021}, {
        13.52786404500042, 66.39154786963877}}]],
     RegularPolygon[{16, 74}, 8, 10]]}, 
   {RGBColor[0.499811864034132, 0.7076709163660475, 0.09531994279137401], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{80 + 5^Rational[1, 2], 50 - 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        82 + 5^Rational[1, 2], 50 - 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {85, 50}, {
        82 + 5^Rational[1, 2], 50 + 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        80 + 5^Rational[1, 2], 50 + 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        82 - 5^Rational[1, 2], 50 + 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        80 - 5^Rational[1, 2], 50 + 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {77, 50}, {
        80 - 5^Rational[1, 2], 50 - 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        82 - 5^Rational[1, 2], 50 - 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{82.23606797749979, 46.195773934819385`}, {
        84.23606797749979, 47.64885899083011}, {85, 50}, {84.23606797749979, 
        52.35114100916989}, {82.23606797749979, 53.804226065180615`}, {
        79.76393202250021, 53.804226065180615`}, {77.76393202250021, 
        52.35114100916989}, {77, 50}, {77.76393202250021, 
        47.64885899083011}, {79.76393202250021, 46.195773934819385`}}]],
     RegularPolygon[{81, 50}, 4, 10]]}, 
   {RGBColor[0.3569147228320395, 0.08694377728530212, 0.25317559495145003`], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{45 + Rational[3, 4] (-1 + 5^Rational[1, 2]), 35 - 
         3 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        45 + Rational[3, 4] (1 + 5^Rational[1, 2]), 35 - 
         3 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {48, 35}, {
        45 + Rational[3, 4] (1 + 5^Rational[1, 2]), 35 + 
         3 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        45 + Rational[3, 4] (-1 + 5^Rational[1, 2]), 35 + 
         3 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        45 + Rational[3, 4] (1 - 5^Rational[1, 2]), 35 + 
         3 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        45 + Rational[3, 4] (-1 - 5^Rational[1, 2]), 35 + 
         3 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {42, 35}, {
        45 + Rational[3, 4] (-1 - 5^Rational[1, 2]), 35 - 
         3 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        45 + Rational[3, 4] (1 - 5^Rational[1, 2]), 35 - 
         3 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{45.92705098312484, 32.14683045111454}, {
        47.42705098312484, 33.23664424312258}, {48, 35}, {47.42705098312484, 
        36.76335575687742}, {45.92705098312484, 37.85316954888546}, {
        44.07294901687516, 37.85316954888546}, {42.57294901687516, 
        36.76335575687742}, {42, 35}, {42.57294901687516, 
        33.23664424312258}, {44.07294901687516, 32.14683045111454}}]],
     RegularPolygon[{45, 35}, 3, 10]]}, 
   {RGBColor[0.806048752502438, 0.44177197727979944`, 0.6757854119525804], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{40 + Rational[3, 4] (-1 + 5^Rational[1, 2]), 52 - 
         3 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        40 + Rational[3, 4] (1 + 5^Rational[1, 2]), 52 - 
         3 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {43, 52}, {
        40 + Rational[3, 4] (1 + 5^Rational[1, 2]), 52 + 
         3 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        40 + Rational[3, 4] (-1 + 5^Rational[1, 2]), 52 + 
         3 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        40 + Rational[3, 4] (1 - 5^Rational[1, 2]), 52 + 
         3 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        40 + Rational[3, 4] (-1 - 5^Rational[1, 2]), 52 + 
         3 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {37, 52}, {
        40 + Rational[3, 4] (-1 - 5^Rational[1, 2]), 52 - 
         3 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        40 + Rational[3, 4] (1 - 5^Rational[1, 2]), 52 - 
         3 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{40.92705098312484, 49.14683045111454}, {
        42.42705098312484, 50.23664424312258}, {43, 52}, {42.42705098312484, 
        53.76335575687742}, {40.92705098312484, 54.85316954888546}, {
        39.07294901687516, 54.85316954888546}, {37.57294901687516, 
        53.76335575687742}, {37, 52}, {37.57294901687516, 
        50.23664424312258}, {39.07294901687516, 49.14683045111454}}]],
     RegularPolygon[{40, 52}, 3, 10]]}, 
   {RGBColor[0.9430620269445855, 0.8656807997065765, 0.49906520987882685`], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{57 + Rational[7, 4] (-1 + 5^Rational[1, 2]), 47 - 
         7 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        57 + Rational[7, 4] (1 + 5^Rational[1, 2]), 47 - 
         7 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {64, 47}, {
        57 + Rational[7, 4] (1 + 5^Rational[1, 2]), 47 + 
         7 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        57 + Rational[7, 4] (-1 + 5^Rational[1, 2]), 47 + 
         7 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        57 + Rational[7, 4] (1 - 5^Rational[1, 2]), 47 + 
         7 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        57 + Rational[7, 4] (-1 - 5^Rational[1, 2]), 47 + 
         7 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {50, 47}, {
        57 + Rational[7, 4] (-1 - 5^Rational[1, 2]), 47 - 
         7 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        57 + Rational[7, 4] (1 - 5^Rational[1, 2]), 47 - 
         7 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{59.16311896062463, 40.342604385933925`}, {
        62.66311896062463, 42.88550323395269}, {64, 47}, {62.66311896062463, 
        51.11449676604731}, {59.16311896062463, 53.657395614066075`}, {
        54.83688103937537, 53.657395614066075`}, {51.33688103937537, 
        51.11449676604731}, {50, 47}, {51.33688103937537, 
        42.88550323395269}, {54.83688103937537, 40.342604385933925`}}]],
     RegularPolygon[{57, 47}, 7, 10]]}, 
   {RGBColor[0.8236545135599345, 0.37787173725607803`, 0.8650114716840831], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{21 + Rational[3, 2] (-1 + 5^Rational[1, 2]), 93 - 
         6 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        21 + Rational[3, 2] (1 + 5^Rational[1, 2]), 93 - 
         6 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {27, 93}, {
        21 + Rational[3, 2] (1 + 5^Rational[1, 2]), 93 + 
         6 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        21 + Rational[3, 2] (-1 + 5^Rational[1, 2]), 93 + 
         6 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        21 + Rational[3, 2] (1 - 5^Rational[1, 2]), 93 + 
         6 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        21 + Rational[3, 2] (-1 - 5^Rational[1, 2]), 93 + 
         6 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {15, 93}, {
        21 + Rational[3, 2] (-1 - 5^Rational[1, 2]), 93 - 
         6 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        21 + Rational[3, 2] (1 - 5^Rational[1, 2]), 93 - 
         6 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{22.854101966249686`, 87.29366090222908}, {
        25.854101966249686`, 89.47328848624517}, {27, 93}, {
        25.854101966249686`, 96.52671151375483}, {22.854101966249686`, 
        98.70633909777092}, {19.145898033750314`, 98.70633909777092}, {
        16.145898033750314`, 96.52671151375483}, {15, 93}, {
        16.145898033750314`, 89.47328848624517}, {19.145898033750314`, 
        87.29366090222908}}]],
     RegularPolygon[{21, 93}, 6, 10]]}, 
   {RGBColor[0.2982476615542473, 0.0765523112610147, 0.4013852027555429], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{65 + 2 (-1 + 5^Rational[1, 2]), 91 - 
         8 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        65 + 2 (1 + 5^Rational[1, 2]), 91 - 
         8 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {73, 91}, {
        65 + 2 (1 + 5^Rational[1, 2]), 91 + 
         8 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        65 + 2 (-1 + 5^Rational[1, 2]), 91 + 
         8 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        65 + 2 (1 - 5^Rational[1, 2]), 91 + 
         8 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        65 + 2 (-1 - 5^Rational[1, 2]), 91 + 
         8 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {57, 91}, {
        65 + 2 (-1 - 5^Rational[1, 2]), 91 - 
         8 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        65 + 2 (1 - 5^Rational[1, 2]), 91 - 
         8 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{67.47213595499957, 83.39154786963877}, {
        71.47213595499957, 86.29771798166021}, {73, 91}, {71.47213595499957, 
        95.70228201833979}, {67.47213595499957, 98.60845213036123}, {
        62.52786404500042, 98.60845213036123}, {58.52786404500042, 
        95.70228201833979}, {57, 91}, {58.52786404500042, 
        86.29771798166021}, {62.52786404500042, 83.39154786963877}}]],
     RegularPolygon[{65, 91}, 8, 10]]}, 
   {RGBColor[0.08749796878299354, 0.6097031143600555, 0.048046993831425855`], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{45 + Rational[3, 4] (-1 + 5^Rational[1, 2]), 26 - 
         3 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        45 + Rational[3, 4] (1 + 5^Rational[1, 2]), 26 - 
         3 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {48, 26}, {
        45 + Rational[3, 4] (1 + 5^Rational[1, 2]), 26 + 
         3 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        45 + Rational[3, 4] (-1 + 5^Rational[1, 2]), 26 + 
         3 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        45 + Rational[3, 4] (1 - 5^Rational[1, 2]), 26 + 
         3 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        45 + Rational[3, 4] (-1 - 5^Rational[1, 2]), 26 + 
         3 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {42, 26}, {
        45 + Rational[3, 4] (-1 - 5^Rational[1, 2]), 26 - 
         3 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        45 + Rational[3, 4] (1 - 5^Rational[1, 2]), 26 - 
         3 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{45.92705098312484, 23.14683045111454}, {
        47.42705098312484, 24.23664424312258}, {48, 26}, {47.42705098312484, 
        27.76335575687742}, {45.92705098312484, 28.85316954888546}, {
        44.07294901687516, 28.85316954888546}, {42.57294901687516, 
        27.76335575687742}, {42, 26}, {42.57294901687516, 
        24.23664424312258}, {44.07294901687516, 23.14683045111454}}]],
     RegularPolygon[{45, 26}, 3, 10]]}, 
   {RGBColor[0.8890276387627547, 0.4923202540067866, 0.5510014931896423], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{29 + 5^Rational[1, 2], 9 - 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        31 + 5^Rational[1, 2], 9 - 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {34, 9}, {
        31 + 5^Rational[1, 2], 9 + 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        29 + 5^Rational[1, 2], 9 + 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        31 - 5^Rational[1, 2], 9 + 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        29 - 5^Rational[1, 2], 9 + 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {26, 9}, {
        29 - 5^Rational[1, 2], 9 - 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        31 - 5^Rational[1, 2], 9 - 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{31.23606797749979, 5.195773934819385}, {
        33.236067977499786`, 6.6488589908301075`}, {34, 9}, {
        33.236067977499786`, 11.351141009169893`}, {31.23606797749979, 
        12.804226065180615`}, {28.76393202250021, 12.804226065180615`}, {
        26.76393202250021, 11.351141009169893`}, {26, 9}, {26.76393202250021, 
        6.6488589908301075`}, {28.76393202250021, 5.195773934819385}}]],
     RegularPolygon[{30, 9}, 4, 10]]}, 
   {RGBColor[0.4991211574956227, 0.2023618984238149, 0.47355189341378834`], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{34 + Rational[3, 4] (-1 + 5^Rational[1, 2]), 85 - 
         3 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        34 + Rational[3, 4] (1 + 5^Rational[1, 2]), 85 - 
         3 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {37, 85}, {
        34 + Rational[3, 4] (1 + 5^Rational[1, 2]), 85 + 
         3 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        34 + Rational[3, 4] (-1 + 5^Rational[1, 2]), 85 + 
         3 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        34 + Rational[3, 4] (1 - 5^Rational[1, 2]), 85 + 
         3 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        34 + Rational[3, 4] (-1 - 5^Rational[1, 2]), 85 + 
         3 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {31, 85}, {
        34 + Rational[3, 4] (-1 - 5^Rational[1, 2]), 85 - 
         3 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        34 + Rational[3, 4] (1 - 5^Rational[1, 2]), 85 - 
         3 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{34.92705098312484, 82.14683045111454}, {
        36.42705098312484, 83.23664424312258}, {37, 85}, {36.42705098312484, 
        86.76335575687742}, {34.92705098312484, 87.85316954888546}, {
        33.07294901687516, 87.85316954888546}, {31.572949016875157`, 
        86.76335575687742}, {31, 85}, {31.572949016875157`, 
        83.23664424312258}, {33.07294901687516, 82.14683045111454}}]],
     RegularPolygon[{34, 85}, 3, 10]]}, 
   {RGBColor[0.09233517914757972, 0.6704219904794981, 0.30732667597556085`], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{94 + Rational[7, 4] (-1 + 5^Rational[1, 2]), 40 - 
         7 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        94 + Rational[7, 4] (1 + 5^Rational[1, 2]), 40 - 
         7 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {101, 40}, {
        94 + Rational[7, 4] (1 + 5^Rational[1, 2]), 40 + 
         7 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        94 + Rational[7, 4] (-1 + 5^Rational[1, 2]), 40 + 
         7 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        94 + Rational[7, 4] (1 - 5^Rational[1, 2]), 40 + 
         7 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        94 + Rational[7, 4] (-1 - 5^Rational[1, 2]), 40 + 
         7 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {87, 40}, {
        94 + Rational[7, 4] (-1 - 5^Rational[1, 2]), 40 - 
         7 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        94 + Rational[7, 4] (1 - 5^Rational[1, 2]), 40 - 
         7 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{96.16311896062463, 33.342604385933925`}, {
        99.66311896062463, 35.88550323395269}, {101, 40}, {99.66311896062463, 
        44.11449676604731}, {96.16311896062463, 46.657395614066075`}, {
        91.83688103937537, 46.657395614066075`}, {88.33688103937537, 
        44.11449676604731}, {87, 40}, {88.33688103937537, 
        35.88550323395269}, {91.83688103937537, 33.342604385933925`}}]],
     RegularPolygon[{94, 40}, 7, 10]]}, 
   {RGBColor[0.1941116538094647, 0.6640411165174931, 0.592569448207209], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{74 + Rational[3, 4] (-1 + 5^Rational[1, 2]), 97 - 
         3 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        74 + Rational[3, 4] (1 + 5^Rational[1, 2]), 97 - 
         3 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {77, 97}, {
        74 + Rational[3, 4] (1 + 5^Rational[1, 2]), 97 + 
         3 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        74 + Rational[3, 4] (-1 + 5^Rational[1, 2]), 97 + 
         3 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        74 + Rational[3, 4] (1 - 5^Rational[1, 2]), 97 + 
         3 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        74 + Rational[3, 4] (-1 - 5^Rational[1, 2]), 97 + 
         3 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {71, 97}, {
        74 + Rational[3, 4] (-1 - 5^Rational[1, 2]), 97 - 
         3 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        74 + Rational[3, 4] (1 - 5^Rational[1, 2]), 97 - 
         3 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{74.92705098312484, 94.14683045111454}, {
        76.42705098312484, 95.23664424312258}, {77, 97}, {76.42705098312484, 
        98.76335575687742}, {74.92705098312484, 99.85316954888546}, {
        73.07294901687516, 99.85316954888546}, {71.57294901687516, 
        98.76335575687742}, {71, 97}, {71.57294901687516, 
        95.23664424312258}, {73.07294901687516, 94.14683045111454}}]],
     RegularPolygon[{74, 97}, 3, 10]]}, 
   {RGBColor[0.02707521765961407, 0.06615333198359075, 0.319082601511655], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{41 + Rational[7, 4] (-1 + 5^Rational[1, 2]), 82 - 
         7 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        41 + Rational[7, 4] (1 + 5^Rational[1, 2]), 82 - 
         7 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {48, 82}, {
        41 + Rational[7, 4] (1 + 5^Rational[1, 2]), 82 + 
         7 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        41 + Rational[7, 4] (-1 + 5^Rational[1, 2]), 82 + 
         7 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        41 + Rational[7, 4] (1 - 5^Rational[1, 2]), 82 + 
         7 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        41 + Rational[7, 4] (-1 - 5^Rational[1, 2]), 82 + 
         7 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {34, 82}, {
        41 + Rational[7, 4] (-1 - 5^Rational[1, 2]), 82 - 
         7 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        41 + Rational[7, 4] (1 - 5^Rational[1, 2]), 82 - 
         7 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{43.16311896062463, 75.34260438593392}, {
        46.66311896062463, 77.88550323395269}, {48, 82}, {46.66311896062463, 
        86.11449676604731}, {43.16311896062463, 88.65739561406608}, {
        38.83688103937537, 88.65739561406608}, {35.33688103937537, 
        86.11449676604731}, {34, 82}, {35.33688103937537, 
        77.88550323395269}, {38.83688103937537, 75.34260438593392}}]],
     RegularPolygon[{41, 82}, 7, 10]]}, 
   {RGBColor[0.7464654262381965, 0.7011913299056354, 0.15366586482416622`], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{29 + Rational[3, 2] (-1 + 5^Rational[1, 2]), 64 - 
         6 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        29 + Rational[3, 2] (1 + 5^Rational[1, 2]), 64 - 
         6 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {35, 64}, {
        29 + Rational[3, 2] (1 + 5^Rational[1, 2]), 64 + 
         6 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        29 + Rational[3, 2] (-1 + 5^Rational[1, 2]), 64 + 
         6 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        29 + Rational[3, 2] (1 - 5^Rational[1, 2]), 64 + 
         6 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        29 + Rational[3, 2] (-1 - 5^Rational[1, 2]), 64 + 
         6 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {23, 64}, {
        29 + Rational[3, 2] (-1 - 5^Rational[1, 2]), 64 - 
         6 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        29 + Rational[3, 2] (1 - 5^Rational[1, 2]), 64 - 
         6 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{30.854101966249686`, 58.29366090222908}, {
        33.85410196624969, 60.47328848624516}, {35, 64}, {33.85410196624969, 
        67.52671151375483}, {30.854101966249686`, 69.70633909777092}, {
        27.145898033750314`, 69.70633909777092}, {24.145898033750314`, 
        67.52671151375483}, {23, 64}, {24.145898033750314`, 
        60.47328848624516}, {27.145898033750314`, 58.29366090222908}}]],
     RegularPolygon[{29, 64}, 6, 10]]}, 
   {RGBColor[0.5130235452175242, 0.3735882373733721, 0.15600911771835668`], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{89 + 5^Rational[1, 2], 74 - 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        91 + 5^Rational[1, 2], 74 - 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {94, 74}, {
        91 + 5^Rational[1, 2], 74 + 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        89 + 5^Rational[1, 2], 74 + 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        91 - 5^Rational[1, 2], 74 + 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        89 - 5^Rational[1, 2], 74 + 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {86, 74}, {
        89 - 5^Rational[1, 2], 74 - 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        91 - 5^Rational[1, 2], 74 - 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{91.23606797749979, 70.19577393481939}, {
        93.23606797749979, 71.6488589908301}, {94, 74}, {93.23606797749979, 
        76.3511410091699}, {91.23606797749979, 77.80422606518061}, {
        88.76393202250021, 77.80422606518061}, {86.76393202250021, 
        76.3511410091699}, {86, 74}, {86.76393202250021, 71.6488589908301}, {
        88.76393202250021, 70.19577393481939}}]],
     RegularPolygon[{90, 74}, 4, 10]]}, 
   {RGBColor[0.4220935110924322, 0.7987017799822533, 0.2988532803931987], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{68 + Rational[7, 4] (-1 + 5^Rational[1, 2]), 19 - 
         7 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        68 + Rational[7, 4] (1 + 5^Rational[1, 2]), 19 - 
         7 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {75, 19}, {
        68 + Rational[7, 4] (1 + 5^Rational[1, 2]), 19 + 
         7 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        68 + Rational[7, 4] (-1 + 5^Rational[1, 2]), 19 + 
         7 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        68 + Rational[7, 4] (1 - 5^Rational[1, 2]), 19 + 
         7 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        68 + Rational[7, 4] (-1 - 5^Rational[1, 2]), 19 + 
         7 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {61, 19}, {
        68 + Rational[7, 4] (-1 - 5^Rational[1, 2]), 19 - 
         7 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        68 + Rational[7, 4] (1 - 5^Rational[1, 2]), 19 - 
         7 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{70.16311896062463, 12.342604385933925`}, {
        73.66311896062463, 14.885503233952688`}, {75, 19}, {73.66311896062463,
         23.11449676604731}, {70.16311896062463, 25.657395614066075`}, {
        65.83688103937537, 25.657395614066075`}, {62.33688103937537, 
        23.11449676604731}, {61, 19}, {62.33688103937537, 
        14.885503233952688`}, {65.83688103937537, 12.342604385933925`}}]],
     RegularPolygon[{68, 19}, 7, 10]]}, 
   {RGBColor[0.5934281244407662, 0.22784655413360566`, 0.7907214866972565], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{11 + Rational[5, 4] (-1 + 5^Rational[1, 2]), 89 - 
         5 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        11 + Rational[5, 4] (1 + 5^Rational[1, 2]), 89 - 
         5 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {16, 89}, {
        11 + Rational[5, 4] (1 + 5^Rational[1, 2]), 89 + 
         5 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        11 + Rational[5, 4] (-1 + 5^Rational[1, 2]), 89 + 
         5 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        11 + Rational[5, 4] (1 - 5^Rational[1, 2]), 89 + 
         5 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        11 + Rational[5, 4] (-1 - 5^Rational[1, 2]), 89 + 
         5 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {6, 89}, {
        11 + Rational[5, 4] (-1 - 5^Rational[1, 2]), 89 - 
         5 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        11 + Rational[5, 4] (1 - 5^Rational[1, 2]), 89 - 
         5 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{12.545084971874736`, 84.24471741852423}, {
        15.045084971874736`, 86.06107373853763}, {16, 89}, {
        15.045084971874736`, 91.93892626146237}, {12.545084971874736`, 
        93.75528258147577}, {9.454915028125264, 93.75528258147577}, {
        6.954915028125263, 91.93892626146237}, {6, 89}, {6.954915028125263, 
        86.06107373853763}, {9.454915028125264, 84.24471741852423}}]],
     RegularPolygon[{11, 89}, 5, 10]]}, 
   {RGBColor[0.8696954167606832, 0.533226273621084, 0.844373171413606], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{84 + 5^Rational[1, 2], 92 - 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        86 + 5^Rational[1, 2], 92 - 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {89, 92}, {
        86 + 5^Rational[1, 2], 92 + 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        84 + 5^Rational[1, 2], 92 + 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        86 - 5^Rational[1, 2], 92 + 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        84 - 5^Rational[1, 2], 92 + 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {81, 92}, {
        84 - 5^Rational[1, 2], 92 - 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        86 - 5^Rational[1, 2], 92 - 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{86.23606797749979, 88.19577393481939}, {
        88.23606797749979, 89.6488589908301}, {89, 92}, {88.23606797749979, 
        94.3511410091699}, {86.23606797749979, 95.80422606518061}, {
        83.76393202250021, 95.80422606518061}, {81.76393202250021, 
        94.3511410091699}, {81, 92}, {81.76393202250021, 89.6488589908301}, {
        83.76393202250021, 88.19577393481939}}]],
     RegularPolygon[{85, 92}, 4, 10]]}, 
   {RGBColor[0.04608085013654617, 0.03523738148634181, 0.5153157082727318], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{25 + Rational[3, 2] (-1 + 5^Rational[1, 2]), 18 - 
         6 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        25 + Rational[3, 2] (1 + 5^Rational[1, 2]), 18 - 
         6 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {31, 18}, {
        25 + Rational[3, 2] (1 + 5^Rational[1, 2]), 18 + 
         6 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        25 + Rational[3, 2] (-1 + 5^Rational[1, 2]), 18 + 
         6 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        25 + Rational[3, 2] (1 - 5^Rational[1, 2]), 18 + 
         6 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        25 + Rational[3, 2] (-1 - 5^Rational[1, 2]), 18 + 
         6 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {19, 18}, {
        25 + Rational[3, 2] (-1 - 5^Rational[1, 2]), 18 - 
         6 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        25 + Rational[3, 2] (1 - 5^Rational[1, 2]), 18 - 
         6 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{26.854101966249686`, 12.293660902229078`}, {
        29.854101966249686`, 14.473288486245162`}, {31, 18}, {
        29.854101966249686`, 21.52671151375484}, {26.854101966249686`, 
        23.706339097770922`}, {23.145898033750314`, 23.706339097770922`}, {
        20.145898033750314`, 21.52671151375484}, {19, 18}, {
        20.145898033750314`, 14.473288486245162`}, {23.145898033750314`, 
        12.293660902229078`}}]],
     RegularPolygon[{25, 18}, 6, 10]]}, 
   {RGBColor[0.3239640091334812, 0.02236452363623509, 0.8408950977841236], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{44 + Rational[3, 2] (-1 + 5^Rational[1, 2]), 74 - 
         6 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        44 + Rational[3, 2] (1 + 5^Rational[1, 2]), 74 - 
         6 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {50, 74}, {
        44 + Rational[3, 2] (1 + 5^Rational[1, 2]), 74 + 
         6 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        44 + Rational[3, 2] (-1 + 5^Rational[1, 2]), 74 + 
         6 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        44 + Rational[3, 2] (1 - 5^Rational[1, 2]), 74 + 
         6 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        44 + Rational[3, 2] (-1 - 5^Rational[1, 2]), 74 + 
         6 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {38, 74}, {
        44 + Rational[3, 2] (-1 - 5^Rational[1, 2]), 74 - 
         6 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        44 + Rational[3, 2] (1 - 5^Rational[1, 2]), 74 - 
         6 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{45.85410196624969, 68.29366090222908}, {
        48.85410196624969, 70.47328848624517}, {50, 74}, {48.85410196624969, 
        77.52671151375483}, {45.85410196624969, 79.70633909777092}, {
        42.14589803375031, 79.70633909777092}, {39.14589803375031, 
        77.52671151375483}, {38, 74}, {39.14589803375031, 
        70.47328848624517}, {42.14589803375031, 68.29366090222908}}]],
     RegularPolygon[{44, 74}, 6, 10]]}, 
   {RGBColor[0.5050433767073372, 0.13624127182053658`, 0.12033472538218937`], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{70 + 5^Rational[1, 2], 67 - 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        72 + 5^Rational[1, 2], 67 - 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {75, 67}, {
        72 + 5^Rational[1, 2], 67 + 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        70 + 5^Rational[1, 2], 67 + 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        72 - 5^Rational[1, 2], 67 + 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        70 - 5^Rational[1, 2], 67 + 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {67, 67}, {
        70 - 5^Rational[1, 2], 67 - 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        72 - 5^Rational[1, 2], 67 - 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{72.23606797749979, 63.195773934819385`}, {
        74.23606797749979, 64.6488589908301}, {75, 67}, {74.23606797749979, 
        69.3511410091699}, {72.23606797749979, 70.80422606518061}, {
        69.76393202250021, 70.80422606518061}, {67.76393202250021, 
        69.3511410091699}, {67, 67}, {67.76393202250021, 64.6488589908301}, {
        69.76393202250021, 63.195773934819385`}}]],
     RegularPolygon[{71, 67}, 4, 10]]}, 
   {RGBColor[0.2201163809131057, 0.9662442029833354, 0.5979108894359264], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{66 + 5^Rational[1, 2], 25 - 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        68 + 5^Rational[1, 2], 25 - 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {71, 25}, {
        68 + 5^Rational[1, 2], 25 + 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        66 + 5^Rational[1, 2], 25 + 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        68 - 5^Rational[1, 2], 25 + 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        66 - 5^Rational[1, 2], 25 + 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {63, 25}, {
        66 - 5^Rational[1, 2], 25 - 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        68 - 5^Rational[1, 2], 25 - 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{68.23606797749979, 21.195773934819385`}, {
        70.23606797749979, 22.648858990830107`}, {71, 25}, {70.23606797749979,
         27.351141009169893`}, {68.23606797749979, 28.804226065180615`}, {
        65.76393202250021, 28.804226065180615`}, {63.763932022500214`, 
        27.351141009169893`}, {63, 25}, {63.763932022500214`, 
        22.648858990830107`}, {65.76393202250021, 21.195773934819385`}}]],
     RegularPolygon[{67, 25}, 4, 10]]}, 
   {RGBColor[0.004165684697315708, 0.19507426273100092`, 0.9481136274729103], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{85 + Rational[3, 2] (-1 + 5^Rational[1, 2]), 20 - 
         6 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        85 + Rational[3, 2] (1 + 5^Rational[1, 2]), 20 - 
         6 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {91, 20}, {
        85 + Rational[3, 2] (1 + 5^Rational[1, 2]), 20 + 
         6 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        85 + Rational[3, 2] (-1 + 5^Rational[1, 2]), 20 + 
         6 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        85 + Rational[3, 2] (1 - 5^Rational[1, 2]), 20 + 
         6 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        85 + Rational[3, 2] (-1 - 5^Rational[1, 2]), 20 + 
         6 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {79, 20}, {
        85 + Rational[3, 2] (-1 - 5^Rational[1, 2]), 20 - 
         6 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        85 + Rational[3, 2] (1 - 5^Rational[1, 2]), 20 - 
         6 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{86.85410196624969, 14.293660902229078`}, {
        89.85410196624969, 16.47328848624516}, {91, 20}, {89.85410196624969, 
        23.52671151375484}, {86.85410196624969, 25.706339097770922`}, {
        83.14589803375031, 25.706339097770922`}, {80.14589803375031, 
        23.52671151375484}, {79, 20}, {80.14589803375031, 
        16.47328848624516}, {83.14589803375031, 14.293660902229078`}}]],
     RegularPolygon[{85, 20}, 6, 10]]}, 
   {RGBColor[0.3013843714683464, 0.5622421918886287, 0.3291292354054387], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{99 + Rational[5, 4] (-1 + 5^Rational[1, 2]), 56 - 
         5 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        99 + Rational[5, 4] (1 + 5^Rational[1, 2]), 56 - 
         5 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {104, 56}, {
        99 + Rational[5, 4] (1 + 5^Rational[1, 2]), 56 + 
         5 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        99 + Rational[5, 4] (-1 + 5^Rational[1, 2]), 56 + 
         5 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        99 + Rational[5, 4] (1 - 5^Rational[1, 2]), 56 + 
         5 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        99 + Rational[5, 4] (-1 - 5^Rational[1, 2]), 56 + 
         5 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {94, 56}, {
        99 + Rational[5, 4] (-1 - 5^Rational[1, 2]), 56 - 
         5 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        99 + Rational[5, 4] (1 - 5^Rational[1, 2]), 56 - 
         5 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{100.54508497187474`, 51.24471741852423}, {
        103.04508497187474`, 53.06107373853764}, {104, 56}, {
        103.04508497187474`, 58.93892626146236}, {100.54508497187474`, 
        60.75528258147577}, {97.45491502812526, 60.75528258147577}, {
        94.95491502812526, 58.93892626146236}, {94, 56}, {94.95491502812526, 
        53.06107373853764}, {97.45491502812526, 51.24471741852423}}]],
     RegularPolygon[{99, 56}, 5, 10]]}, 
   {RGBColor[0.9472203362686074, 0.9057829010488672, 0.009808947788322753], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{39 + Rational[3, 4] (-1 + 5^Rational[1, 2]), 68 - 
         3 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        39 + Rational[3, 4] (1 + 5^Rational[1, 2]), 68 - 
         3 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {42, 68}, {
        39 + Rational[3, 4] (1 + 5^Rational[1, 2]), 68 + 
         3 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        39 + Rational[3, 4] (-1 + 5^Rational[1, 2]), 68 + 
         3 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        39 + Rational[3, 4] (1 - 5^Rational[1, 2]), 68 + 
         3 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        39 + Rational[3, 4] (-1 - 5^Rational[1, 2]), 68 + 
         3 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {36, 68}, {
        39 + Rational[3, 4] (-1 - 5^Rational[1, 2]), 68 - 
         3 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        39 + Rational[3, 4] (1 - 5^Rational[1, 2]), 68 - 
         3 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{39.92705098312484, 65.14683045111454}, {
        41.42705098312484, 66.23664424312258}, {42, 68}, {41.42705098312484, 
        69.76335575687742}, {39.92705098312484, 70.85316954888546}, {
        38.07294901687516, 70.85316954888546}, {36.57294901687516, 
        69.76335575687742}, {36, 68}, {36.57294901687516, 
        66.23664424312258}, {38.07294901687516, 65.14683045111454}}]],
     RegularPolygon[{39, 68}, 3, 10]]}, 
   {RGBColor[0.4801671339362994, 0.6384054599249378, 0.09977043560030263], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{92 + Rational[5, 4] (-1 + 5^Rational[1, 2]), 72 - 
         5 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        92 + Rational[5, 4] (1 + 5^Rational[1, 2]), 72 - 
         5 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {97, 72}, {
        92 + Rational[5, 4] (1 + 5^Rational[1, 2]), 72 + 
         5 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        92 + Rational[5, 4] (-1 + 5^Rational[1, 2]), 72 + 
         5 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        92 + Rational[5, 4] (1 - 5^Rational[1, 2]), 72 + 
         5 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        92 + Rational[5, 4] (-1 - 5^Rational[1, 2]), 72 + 
         5 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {87, 72}, {
        92 + Rational[5, 4] (-1 - 5^Rational[1, 2]), 72 - 
         5 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        92 + Rational[5, 4] (1 - 5^Rational[1, 2]), 72 - 
         5 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{93.54508497187474, 67.24471741852423}, {
        96.04508497187474, 69.06107373853763}, {97, 72}, {96.04508497187474, 
        74.93892626146237}, {93.54508497187474, 76.75528258147577}, {
        90.45491502812526, 76.75528258147577}, {87.95491502812526, 
        74.93892626146237}, {87, 72}, {87.95491502812526, 
        69.06107373853763}, {90.45491502812526, 67.24471741852423}}]],
     RegularPolygon[{92, 72}, 5, 10]]}, 
   {RGBColor[0.8820029639208025, 0.14950536206868392`, 0.8169214441552444], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{46 + 2 (-1 + 5^Rational[1, 2]), 95 - 
         8 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        46 + 2 (1 + 5^Rational[1, 2]), 95 - 
         8 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {54, 95}, {
        46 + 2 (1 + 5^Rational[1, 2]), 95 + 
         8 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        46 + 2 (-1 + 5^Rational[1, 2]), 95 + 
         8 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        46 + 2 (1 - 5^Rational[1, 2]), 95 + 
         8 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        46 + 2 (-1 - 5^Rational[1, 2]), 95 + 
         8 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {38, 95}, {
        46 + 2 (-1 - 5^Rational[1, 2]), 95 - 
         8 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        46 + 2 (1 - 5^Rational[1, 2]), 95 - 
         8 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{48.47213595499958, 87.39154786963877}, {
        52.47213595499958, 90.29771798166021}, {54, 95}, {52.47213595499958, 
        99.70228201833979}, {48.47213595499958, 102.60845213036123`}, {
        43.52786404500042, 102.60845213036123`}, {39.52786404500042, 
        99.70228201833979}, {38, 95}, {39.52786404500042, 
        90.29771798166021}, {43.52786404500042, 87.39154786963877}}]],
     RegularPolygon[{46, 95}, 8, 10]]}, 
   {RGBColor[0.09574097740160403, 0.1856675198607476, 0.0092688415488551], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{55 + Rational[3, 2] (-1 + 5^Rational[1, 2]), 90 - 
         6 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        55 + Rational[3, 2] (1 + 5^Rational[1, 2]), 90 - 
         6 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {61, 90}, {
        55 + Rational[3, 2] (1 + 5^Rational[1, 2]), 90 + 
         6 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        55 + Rational[3, 2] (-1 + 5^Rational[1, 2]), 90 + 
         6 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        55 + Rational[3, 2] (1 - 5^Rational[1, 2]), 90 + 
         6 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        55 + Rational[3, 2] (-1 - 5^Rational[1, 2]), 90 + 
         6 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {49, 90}, {
        55 + Rational[3, 2] (-1 - 5^Rational[1, 2]), 90 - 
         6 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        55 + Rational[3, 2] (1 - 5^Rational[1, 2]), 90 - 
         6 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{56.85410196624969, 84.29366090222908}, {
        59.85410196624969, 86.47328848624517}, {61, 90}, {59.85410196624969, 
        93.52671151375483}, {56.85410196624969, 95.70633909777092}, {
        53.14589803375031, 95.70633909777092}, {50.14589803375031, 
        93.52671151375483}, {49, 90}, {50.14589803375031, 
        86.47328848624517}, {53.14589803375031, 84.29366090222908}}]],
     RegularPolygon[{55, 90}, 6, 10]]}, 
   {RGBColor[0.9385627746258864, 0.7699299014905117, 0.5927942681748708], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{47 + Rational[5, 4] (-1 + 5^Rational[1, 2]), 12 - 
         5 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        47 + Rational[5, 4] (1 + 5^Rational[1, 2]), 12 - 
         5 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {52, 12}, {
        47 + Rational[5, 4] (1 + 5^Rational[1, 2]), 12 + 
         5 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        47 + Rational[5, 4] (-1 + 5^Rational[1, 2]), 12 + 
         5 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        47 + Rational[5, 4] (1 - 5^Rational[1, 2]), 12 + 
         5 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        47 + Rational[5, 4] (-1 - 5^Rational[1, 2]), 12 + 
         5 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {42, 12}, {
        47 + Rational[5, 4] (-1 - 5^Rational[1, 2]), 12 - 
         5 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        47 + Rational[5, 4] (1 - 5^Rational[1, 2]), 12 - 
         5 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{48.545084971874736`, 7.244717418524233}, {
        51.045084971874736`, 9.061073738537633}, {52, 12}, {
        51.045084971874736`, 14.938926261462367`}, {48.545084971874736`, 
        16.755282581475768`}, {45.454915028125264`, 16.755282581475768`}, {
        42.954915028125264`, 14.938926261462367`}, {42, 12}, {
        42.954915028125264`, 9.061073738537633}, {45.454915028125264`, 
        7.244717418524233}}]],
     RegularPolygon[{47, 12}, 5, 10]]}, 
   {RGBColor[0.29028072681066575`, 0.7446658302138991, 0.5912216833210571], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{45 + 5^Rational[1, 2], 52 - 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        47 + 5^Rational[1, 2], 52 - 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {50, 52}, {
        47 + 5^Rational[1, 2], 52 + 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        45 + 5^Rational[1, 2], 52 + 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        47 - 5^Rational[1, 2], 52 + 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        45 - 5^Rational[1, 2], 52 + 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {42, 52}, {
        45 - 5^Rational[1, 2], 52 - 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        47 - 5^Rational[1, 2], 52 - 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{47.236067977499786`, 48.195773934819385`}, {
        49.236067977499786`, 49.64885899083011}, {50, 52}, {
        49.236067977499786`, 54.35114100916989}, {47.236067977499786`, 
        55.804226065180615`}, {44.763932022500214`, 55.804226065180615`}, {
        42.763932022500214`, 54.35114100916989}, {42, 52}, {
        42.763932022500214`, 49.64885899083011}, {44.763932022500214`, 
        48.195773934819385`}}]],
     RegularPolygon[{46, 52}, 4, 10]]}, 
   {RGBColor[0.8808803675105092, 0.5332750793377323, 0.23393611824255256`], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{17 + 5^Rational[1, 2], 89 - 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        19 + 5^Rational[1, 2], 89 - 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {22, 89}, {
        19 + 5^Rational[1, 2], 89 + 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        17 + 5^Rational[1, 2], 89 + 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        19 - 5^Rational[1, 2], 89 + 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        17 - 5^Rational[1, 2], 89 + 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {14, 89}, {
        17 - 5^Rational[1, 2], 89 - 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        19 - 5^Rational[1, 2], 89 - 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{19.23606797749979, 85.19577393481939}, {
        21.23606797749979, 86.6488589908301}, {22, 89}, {21.23606797749979, 
        91.3511410091699}, {19.23606797749979, 92.80422606518061}, {
        16.76393202250021, 92.80422606518061}, {14.76393202250021, 
        91.3511410091699}, {14, 89}, {14.76393202250021, 86.6488589908301}, {
        16.76393202250021, 85.19577393481939}}]],
     RegularPolygon[{18, 89}, 4, 10]]}, 
   {RGBColor[0.3282127106244257, 0.9474520715734451, 0.11451812763265523`], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{Rational[5, 4] (-1 + 5^Rational[1, 2]), 24 - 
         5 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        Rational[5, 4] (1 + 5^Rational[1, 2]), 24 - 
         5 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {5, 24}, {
        Rational[5, 4] (1 + 5^Rational[1, 2]), 24 + 
         5 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        Rational[5, 4] (-1 + 5^Rational[1, 2]), 24 + 
         5 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        Rational[5, 4] (1 - 5^Rational[1, 2]), 24 + 
         5 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        Rational[5, 4] (-1 - 5^Rational[1, 2]), 24 + 
         5 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {-5, 24}, {
        Rational[5, 4] (-1 - 5^Rational[1, 2]), 24 - 
         5 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        Rational[5, 4] (1 - 5^Rational[1, 2]), 24 - 
         5 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{1.5450849718747373`, 19.244717418524232`}, {
        4.045084971874737, 21.061073738537633`}, {5, 24}, {4.045084971874737, 
        26.938926261462367`}, {1.5450849718747373`, 
        28.755282581475768`}, {-1.5450849718747373`, 
        28.755282581475768`}, {-4.045084971874737, 26.938926261462367`}, {-5, 
        24}, {-4.045084971874737, 21.061073738537633`}, {-1.5450849718747373`,
         19.244717418524232`}}]],
     RegularPolygon[{0, 24}, 5, 10]]}, 
   {RGBColor[0.5884017465934659, 0.5623657978576797, 0.38975994728026175`], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{38 + Rational[7, 4] (-1 + 5^Rational[1, 2]), 92 - 
         7 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        38 + Rational[7, 4] (1 + 5^Rational[1, 2]), 92 - 
         7 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {45, 92}, {
        38 + Rational[7, 4] (1 + 5^Rational[1, 2]), 92 + 
         7 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        38 + Rational[7, 4] (-1 + 5^Rational[1, 2]), 92 + 
         7 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        38 + Rational[7, 4] (1 - 5^Rational[1, 2]), 92 + 
         7 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        38 + Rational[7, 4] (-1 - 5^Rational[1, 2]), 92 + 
         7 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {31, 92}, {
        38 + Rational[7, 4] (-1 - 5^Rational[1, 2]), 92 - 
         7 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        38 + Rational[7, 4] (1 - 5^Rational[1, 2]), 92 - 
         7 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{40.16311896062463, 85.34260438593392}, {
        43.66311896062463, 87.88550323395269}, {45, 92}, {43.66311896062463, 
        96.11449676604731}, {40.16311896062463, 98.65739561406608}, {
        35.83688103937537, 98.65739561406608}, {32.33688103937537, 
        96.11449676604731}, {31, 92}, {32.33688103937537, 
        87.88550323395269}, {35.83688103937537, 85.34260438593392}}]],
     RegularPolygon[{38, 92}, 7, 10]]}, 
   {RGBColor[0.5567001102281466, 0.6699756869613458, 0.596955255395798], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{-1 + 5^Rational[1, 2], 76 - 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        1 + 5^Rational[1, 2], 76 - 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {4, 76}, {
        1 + 5^Rational[1, 2], 76 + 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {-1 + 5^Rational[1, 2], 76 + 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        1 - 5^Rational[1, 2], 76 + 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {-1 - 5^Rational[1, 2], 76 + 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {-4, 
        76}, {-1 - 5^Rational[1, 2], 76 - 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        1 - 5^Rational[1, 2], 76 - 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{1.2360679774997898`, 72.19577393481939}, {
        3.23606797749979, 73.6488589908301}, {4, 76}, {3.23606797749979, 
        78.3511410091699}, {1.2360679774997898`, 
        79.80422606518061}, {-1.2360679774997898`, 
        79.80422606518061}, {-3.23606797749979, 78.3511410091699}, {-4, 
        76}, {-3.23606797749979, 73.6488589908301}, {-1.2360679774997898`, 
        72.19577393481939}}]],
     RegularPolygon[{0, 76}, 4, 10]]}, 
   {RGBColor[0.6900606373751308, 0.45195420442432677`, 0.8882065835202235], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{16 + Rational[3, 4] (-1 + 5^Rational[1, 2]), 68 - 
         3 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        16 + Rational[3, 4] (1 + 5^Rational[1, 2]), 68 - 
         3 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {19, 68}, {
        16 + Rational[3, 4] (1 + 5^Rational[1, 2]), 68 + 
         3 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        16 + Rational[3, 4] (-1 + 5^Rational[1, 2]), 68 + 
         3 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        16 + Rational[3, 4] (1 - 5^Rational[1, 2]), 68 + 
         3 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        16 + Rational[3, 4] (-1 - 5^Rational[1, 2]), 68 + 
         3 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {13, 68}, {
        16 + Rational[3, 4] (-1 - 5^Rational[1, 2]), 68 - 
         3 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        16 + Rational[3, 4] (1 - 5^Rational[1, 2]), 68 - 
         3 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{16.927050983124843`, 65.14683045111454}, {
        18.427050983124843`, 66.23664424312258}, {19, 68}, {
        18.427050983124843`, 69.76335575687742}, {16.927050983124843`, 
        70.85316954888546}, {15.072949016875157`, 70.85316954888546}, {
        13.572949016875157`, 69.76335575687742}, {13, 68}, {
        13.572949016875157`, 66.23664424312258}, {15.072949016875157`, 
        65.14683045111454}}]],
     RegularPolygon[{16, 68}, 3, 10]]}, 
   {RGBColor[0.5264283076702181, 0.5247886227907386, 0.1313193682478], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{26 + Rational[3, 2] (-1 + 5^Rational[1, 2]), 86 - 
         6 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        26 + Rational[3, 2] (1 + 5^Rational[1, 2]), 86 - 
         6 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {32, 86}, {
        26 + Rational[3, 2] (1 + 5^Rational[1, 2]), 86 + 
         6 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        26 + Rational[3, 2] (-1 + 5^Rational[1, 2]), 86 + 
         6 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        26 + Rational[3, 2] (1 - 5^Rational[1, 2]), 86 + 
         6 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        26 + Rational[3, 2] (-1 - 5^Rational[1, 2]), 86 + 
         6 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {20, 86}, {
        26 + Rational[3, 2] (-1 - 5^Rational[1, 2]), 86 - 
         6 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        26 + Rational[3, 2] (1 - 5^Rational[1, 2]), 86 - 
         6 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{27.854101966249686`, 80.29366090222908}, {
        30.854101966249686`, 82.47328848624517}, {32, 86}, {
        30.854101966249686`, 89.52671151375483}, {27.854101966249686`, 
        91.70633909777092}, {24.145898033750314`, 91.70633909777092}, {
        21.145898033750314`, 89.52671151375483}, {20, 86}, {
        21.145898033750314`, 82.47328848624517}, {24.145898033750314`, 
        80.29366090222908}}]],
     RegularPolygon[{26, 86}, 6, 10]]}, 
   {RGBColor[0.010053791358190622`, 0.5148766207810833, 0.05699982057299513], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{67 + 5^Rational[1, 2], 91 - 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        69 + 5^Rational[1, 2], 91 - 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {72, 91}, {
        69 + 5^Rational[1, 2], 91 + 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        67 + 5^Rational[1, 2], 91 + 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        69 - 5^Rational[1, 2], 91 + 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        67 - 5^Rational[1, 2], 91 + 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {64, 91}, {
        67 - 5^Rational[1, 2], 91 - 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        69 - 5^Rational[1, 2], 91 - 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{69.23606797749979, 87.19577393481939}, {
        71.23606797749979, 88.6488589908301}, {72, 91}, {71.23606797749979, 
        93.3511410091699}, {69.23606797749979, 94.80422606518061}, {
        66.76393202250021, 94.80422606518061}, {64.76393202250021, 
        93.3511410091699}, {64, 91}, {64.76393202250021, 88.6488589908301}, {
        66.76393202250021, 87.19577393481939}}]],
     RegularPolygon[{68, 91}, 4, 10]]}, 
   {RGBColor[0.8203517905299009, 0.36345241428384734`, 0.6090601184496112], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{60 + 5^Rational[1, 2], 3 - 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        62 + 5^Rational[1, 2], 3 - 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {65, 3}, {
        62 + 5^Rational[1, 2], 3 + 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        60 + 5^Rational[1, 2], 3 + 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        62 - 5^Rational[1, 2], 3 + 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        60 - 5^Rational[1, 2], 3 + 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {57, 3}, {
        60 - 5^Rational[1, 2], 3 - 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        62 - 5^Rational[1, 2], 3 - 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{62.236067977499786`, -0.8042260651806141}, {
        64.23606797749979, 0.6488589908301075}, {65, 3}, {64.23606797749979, 
        5.3511410091698925`}, {62.236067977499786`, 6.804226065180615}, {
        59.763932022500214`, 6.804226065180615}, {57.763932022500214`, 
        5.3511410091698925`}, {57, 3}, {57.763932022500214`, 
        0.6488589908301075}, {59.763932022500214`, -0.8042260651806141}}]],
     RegularPolygon[{61, 3}, 4, 10]]}, 
   {RGBColor[0.6628929509268096, 0.9599954866569806, 0.12059613892486998`], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{72 + Rational[5, 4] (-1 + 5^Rational[1, 2]), 55 - 
         5 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        72 + Rational[5, 4] (1 + 5^Rational[1, 2]), 55 - 
         5 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {77, 55}, {
        72 + Rational[5, 4] (1 + 5^Rational[1, 2]), 55 + 
         5 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        72 + Rational[5, 4] (-1 + 5^Rational[1, 2]), 55 + 
         5 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        72 + Rational[5, 4] (1 - 5^Rational[1, 2]), 55 + 
         5 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        72 + Rational[5, 4] (-1 - 5^Rational[1, 2]), 55 + 
         5 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {67, 55}, {
        72 + Rational[5, 4] (-1 - 5^Rational[1, 2]), 55 - 
         5 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        72 + Rational[5, 4] (1 - 5^Rational[1, 2]), 55 - 
         5 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{73.54508497187474, 50.24471741852423}, {
        76.04508497187474, 52.06107373853764}, {77, 55}, {76.04508497187474, 
        57.93892626146236}, {73.54508497187474, 59.75528258147577}, {
        70.45491502812526, 59.75528258147577}, {67.95491502812526, 
        57.93892626146236}, {67, 55}, {67.95491502812526, 
        52.06107373853764}, {70.45491502812526, 50.24471741852423}}]],
     RegularPolygon[{72, 55}, 5, 10]]}, 
   {RGBColor[0.9450242424610784, 0.4578831370597749, 0.5283646444165717], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{83 + 5^Rational[1, 2], 55 - 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        85 + 5^Rational[1, 2], 55 - 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {88, 55}, {
        85 + 5^Rational[1, 2], 55 + 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        83 + 5^Rational[1, 2], 55 + 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        85 - 5^Rational[1, 2], 55 + 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        83 - 5^Rational[1, 2], 55 + 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {80, 55}, {
        83 - 5^Rational[1, 2], 55 - 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        85 - 5^Rational[1, 2], 55 - 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{85.23606797749979, 51.195773934819385`}, {
        87.23606797749979, 52.64885899083011}, {88, 55}, {87.23606797749979, 
        57.35114100916989}, {85.23606797749979, 58.804226065180615`}, {
        82.76393202250021, 58.804226065180615`}, {80.76393202250021, 
        57.35114100916989}, {80, 55}, {80.76393202250021, 
        52.64885899083011}, {82.76393202250021, 51.195773934819385`}}]],
     RegularPolygon[{84, 55}, 4, 10]]}, 
   {RGBColor[0.7021305653066081, 0.3885283259161376, 0.3019096519458686], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{39 + Rational[3, 2] (-1 + 5^Rational[1, 2]), 37 - 
         6 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        39 + Rational[3, 2] (1 + 5^Rational[1, 2]), 37 - 
         6 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {45, 37}, {
        39 + Rational[3, 2] (1 + 5^Rational[1, 2]), 37 + 
         6 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        39 + Rational[3, 2] (-1 + 5^Rational[1, 2]), 37 + 
         6 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        39 + Rational[3, 2] (1 - 5^Rational[1, 2]), 37 + 
         6 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        39 + Rational[3, 2] (-1 - 5^Rational[1, 2]), 37 + 
         6 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {33, 37}, {
        39 + Rational[3, 2] (-1 - 5^Rational[1, 2]), 37 - 
         6 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        39 + Rational[3, 2] (1 - 5^Rational[1, 2]), 37 - 
         6 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{40.85410196624969, 31.293660902229078`}, {
        43.85410196624969, 33.47328848624516}, {45, 37}, {43.85410196624969, 
        40.52671151375484}, {40.85410196624969, 42.70633909777092}, {
        37.14589803375031, 42.70633909777092}, {34.14589803375031, 
        40.52671151375484}, {33, 37}, {34.14589803375031, 
        33.47328848624516}, {37.14589803375031, 31.293660902229078`}}]],
     RegularPolygon[{39, 37}, 6, 10]]}, 
   {RGBColor[0.8244893312336956, 0.44957119276574997`, 0.027540784471999036`],
     Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{47 + Rational[7, 4] (-1 + 5^Rational[1, 2]), 12 - 
         7 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        47 + Rational[7, 4] (1 + 5^Rational[1, 2]), 12 - 
         7 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {54, 12}, {
        47 + Rational[7, 4] (1 + 5^Rational[1, 2]), 12 + 
         7 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        47 + Rational[7, 4] (-1 + 5^Rational[1, 2]), 12 + 
         7 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        47 + Rational[7, 4] (1 - 5^Rational[1, 2]), 12 + 
         7 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        47 + Rational[7, 4] (-1 - 5^Rational[1, 2]), 12 + 
         7 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {40, 12}, {
        47 + Rational[7, 4] (-1 - 5^Rational[1, 2]), 12 - 
         7 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        47 + Rational[7, 4] (1 - 5^Rational[1, 2]), 12 - 
         7 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{49.16311896062463, 5.342604385933925}, {
        52.66311896062463, 7.885503233952688}, {54, 12}, {52.66311896062463, 
        16.11449676604731}, {49.16311896062463, 18.657395614066075`}, {
        44.83688103937537, 18.657395614066075`}, {41.33688103937537, 
        16.11449676604731}, {40, 12}, {41.33688103937537, 
        7.885503233952688}, {44.83688103937537, 5.342604385933925}}]],
     RegularPolygon[{47, 12}, 7, 10]]}, 
   {RGBColor[0.24499651673840317`, 0.7755453188101937, 0.15787881258185843`], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{8 + 5^Rational[1, 2], 87 - 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        10 + 5^Rational[1, 2], 87 - 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {13, 87}, {
        10 + 5^Rational[1, 2], 87 + 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        8 + 5^Rational[1, 2], 87 + 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        10 - 5^Rational[1, 2], 87 + 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        8 - 5^Rational[1, 2], 87 + 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {5, 87}, {
        8 - 5^Rational[1, 2], 87 - 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        10 - 5^Rational[1, 2], 87 - 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{10.23606797749979, 83.19577393481939}, {
        12.23606797749979, 84.6488589908301}, {13, 87}, {12.23606797749979, 
        89.3511410091699}, {10.23606797749979, 90.80422606518061}, {
        7.76393202250021, 90.80422606518061}, {5.76393202250021, 
        89.3511410091699}, {5, 87}, {5.76393202250021, 84.6488589908301}, {
        7.76393202250021, 83.19577393481939}}]],
     RegularPolygon[{9, 87}, 4, 10]]}, 
   {RGBColor[0.1048374712340332, 0.8467518371396121, 0.3149571909147979], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{52 + 5^Rational[1, 2], 32 - 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        54 + 5^Rational[1, 2], 32 - 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {57, 32}, {
        54 + 5^Rational[1, 2], 32 + 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        52 + 5^Rational[1, 2], 32 + 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        54 - 5^Rational[1, 2], 32 + 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        52 - 5^Rational[1, 2], 32 + 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {49, 32}, {
        52 - 5^Rational[1, 2], 32 - 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        54 - 5^Rational[1, 2], 32 - 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{54.236067977499786`, 28.195773934819385`}, {
        56.236067977499786`, 29.648858990830107`}, {57, 32}, {
        56.236067977499786`, 34.35114100916989}, {54.236067977499786`, 
        35.804226065180615`}, {51.763932022500214`, 35.804226065180615`}, {
        49.763932022500214`, 34.35114100916989}, {49, 32}, {
        49.763932022500214`, 29.648858990830107`}, {51.763932022500214`, 
        28.195773934819385`}}]],
     RegularPolygon[{53, 32}, 4, 10]]}, 
   {RGBColor[0.10448511260538784`, 0.298001981605148, 0.31520591490672656`], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{22 + Rational[5, 4] (-1 + 5^Rational[1, 2]), 56 - 
         5 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        22 + Rational[5, 4] (1 + 5^Rational[1, 2]), 56 - 
         5 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {27, 56}, {
        22 + Rational[5, 4] (1 + 5^Rational[1, 2]), 56 + 
         5 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        22 + Rational[5, 4] (-1 + 5^Rational[1, 2]), 56 + 
         5 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        22 + Rational[5, 4] (1 - 5^Rational[1, 2]), 56 + 
         5 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        22 + Rational[5, 4] (-1 - 5^Rational[1, 2]), 56 + 
         5 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {17, 56}, {
        22 + Rational[5, 4] (-1 - 5^Rational[1, 2]), 56 - 
         5 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        22 + Rational[5, 4] (1 - 5^Rational[1, 2]), 56 - 
         5 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{23.545084971874736`, 51.24471741852423}, {
        26.045084971874736`, 53.06107373853764}, {27, 56}, {
        26.045084971874736`, 58.93892626146236}, {23.545084971874736`, 
        60.75528258147577}, {20.454915028125264`, 60.75528258147577}, {
        17.954915028125264`, 58.93892626146236}, {17, 56}, {
        17.954915028125264`, 53.06107373853764}, {20.454915028125264`, 
        51.24471741852423}}]],
     RegularPolygon[{22, 56}, 5, 10]]}, 
   {RGBColor[0.7060285574646525, 0.8549771479758099, 0.989225411784834], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{71 + Rational[3, 4] (-1 + 5^Rational[1, 2]), 61 - 
         3 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        71 + Rational[3, 4] (1 + 5^Rational[1, 2]), 61 - 
         3 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {74, 61}, {
        71 + Rational[3, 4] (1 + 5^Rational[1, 2]), 61 + 
         3 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        71 + Rational[3, 4] (-1 + 5^Rational[1, 2]), 61 + 
         3 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        71 + Rational[3, 4] (1 - 5^Rational[1, 2]), 61 + 
         3 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        71 + Rational[3, 4] (-1 - 5^Rational[1, 2]), 61 + 
         3 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {68, 61}, {
        71 + Rational[3, 4] (-1 - 5^Rational[1, 2]), 61 - 
         3 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        71 + Rational[3, 4] (1 - 5^Rational[1, 2]), 61 - 
         3 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{71.92705098312484, 58.14683045111454}, {
        73.42705098312484, 59.23664424312258}, {74, 61}, {73.42705098312484, 
        62.76335575687742}, {71.92705098312484, 63.85316954888546}, {
        70.07294901687516, 63.85316954888546}, {68.57294901687516, 
        62.76335575687742}, {68, 61}, {68.57294901687516, 
        59.23664424312258}, {70.07294901687516, 58.14683045111454}}]],
     RegularPolygon[{71, 61}, 3, 10]]}, 
   {RGBColor[0.3816100804381979, 0.1258155262481213, 0.05598246234530335], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{56 + Rational[5, 4] (-1 + 5^Rational[1, 2]), 83 - 
         5 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        56 + Rational[5, 4] (1 + 5^Rational[1, 2]), 83 - 
         5 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {61, 83}, {
        56 + Rational[5, 4] (1 + 5^Rational[1, 2]), 83 + 
         5 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        56 + Rational[5, 4] (-1 + 5^Rational[1, 2]), 83 + 
         5 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        56 + Rational[5, 4] (1 - 5^Rational[1, 2]), 83 + 
         5 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        56 + Rational[5, 4] (-1 - 5^Rational[1, 2]), 83 + 
         5 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {51, 83}, {
        56 + Rational[5, 4] (-1 - 5^Rational[1, 2]), 83 - 
         5 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        56 + Rational[5, 4] (1 - 5^Rational[1, 2]), 83 - 
         5 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{57.545084971874736`, 78.24471741852423}, {
        60.045084971874736`, 80.06107373853763}, {61, 83}, {
        60.045084971874736`, 85.93892626146237}, {57.545084971874736`, 
        87.75528258147577}, {54.454915028125264`, 87.75528258147577}, {
        51.954915028125264`, 85.93892626146237}, {51, 83}, {
        51.954915028125264`, 80.06107373853763}, {54.454915028125264`, 
        78.24471741852423}}]],
     RegularPolygon[{56, 83}, 5, 10]]}, 
   {RGBColor[0.5114123417462102, 0.7215056304850915, 0.9250582749544347], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{81 + 5^Rational[1, 2], 60 - 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        83 + 5^Rational[1, 2], 60 - 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {86, 60}, {
        83 + 5^Rational[1, 2], 60 + 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        81 + 5^Rational[1, 2], 60 + 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        83 - 5^Rational[1, 2], 60 + 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        81 - 5^Rational[1, 2], 60 + 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {78, 60}, {
        81 - 5^Rational[1, 2], 60 - 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        83 - 5^Rational[1, 2], 60 - 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{83.23606797749979, 56.195773934819385`}, {
        85.23606797749979, 57.64885899083011}, {86, 60}, {85.23606797749979, 
        62.35114100916989}, {83.23606797749979, 63.804226065180615`}, {
        80.76393202250021, 63.804226065180615`}, {78.76393202250021, 
        62.35114100916989}, {78, 60}, {78.76393202250021, 
        57.64885899083011}, {80.76393202250021, 56.195773934819385`}}]],
     RegularPolygon[{82, 60}, 4, 10]]}, 
   {RGBColor[0.7527233373994928, 0.41709383135583833`, 0.6836517109938671], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{50 + Rational[3, 4] (-1 + 5^Rational[1, 2]), 84 - 
         3 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        50 + Rational[3, 4] (1 + 5^Rational[1, 2]), 84 - 
         3 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {53, 84}, {
        50 + Rational[3, 4] (1 + 5^Rational[1, 2]), 84 + 
         3 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        50 + Rational[3, 4] (-1 + 5^Rational[1, 2]), 84 + 
         3 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        50 + Rational[3, 4] (1 - 5^Rational[1, 2]), 84 + 
         3 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        50 + Rational[3, 4] (-1 - 5^Rational[1, 2]), 84 + 
         3 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {47, 84}, {
        50 + Rational[3, 4] (-1 - 5^Rational[1, 2]), 84 - 
         3 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        50 + Rational[3, 4] (1 - 5^Rational[1, 2]), 84 - 
         3 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{50.92705098312484, 81.14683045111454}, {
        52.42705098312484, 82.23664424312258}, {53, 84}, {52.42705098312484, 
        85.76335575687742}, {50.92705098312484, 86.85316954888546}, {
        49.07294901687516, 86.85316954888546}, {47.57294901687516, 
        85.76335575687742}, {47, 84}, {47.57294901687516, 
        82.23664424312258}, {49.07294901687516, 81.14683045111454}}]],
     RegularPolygon[{50, 84}, 3, 10]]}, 
   {RGBColor[0.5431449913871675, 0.04186310128105952, 0.11323247247471557`], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{96 + Rational[3, 2] (-1 + 5^Rational[1, 2]), 71 - 
         6 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        96 + Rational[3, 2] (1 + 5^Rational[1, 2]), 71 - 
         6 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {102, 71}, {
        96 + Rational[3, 2] (1 + 5^Rational[1, 2]), 71 + 
         6 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        96 + Rational[3, 2] (-1 + 5^Rational[1, 2]), 71 + 
         6 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        96 + Rational[3, 2] (1 - 5^Rational[1, 2]), 71 + 
         6 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        96 + Rational[3, 2] (-1 - 5^Rational[1, 2]), 71 + 
         6 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {90, 71}, {
        96 + Rational[3, 2] (-1 - 5^Rational[1, 2]), 71 - 
         6 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        96 + Rational[3, 2] (1 - 5^Rational[1, 2]), 71 - 
         6 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{97.85410196624969, 65.29366090222908}, {
        100.85410196624969`, 67.47328848624517}, {102, 71}, {
        100.85410196624969`, 74.52671151375483}, {97.85410196624969, 
        76.70633909777092}, {94.14589803375031, 76.70633909777092}, {
        91.14589803375031, 74.52671151375483}, {90, 71}, {91.14589803375031, 
        67.47328848624517}, {94.14589803375031, 65.29366090222908}}]],
     RegularPolygon[{96, 71}, 6, 10]]}, 
   {RGBColor[0.6065124961481623, 0.5093317592353781, 0.7990725595019221], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{99 + Rational[3, 2] (-1 + 5^Rational[1, 2]), 17 - 
         6 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        99 + Rational[3, 2] (1 + 5^Rational[1, 2]), 17 - 
         6 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {105, 17}, {
        99 + Rational[3, 2] (1 + 5^Rational[1, 2]), 17 + 
         6 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        99 + Rational[3, 2] (-1 + 5^Rational[1, 2]), 17 + 
         6 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        99 + Rational[3, 2] (1 - 5^Rational[1, 2]), 17 + 
         6 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        99 + Rational[3, 2] (-1 - 5^Rational[1, 2]), 17 + 
         6 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {93, 17}, {
        99 + Rational[3, 2] (-1 - 5^Rational[1, 2]), 17 - 
         6 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        99 + Rational[3, 2] (1 - 5^Rational[1, 2]), 17 - 
         6 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{100.85410196624969`, 11.293660902229078`}, {
        103.85410196624969`, 13.473288486245162`}, {105, 17}, {
        103.85410196624969`, 20.52671151375484}, {100.85410196624969`, 
        22.706339097770922`}, {97.14589803375031, 22.706339097770922`}, {
        94.14589803375031, 20.52671151375484}, {93, 17}, {94.14589803375031, 
        13.473288486245162`}, {97.14589803375031, 11.293660902229078`}}]],
     RegularPolygon[{99, 17}, 6, 10]]}, 
   {RGBColor[0.36280920332187705`, 0.703849531125748, 0.550748282390553], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{29 + 5^Rational[1, 2], 13 - 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        31 + 5^Rational[1, 2], 13 - 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {34, 13}, {
        31 + 5^Rational[1, 2], 13 + 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        29 + 5^Rational[1, 2], 13 + 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        31 - 5^Rational[1, 2], 13 + 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        29 - 5^Rational[1, 2], 13 + 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {26, 13}, {
        29 - 5^Rational[1, 2], 13 - 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        31 - 5^Rational[1, 2], 13 - 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{31.23606797749979, 9.195773934819385}, {
        33.236067977499786`, 10.648858990830107`}, {34, 13}, {
        33.236067977499786`, 15.351141009169893`}, {31.23606797749979, 
        16.804226065180615`}, {28.76393202250021, 16.804226065180615`}, {
        26.76393202250021, 15.351141009169893`}, {26, 13}, {26.76393202250021,
         10.648858990830107`}, {28.76393202250021, 9.195773934819385}}]],
     RegularPolygon[{30, 13}, 4, 10]]}, 
   {RGBColor[0.4324790749423859, 0.1711711638723734, 0.05875497571119204], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{82 + Rational[3, 2] (-1 + 5^Rational[1, 2]), 53 - 
         6 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        82 + Rational[3, 2] (1 + 5^Rational[1, 2]), 53 - 
         6 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {88, 53}, {
        82 + Rational[3, 2] (1 + 5^Rational[1, 2]), 53 + 
         6 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        82 + Rational[3, 2] (-1 + 5^Rational[1, 2]), 53 + 
         6 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        82 + Rational[3, 2] (1 - 5^Rational[1, 2]), 53 + 
         6 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        82 + Rational[3, 2] (-1 - 5^Rational[1, 2]), 53 + 
         6 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {76, 53}, {
        82 + Rational[3, 2] (-1 - 5^Rational[1, 2]), 53 - 
         6 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        82 + Rational[3, 2] (1 - 5^Rational[1, 2]), 53 - 
         6 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{83.85410196624969, 47.29366090222908}, {
        86.85410196624969, 49.47328848624516}, {88, 53}, {86.85410196624969, 
        56.52671151375484}, {83.85410196624969, 58.70633909777092}, {
        80.14589803375031, 58.70633909777092}, {77.14589803375031, 
        56.52671151375484}, {76, 53}, {77.14589803375031, 
        49.47328848624516}, {80.14589803375031, 47.29366090222908}}]],
     RegularPolygon[{82, 53}, 6, 10]]}, 
   {RGBColor[0.7073614278367508, 0.04696332169375794, 0.19070637297888982`], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{41 + Rational[5, 4] (-1 + 5^Rational[1, 2]), 48 - 
         5 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        41 + Rational[5, 4] (1 + 5^Rational[1, 2]), 48 - 
         5 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {46, 48}, {
        41 + Rational[5, 4] (1 + 5^Rational[1, 2]), 48 + 
         5 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        41 + Rational[5, 4] (-1 + 5^Rational[1, 2]), 48 + 
         5 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        41 + Rational[5, 4] (1 - 5^Rational[1, 2]), 48 + 
         5 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        41 + Rational[5, 4] (-1 - 5^Rational[1, 2]), 48 + 
         5 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {36, 48}, {
        41 + Rational[5, 4] (-1 - 5^Rational[1, 2]), 48 - 
         5 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        41 + Rational[5, 4] (1 - 5^Rational[1, 2]), 48 - 
         5 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{42.545084971874736`, 43.24471741852423}, {
        45.045084971874736`, 45.06107373853764}, {46, 48}, {
        45.045084971874736`, 50.93892626146236}, {42.545084971874736`, 
        52.75528258147577}, {39.454915028125264`, 52.75528258147577}, {
        36.954915028125264`, 50.93892626146236}, {36, 48}, {
        36.954915028125264`, 45.06107373853764}, {39.454915028125264`, 
        43.24471741852423}}]],
     RegularPolygon[{41, 48}, 5, 10]]}, 
   {RGBColor[0.004494077729791046, 0.07073389065522306, 0.7505809232139093], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{55 + Rational[3, 4] (-1 + 5^Rational[1, 2]), 51 - 
         3 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        55 + Rational[3, 4] (1 + 5^Rational[1, 2]), 51 - 
         3 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {58, 51}, {
        55 + Rational[3, 4] (1 + 5^Rational[1, 2]), 51 + 
         3 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        55 + Rational[3, 4] (-1 + 5^Rational[1, 2]), 51 + 
         3 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        55 + Rational[3, 4] (1 - 5^Rational[1, 2]), 51 + 
         3 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        55 + Rational[3, 4] (-1 - 5^Rational[1, 2]), 51 + 
         3 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {52, 51}, {
        55 + Rational[3, 4] (-1 - 5^Rational[1, 2]), 51 - 
         3 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        55 + Rational[3, 4] (1 - 5^Rational[1, 2]), 51 - 
         3 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{55.92705098312484, 48.14683045111454}, {
        57.42705098312484, 49.23664424312258}, {58, 51}, {57.42705098312484, 
        52.76335575687742}, {55.92705098312484, 53.85316954888546}, {
        54.07294901687516, 53.85316954888546}, {52.57294901687516, 
        52.76335575687742}, {52, 51}, {52.57294901687516, 
        49.23664424312258}, {54.07294901687516, 48.14683045111454}}]],
     RegularPolygon[{55, 51}, 3, 10]]}, 
   {RGBColor[0.44116553221875066`, 0.9023810936268519, 0.216070603664138], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{43 + 2 (-1 + 5^Rational[1, 2]), 89 - 
         8 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        43 + 2 (1 + 5^Rational[1, 2]), 89 - 
         8 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {51, 89}, {
        43 + 2 (1 + 5^Rational[1, 2]), 89 + 
         8 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        43 + 2 (-1 + 5^Rational[1, 2]), 89 + 
         8 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        43 + 2 (1 - 5^Rational[1, 2]), 89 + 
         8 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        43 + 2 (-1 - 5^Rational[1, 2]), 89 + 
         8 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {35, 89}, {
        43 + 2 (-1 - 5^Rational[1, 2]), 89 - 
         8 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        43 + 2 (1 - 5^Rational[1, 2]), 89 - 
         8 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{45.47213595499958, 81.39154786963877}, {
        49.47213595499958, 84.29771798166021}, {51, 89}, {49.47213595499958, 
        93.70228201833979}, {45.47213595499958, 96.60845213036123}, {
        40.52786404500042, 96.60845213036123}, {36.52786404500042, 
        93.70228201833979}, {35, 89}, {36.52786404500042, 
        84.29771798166021}, {40.52786404500042, 81.39154786963877}}]],
     RegularPolygon[{43, 89}, 8, 10]]}, 
   {RGBColor[0.10269590413732854`, 0.09365024667637889, 0.3654281097953367], 
    Opacity[0.5], 
    InterpretationBox[
     PolygonBox[
      NCache[{{55 + 5^Rational[1, 2], 94 - 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        57 + 5^Rational[1, 2], 94 - 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {60, 94}, {
        57 + 5^Rational[1, 2], 94 + 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        55 + 5^Rational[1, 2], 94 + 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        57 - 5^Rational[1, 2], 94 + 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {
        55 - 5^Rational[1, 2], 94 + 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2]}, {52, 94}, {
        55 - 5^Rational[1, 2], 94 - 
         4 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}, {
        57 - 5^Rational[1, 2], 94 - 
         4 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2]}}, {{57.236067977499786`, 90.19577393481939}, {
        59.236067977499786`, 91.6488589908301}, {60, 94}, {
        59.236067977499786`, 96.3511410091699}, {57.236067977499786`, 
        97.80422606518061}, {54.763932022500214`, 97.80422606518061}, {
        52.763932022500214`, 96.3511410091699}, {52, 94}, {
        52.763932022500214`, 91.6488589908301}, {54.763932022500214`, 
        90.19577393481939}}]],
     RegularPolygon[{56, 94}, 4, 10]]}}]], "Output",
 CellChangeTimes->{
  3.933045670910715*^9, 3.933093095846922*^9, 3.933180335442196*^9, {
   3.933186692108526*^9, 3.933186750412044*^9}, 3.9331868353726063`*^9, {
   3.933186871131144*^9, 3.93318690777597*^9}, 3.933188159231113*^9, 
   3.933274338299231*^9, {3.933276638645656*^9, 3.9332766511361856`*^9}, {
   3.933367090724166*^9, 3.933367102983233*^9}, 3.933713122601194*^9, {
   3.933713171746725*^9, 3.933713186417428*^9}},
 CellLabel->"Out[41]=",ExpressionUUID->"00768374-6665-4518-bd74-d69f8f5d0cac"]
}, Open  ]],

Cell["\<\
+Q4. Make a 10\[Times]10\[Times]10 array of points in 3D, with each point \
having a random colour.\
\>", "CodeText",
 CellChangeTimes->{{3.933044981954609*^9, 3.9330449829879637`*^9}, {
   3.9330450176513767`*^9, 3.9330450320914183`*^9}, {3.933045084826315*^9, 
   3.9330450895412827`*^9}, {3.933045286272798*^9, 3.933045318006721*^9}, {
   3.933045368732009*^9, 3.933045377536852*^9}, {3.933045545062495*^9, 
   3.933045552087694*^9}, {3.933045582724339*^9, 3.933045598952709*^9}, {
   3.933045654828909*^9, 3.9330456668860083`*^9}, 3.933045736409889*^9, 
   3.933093082081451*^9, 3.933180276922765*^9, 3.933186631520351*^9, {
   3.933188136235816*^9, 3.9331881450240517`*^9}, 3.933274311211767*^9, 
   3.933276554620142*^9, 3.933276665367118*^9, 3.933367068678151*^9, 
   3.933712970692966*^9, 3.9337130186920643`*^9, {3.933713208569131*^9, 
   3.9337132244456263`*^9}},ExpressionUUID->"6990856a-ae67-4067-8c2e-\
12fbcc702d7f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics3D", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Style", "[", 
     RowBox[{
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{"i", ",", "j", ",", "k"}], "}"}], "]"}], ",", 
      RowBox[{"RandomColor", "[", "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "10"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "10"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "10"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.933045668871724*^9, 3.933045670351816*^9}, {
  3.9330930870089808`*^9, 3.933093095152356*^9}, {3.933180287808238*^9, 
  3.933180334695085*^9}, {3.933186671477257*^9, 3.933186749813414*^9}, {
  3.93318682967554*^9, 3.933186900276577*^9}, {3.9331881482665873`*^9, 
  3.933188158821327*^9}, {3.933274322521419*^9, 3.933274337743745*^9}, {
  3.9332765892289133`*^9, 3.9332766502688007`*^9}, {3.933367089807831*^9, 
  3.9333671025593224`*^9}, {3.933712979397196*^9, 3.933713062395549*^9}, {
  3.933713096767788*^9, 3.933713117276865*^9}, {3.933713165199708*^9, 
  3.933713185804031*^9}, {3.933713236465211*^9, 3.933713292724326*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"7e0dae4a-7a2a-4a94-9c02-b2f9a84ba23f"],

Cell[BoxData[
 Graphics3DBox[{{{
     {RGBColor[0.7809268587205118, 0.904113987846511, 0.12498324010908579`], 
      Point3DBox[{1, 1, 1}]}, 
     {RGBColor[0.7809758098841755, 0.8710089476521143, 0.6068682625317938], 
      Point3DBox[{1, 1, 2}]}, 
     {RGBColor[0.6293466400096543, 0.20103727201444332`, 0.739166804926477], 
      Point3DBox[{1, 1, 3}]}, 
     {RGBColor[0.5187000774410495, 0.7859594424715426, 0.818878457374973], 
      Point3DBox[{1, 1, 4}]}, 
     {RGBColor[0.8328655765985769, 0.8970262025934339, 0.9819197570490512], 
      Point3DBox[{1, 1, 5}]}, 
     {RGBColor[0.4489521361210518, 0.2917374062189444, 0.8500776350885144], 
      Point3DBox[{1, 1, 6}]}, 
     {RGBColor[
      0.22075997170685246`, 0.7526058670783762, 0.31334537320728173`], 
      Point3DBox[{1, 1, 7}]}, 
     {RGBColor[0.3365702899951719, 0.8341594011452258, 0.07354139536739113], 
      Point3DBox[{1, 1, 8}]}, 
     {RGBColor[0.12856296454291716`, 0.796840091961269, 0.29600875709342955`],
       Point3DBox[{1, 1, 9}]}, 
     {RGBColor[0.10076794437688719`, 0.22945717932581, 0.9217218855847431], 
      Point3DBox[{1, 1, 10}]}}, {
     {RGBColor[0.9774134594492079, 0.19233564112587676`, 0.07339854580492267],
       Point3DBox[{1, 2, 1}]}, 
     {RGBColor[0.4988305526542953, 0.01050569440780591, 0.9415054290861906], 
      Point3DBox[{1, 2, 2}]}, 
     {RGBColor[0.9508358325650412, 0.8986960154930128, 0.24661573747481524`], 
      Point3DBox[{1, 2, 3}]}, 
     {RGBColor[0.1024558774517299, 0.3776483548861702, 0.8138916487149754], 
      Point3DBox[{1, 2, 4}]}, 
     {RGBColor[0.49169961737247614`, 0.6294452459875348, 0.9262441115202185], 
      Point3DBox[{1, 2, 5}]}, 
     {RGBColor[0.6210793404235828, 0.8639586987707941, 0.8139905002717958], 
      Point3DBox[{1, 2, 6}]}, 
     {RGBColor[0.9382309213891256, 0.555852100207896, 0.6257610841228938], 
      Point3DBox[{1, 2, 7}]}, 
     {RGBColor[0.462560780915771, 0.31402918739168917`, 0.1172514317756641], 
      Point3DBox[{1, 2, 8}]}, 
     {RGBColor[
      0.25501831510557116`, 0.34626198688131504`, 0.9073876227706683], 
      Point3DBox[{1, 2, 9}]}, 
     {RGBColor[
      0.23499481500518904`, 0.014283474976645838`, 0.10267605313428874`], 
      Point3DBox[{1, 2, 10}]}}, {
     {RGBColor[0.5502394129440045, 0.8287139164314103, 0.5567438727852836], 
      Point3DBox[{1, 3, 1}]}, 
     {RGBColor[0.6609921881227767, 0.3671593457854543, 0.2189846223108738], 
      Point3DBox[{1, 3, 2}]}, 
     {RGBColor[0.6365323769346871, 0.579710546417997, 0.2191467949672783], 
      Point3DBox[{1, 3, 3}]}, 
     {RGBColor[0.7910340762392796, 0.06441447541498224, 0.007002853568126577],
       Point3DBox[{1, 3, 4}]}, 
     {RGBColor[0.45020016734246426`, 0.2393473404889901, 0.9788836073329183], 
      Point3DBox[{1, 3, 5}]}, 
     {RGBColor[0.5733991892665171, 0.6004440017359995, 0.1341524362151425], 
      Point3DBox[{1, 3, 6}]}, 
     {RGBColor[0.3668836995302669, 0.5248190784382791, 0.9119334237865218], 
      Point3DBox[{1, 3, 7}]}, 
     {RGBColor[0.21746053232309248`, 0.2901946688804218, 0.6739818128953912], 
      Point3DBox[{1, 3, 8}]}, 
     {RGBColor[0.9860295868502968, 0.6321748942242216, 0.2743644262343736], 
      Point3DBox[{1, 3, 9}]}, 
     {RGBColor[
      0.34364277629798634`, 0.041994463556752626`, 0.9617170767577692], 
      Point3DBox[{1, 3, 10}]}}, {
     {RGBColor[0.3596366318083961, 0.9557333693914176, 0.5585377971930086], 
      Point3DBox[{1, 4, 1}]}, 
     {RGBColor[0.7413489344446944, 0.5231474875299655, 0.21710355023351235`], 
      Point3DBox[{1, 4, 2}]}, 
     {RGBColor[0.4773473385105893, 0.9743476702696194, 0.08810798707905776], 
      Point3DBox[{1, 4, 3}]}, 
     {RGBColor[0.2810836498992868, 0.4190206585368046, 0.3934915415113347], 
      Point3DBox[{1, 4, 4}]}, 
     {RGBColor[
      0.8090397807770884, 0.006323979199992058, 0.15922439364938246`], 
      Point3DBox[{1, 4, 5}]}, 
     {RGBColor[0.6599231849462994, 0.6772388497364394, 0.7118474113854041], 
      Point3DBox[{1, 4, 6}]}, 
     {RGBColor[
      0.4291612421071562, 0.18078800136244944`, 0.48170894629606575`], 
      Point3DBox[{1, 4, 7}]}, 
     {RGBColor[
      0.12095368682830854`, 0.34514188502126353`, 0.23443835654854062`], 
      Point3DBox[{1, 4, 8}]}, 
     {RGBColor[0.687799398338707, 0.9514182627219987, 0.3435061336563412], 
      Point3DBox[{1, 4, 9}]}, 
     {RGBColor[0.7383719289727064, 0.24131311104449926`, 0.5326511542679517], 
      Point3DBox[{1, 4, 10}]}}, {
     {RGBColor[0.33168683488299333`, 0.7664027630760191, 0.5941980328175336], 
      Point3DBox[{1, 5, 1}]}, 
     {RGBColor[0.4723896703648087, 0.7585432240338659, 0.7968029806124788], 
      Point3DBox[{1, 5, 2}]}, 
     {RGBColor[0.8648884460196633, 0.5670350130567323, 0.9757732195766844], 
      Point3DBox[{1, 5, 3}]}, 
     {RGBColor[0.07320901904093002, 0.9685302595607699, 0.9354422311229857], 
      Point3DBox[{1, 5, 4}]}, 
     {RGBColor[0.989804238224016, 0.3405689660081026, 0.926474690145856], 
      Point3DBox[{1, 5, 5}]}, 
     {RGBColor[0.3558928971099351, 0.19659869392886975`, 0.3522474248231924], 
      Point3DBox[{1, 5, 6}]}, 
     {RGBColor[0.338738990071926, 0.4539715190789966, 0.5203515572954736], 
      Point3DBox[{1, 5, 7}]}, 
     {RGBColor[0.8032057810226081, 0.21629237449074146`, 0.7992897070223324], 
      Point3DBox[{1, 5, 8}]}, 
     {RGBColor[0.9085388346623946, 0.3718684076225449, 0.8776373307409941], 
      Point3DBox[{1, 5, 9}]}, 
     {RGBColor[0.38383125291237374`, 0.6576315181968095, 0.6391809929165966], 
      Point3DBox[{1, 5, 10}]}}, {
     {RGBColor[
      0.22100841723245246`, 0.18179234550933088`, 0.9807077791659309], 
      Point3DBox[{1, 6, 1}]}, 
     {RGBColor[0.2160285520255032, 0.32949399549890623`, 0.7952263967531397], 
      Point3DBox[{1, 6, 2}]}, 
     {RGBColor[0.16260385461784166`, 0.1738640571500938, 0.5857497568059313], 
      Point3DBox[{1, 6, 3}]}, 
     {RGBColor[
      0.27654844221535013`, 0.49600938097105396`, 0.05735629099054895], 
      Point3DBox[{1, 6, 4}]}, 
     {RGBColor[0.7032779553629573, 0.8827136979372971, 0.9997987692214294], 
      Point3DBox[{1, 6, 5}]}, 
     {RGBColor[0.902619664205579, 0.021642824732997834`, 0.7057944759243968], 
      Point3DBox[{1, 6, 6}]}, 
     {RGBColor[0.8540644566688935, 0.19735517316770834`, 0.8196451917174601], 
      Point3DBox[{1, 6, 7}]}, 
     {RGBColor[0.003781754960366035, 0.549208945678582, 0.9476142927892137], 
      Point3DBox[{1, 6, 8}]}, 
     {RGBColor[0.9216247104494508, 0.26621811259960193`, 0.7679790448176294], 
      Point3DBox[{1, 6, 9}]}, 
     {RGBColor[0.05893206255367911, 0.3789456276753409, 0.03965580348518283], 
      Point3DBox[{1, 6, 10}]}}, {
     {RGBColor[
      0.4304496671294984, 0.15652179685137946`, 0.0034904441664462826`], 
      Point3DBox[{1, 7, 1}]}, 
     {RGBColor[
      0.39070281293145426`, 0.17998478798597306`, 0.4113079082943696], 
      Point3DBox[{1, 7, 2}]}, 
     {RGBColor[0.7857004419758982, 0.9272865199395368, 0.8296802114431572], 
      Point3DBox[{1, 7, 3}]}, 
     {RGBColor[0.1956778809086177, 0.8503971375855652, 0.5933615678744293], 
      Point3DBox[{1, 7, 4}]}, 
     {RGBColor[0.2366368766625757, 0.4963090299311952, 0.014446911674418361`],
       Point3DBox[{1, 7, 5}]}, 
     {RGBColor[
      0.12406558726795436`, 0.8017626033329002, 0.14669018686651336`], 
      Point3DBox[{1, 7, 6}]}, 
     {RGBColor[0.14747808705610277`, 0.8008795925829126, 0.4622418212633588], 
      Point3DBox[{1, 7, 7}]}, 
     {RGBColor[0.26084579810337116`, 0.83928930379274, 0.7295090317596398], 
      Point3DBox[{1, 7, 8}]}, 
     {RGBColor[
      0.5693604614999093, 0.042128606607103825`, 0.47440267403073744`], 
      Point3DBox[{1, 7, 9}]}, 
     {RGBColor[0.5696697259448198, 0.45398381260412735`, 0.8765283804710735], 
      Point3DBox[{1, 7, 10}]}}, {
     {RGBColor[0.9952926579575203, 0.9350935422214641, 0.7711646424556695], 
      Point3DBox[{1, 8, 1}]}, 
     {RGBColor[
      0.37380541568221215`, 0.6568177977458018, 0.45185495464506875`], 
      Point3DBox[{1, 8, 2}]}, 
     {RGBColor[0.02926543822113059, 0.7441275045278846, 0.6246600868320504], 
      Point3DBox[{1, 8, 3}]}, 
     {RGBColor[0.2290069123834746, 0.32501773202855655`, 0.4733028248447626], 
      Point3DBox[{1, 8, 4}]}, 
     {RGBColor[0.4331819418904448, 0.21953889201066112`, 0.6504080236956342], 
      Point3DBox[{1, 8, 5}]}, 
     {RGBColor[0.3768217200070143, 0.19503428043746718`, 0.2974374859014439], 
      Point3DBox[{1, 8, 6}]}, 
     {RGBColor[0.526394569130147, 0.9375926406840704, 0.17296443402145223`], 
      Point3DBox[{1, 8, 7}]}, 
     {RGBColor[0.7655373634492446, 0.9418213222174305, 0.5353574992264196], 
      Point3DBox[{1, 8, 8}]}, 
     {RGBColor[0.7515139842142775, 0.2532168805203232, 0.30960805198280705`], 
      Point3DBox[{1, 8, 9}]}, 
     {RGBColor[0.4421416813464347, 0.9698522272542756, 0.5332521661136966], 
      Point3DBox[{1, 8, 10}]}}, {
     {RGBColor[0.20702150340970982`, 0.2664244309619963, 0.5906615887427711], 
      Point3DBox[{1, 9, 1}]}, 
     {RGBColor[0.06013466415277935, 0.6232691229084963, 0.15418495258481757`],
       Point3DBox[{1, 9, 2}]}, 
     {RGBColor[0.7315021302133164, 0.10269996003050008`, 0.7093264585035346], 
      Point3DBox[{1, 9, 3}]}, 
     {RGBColor[
      0.12155547101904474`, 0.8417629212067648, 0.30163547976267724`], 
      Point3DBox[{1, 9, 4}]}, 
     {RGBColor[0.8882755248431593, 0.1252566688053005, 0.9968770600228738], 
      Point3DBox[{1, 9, 5}]}, 
     {RGBColor[0.47737053356516523`, 0.512157194429893, 0.5771593187925412], 
      Point3DBox[{1, 9, 6}]}, 
     {RGBColor[0.4167138162994948, 0.6546874317014171, 0.3313873978224684], 
      Point3DBox[{1, 9, 7}]}, 
     {RGBColor[0.7447223981402191, 0.7252722531695861, 0.17219779322820905`], 
      Point3DBox[{1, 9, 8}]}, 
     {RGBColor[0.9165725769265181, 0.4049594905072855, 0.41470030631292376`], 
      Point3DBox[{1, 9, 9}]}, 
     {RGBColor[0.6476756836919171, 0.5956552297715612, 0.9386300684259066], 
      Point3DBox[{1, 9, 10}]}}, {
     {RGBColor[0.3723925381922173, 0.11172610454086151`, 0.4658350110756384], 
      Point3DBox[{1, 10, 1}]}, 
     {RGBColor[0.29470533030309, 0.7284784177962087, 0.4055223220364801], 
      Point3DBox[{1, 10, 2}]}, 
     {RGBColor[0.2528375915942245, 0.3643255212934131, 0.16396193759777478`], 
      Point3DBox[{1, 10, 3}]}, 
     {RGBColor[0.3688444629037462, 0.720544905776431, 0.1647439932055781], 
      Point3DBox[{1, 10, 4}]}, 
     {RGBColor[0.9066361573095896, 0.5550291714053794, 0.45763357069523325`], 
      Point3DBox[{1, 10, 5}]}, 
     {RGBColor[0.9370910652758402, 0.7235112804608026, 0.6648957260565587], 
      Point3DBox[{1, 10, 6}]}, 
     {RGBColor[
      0.8894806149150907, 0.009626128774240517, 0.12059287056711354`], 
      Point3DBox[{1, 10, 7}]}, 
     {RGBColor[0.14845161448631816`, 0.6386837766008115, 0.9622960808259176], 
      Point3DBox[{1, 10, 8}]}, 
     {RGBColor[0.9857981179278354, 0.7180596245966673, 0.6730545657763052], 
      Point3DBox[{1, 10, 9}]}, 
     {RGBColor[
      0.39983665828631954`, 0.7083536868104392, 0.25892112280114943`], 
      Point3DBox[{1, 10, 10}]}}}, {{
     {RGBColor[0.9238523111998671, 0.24323241961957498`, 0.9788812541403977], 
      Point3DBox[{2, 1, 1}]}, 
     {RGBColor[0.2894225020991199, 0.4185304302321431, 0.2840400567162169], 
      Point3DBox[{2, 1, 2}]}, 
     {RGBColor[0.7971846035100196, 0.9698645716431222, 0.8479046528598229], 
      Point3DBox[{2, 1, 3}]}, 
     {RGBColor[0.5905269970434066, 0.1870216430915035, 0.43320136962104816`], 
      Point3DBox[{2, 1, 4}]}, 
     {RGBColor[0.36077197916543713`, 0.5891235485067214, 0.3037210650068216], 
      Point3DBox[{2, 1, 5}]}, 
     {RGBColor[
      0.30266002572440365`, 0.8543421602814536, 0.47567115085297895`], 
      Point3DBox[{2, 1, 6}]}, 
     {RGBColor[0.8042296045025894, 0.6411095977951289, 0.526513198120846], 
      Point3DBox[{2, 1, 7}]}, 
     {RGBColor[0.6894456526294404, 0.2329085150960355, 0.9996786075533297], 
      Point3DBox[{2, 1, 8}]}, 
     {RGBColor[
      0.23368127545158202`, 0.29101442083945406`, 0.23094798011331963`], 
      Point3DBox[{2, 1, 9}]}, 
     {RGBColor[0.9668937500857113, 0.48856501130272, 0.3205150207970373], 
      Point3DBox[{2, 1, 10}]}}, {
     {RGBColor[0.4671769578327467, 0.24208080668267895`, 0.5844402385940843], 
      Point3DBox[{2, 2, 1}]}, 
     {RGBColor[0.2035148132308009, 0.41724342161560135`, 0.7078403310141725], 
      Point3DBox[{2, 2, 2}]}, 
     {RGBColor[0.6135563166357811, 0.2218777892627819, 0.6047909930097224], 
      Point3DBox[{2, 2, 3}]}, 
     {RGBColor[
      0.6252890566575844, 0.43159211418961596`, 0.17961437769595223`], 
      Point3DBox[{2, 2, 4}]}, 
     {RGBColor[0.45593602581373993`, 0.6770562434821754, 0.8574452965204233], 
      Point3DBox[{2, 2, 5}]}, 
     {RGBColor[0.999914009754129, 0.48532112703788344`, 0.1702045586417582], 
      Point3DBox[{2, 2, 6}]}, 
     {RGBColor[
      0.6638146047085682, 0.32338893679317327`, 0.41346707577208397`], 
      Point3DBox[{2, 2, 7}]}, 
     {RGBColor[0.05040699259478454, 0.0504995698920534, 0.11336149891016767`],
       Point3DBox[{2, 2, 8}]}, 
     {RGBColor[0.9477279045460432, 0.6431383392680599, 0.43943573888490106`], 
      Point3DBox[{2, 2, 9}]}, 
     {RGBColor[0.7158998935488454, 0.8341502851068348, 0.043280626181690485`],
       Point3DBox[{2, 2, 10}]}}, {
     {RGBColor[
      0.37897697386040763`, 0.18460996900938165`, 0.22505728876232678`], 
      Point3DBox[{2, 3, 1}]}, 
     {RGBColor[0.4540004616088027, 0.7894315892878536, 0.38586867452944573`], 
      Point3DBox[{2, 3, 2}]}, 
     {RGBColor[0.632826844015294, 0.7340654033399174, 0.3090444328411497], 
      Point3DBox[{2, 3, 3}]}, 
     {RGBColor[0.33586876968279644`, 0.03313974630662697, 0.8121482390601742],
       Point3DBox[{2, 3, 4}]}, 
     {RGBColor[0.7619582200222343, 0.06511708595171828, 0.9935771714494361], 
      Point3DBox[{2, 3, 5}]}, 
     {RGBColor[
      0.22852795337471354`, 0.7966413380044997, 0.28337500279291183`], 
      Point3DBox[{2, 3, 6}]}, 
     {RGBColor[0.2482918486140513, 0.8382847980158881, 0.07883676012321583], 
      Point3DBox[{2, 3, 7}]}, 
     {RGBColor[0.4834160571654931, 0.1920209831689874, 0.4094605185052198], 
      Point3DBox[{2, 3, 8}]}, 
     {RGBColor[0.9796442341822904, 0.5264621477846136, 0.31417671011880666`], 
      Point3DBox[{2, 3, 9}]}, 
     {RGBColor[0.8131830410987242, 0.7264161322349407, 0.4525035204470804], 
      Point3DBox[{2, 3, 10}]}}, {
     {RGBColor[
      0.6509764544072334, 0.23218731972256834`, 0.40927720444596205`], 
      Point3DBox[{2, 4, 1}]}, 
     {RGBColor[0.4666907816664527, 0.3188064903956265, 0.7985622408810809], 
      Point3DBox[{2, 4, 2}]}, 
     {RGBColor[0.11742932025545239`, 0.654805404720366, 0.7745712051799183], 
      Point3DBox[{2, 4, 3}]}, 
     {RGBColor[0.7409309551965826, 0.2832896453521898, 0.4561350171127345], 
      Point3DBox[{2, 4, 4}]}, 
     {RGBColor[0.5082955047507776, 0.20507882415016843`, 0.8486629652558346], 
      Point3DBox[{2, 4, 5}]}, 
     {RGBColor[0.6208067500827621, 0.8503399629238415, 0.42041676793703675`], 
      Point3DBox[{2, 4, 6}]}, 
     {RGBColor[0.26354279998068586`, 0.8146920605102499, 0.6178322393891058], 
      Point3DBox[{2, 4, 7}]}, 
     {RGBColor[0.939134006379656, 0.9121366275033638, 0.46506181270989844`], 
      Point3DBox[{2, 4, 8}]}, 
     {RGBColor[0.27056316873458197`, 0.5459207902143532, 0.4502897825743948], 
      Point3DBox[{2, 4, 9}]}, 
     {RGBColor[0.9854381693026473, 0.8372678349517233, 0.12327580417113349`], 
      Point3DBox[{2, 4, 10}]}}, {
     {RGBColor[0.564105796004688, 0.7258740902239806, 0.8807179995207264], 
      Point3DBox[{2, 5, 1}]}, 
     {RGBColor[0.8810039220973347, 0.4986362397449504, 0.8129819124110154], 
      Point3DBox[{2, 5, 2}]}, 
     {RGBColor[0.5972759437345683, 0.5531035370667496, 0.1762818742150929], 
      Point3DBox[{2, 5, 3}]}, 
     {RGBColor[0.4028234230156795, 0.3792213751845448, 0.5062396871363721], 
      Point3DBox[{2, 5, 4}]}, 
     {RGBColor[
      0.41690402383114566`, 0.29652382011294276`, 0.1693051493644755], 
      Point3DBox[{2, 5, 5}]}, 
     {RGBColor[0.24056028355226378`, 0.8095378327202629, 0.09025838852793888],
       Point3DBox[{2, 5, 6}]}, 
     {RGBColor[0.5691486192126427, 0.8914979751534979, 0.42221455102737826`], 
      Point3DBox[{2, 5, 7}]}, 
     {RGBColor[0.08767303397971182, 0.5537489889328786, 0.3564614588900594], 
      Point3DBox[{2, 5, 8}]}, 
     {RGBColor[0.09361838477021922, 0.9964007845975686, 0.14925197561753722`],
       Point3DBox[{2, 5, 9}]}, 
     {RGBColor[
      0.015486205076270076`, 0.4709385063347751, 0.08177399111427586], 
      Point3DBox[{2, 5, 10}]}}, {
     {RGBColor[
      0.8992820981217884, 0.14574131080475006`, 0.16980263947074548`], 
      Point3DBox[{2, 6, 1}]}, 
     {RGBColor[0.777993926534444, 0.08376536455046235, 0.37754157728613347`], 
      Point3DBox[{2, 6, 2}]}, 
     {RGBColor[0.515532833166751, 0.732995956108591, 0.2677137506477836], 
      Point3DBox[{2, 6, 3}]}, 
     {RGBColor[0.05186510960330026, 0.17758784008391526`, 0.7109993011242888],
       Point3DBox[{2, 6, 4}]}, 
     {RGBColor[0.11674468035051255`, 0.2707214880749833, 0.6969513507090006], 
      Point3DBox[{2, 6, 5}]}, 
     {RGBColor[
      0.9725184117347234, 0.004293747350972987, 0.14070178442342218`], 
      Point3DBox[{2, 6, 6}]}, 
     {RGBColor[0.7474541350939747, 0.9755007229621493, 0.6280207011526251], 
      Point3DBox[{2, 6, 7}]}, 
     {RGBColor[0.7689018782232195, 0.989593658313703, 0.866259798767173], 
      Point3DBox[{2, 6, 8}]}, 
     {RGBColor[0.32621734951826054`, 0.3449523353161901, 0.7973109628092103], 
      Point3DBox[{2, 6, 9}]}, 
     {RGBColor[0.6267170249366785, 0.6432276728573847, 0.39637921276442256`], 
      Point3DBox[{2, 6, 10}]}}, {
     {RGBColor[0.3844064343533877, 0.4114857004634922, 0.22418327986469655`], 
      Point3DBox[{2, 7, 1}]}, 
     {RGBColor[0.12391944873946592`, 0.789458551130003, 0.15415221522383837`],
       Point3DBox[{2, 7, 2}]}, 
     {RGBColor[
      0.48584718181461195`, 0.17434774800032926`, 0.9962607574714017], 
      Point3DBox[{2, 7, 3}]}, 
     {RGBColor[0.09103049430093835, 0.7793580569894951, 0.4277975021618641], 
      Point3DBox[{2, 7, 4}]}, 
     {RGBColor[0.5159530663104932, 0.9601275662098168, 0.5107153672608526], 
      Point3DBox[{2, 7, 5}]}, 
     {RGBColor[0.8589112743773748, 0.3805432685433603, 0.4199705074658304], 
      Point3DBox[{2, 7, 6}]}, 
     {RGBColor[0.9006608881773988, 0.7432121932741309, 0.8986051138100009], 
      Point3DBox[{2, 7, 7}]}, 
     {RGBColor[
      0.7339570132644175, 0.17029060216903025`, 0.19415103826140978`], 
      Point3DBox[{2, 7, 8}]}, 
     {RGBColor[0.786862443613151, 0.6864920881904972, 0.019620760897975043`], 
      Point3DBox[{2, 7, 9}]}, 
     {RGBColor[0.6991833300790657, 0.10251105340028976`, 0.4020935033335542], 
      Point3DBox[{2, 7, 10}]}}, {
     {RGBColor[0.8588058843960606, 0.1055666990379136, 0.4316151768283909], 
      Point3DBox[{2, 8, 1}]}, 
     {RGBColor[0.9020429952675562, 0.43268247272164784`, 0.5252520160630707], 
      Point3DBox[{2, 8, 2}]}, 
     {RGBColor[0.8571249070544251, 0.7854626483441804, 0.26125571677936477`], 
      Point3DBox[{2, 8, 3}]}, 
     {RGBColor[0.7527698183019846, 0.9715986540034727, 0.8697763660033904], 
      Point3DBox[{2, 8, 4}]}, 
     {RGBColor[0.04453352078098094, 0.5504875248942624, 0.21740623881172527`],
       Point3DBox[{2, 8, 5}]}, 
     {RGBColor[0.794114759390635, 0.6548050921016146, 0.805291013664861], 
      Point3DBox[{2, 8, 6}]}, 
     {RGBColor[0.7391095774646592, 0.7778613817276037, 0.10351141993110025`], 
      Point3DBox[{2, 8, 7}]}, 
     {RGBColor[0.8120679981576286, 0.8041338175079402, 0.45313700211377306`], 
      Point3DBox[{2, 8, 8}]}, 
     {RGBColor[0.4609666546433602, 0.12942480873677953`, 0.7594296296922243], 
      Point3DBox[{2, 8, 9}]}, 
     {RGBColor[0.5115924673412402, 0.3894370591880574, 0.7366464429768684], 
      Point3DBox[{2, 8, 10}]}}, {
     {RGBColor[0.7416032574358022, 0.2093340517259188, 0.9332806097025623], 
      Point3DBox[{2, 9, 1}]}, 
     {RGBColor[0.27382761663296407`, 0.5309675458040803, 0.5596177614429634], 
      Point3DBox[{2, 9, 2}]}, 
     {RGBColor[0.568285503689129, 0.8648758064369779, 0.8612681247720382], 
      Point3DBox[{2, 9, 3}]}, 
     {RGBColor[0.814447609157601, 0.44569375315952, 0.1672869459542803], 
      Point3DBox[{2, 9, 4}]}, 
     {RGBColor[0.586151951465548, 0.41660932228474756`, 0.5965906177949918], 
      Point3DBox[{2, 9, 5}]}, 
     {RGBColor[0.9824875079106128, 0.9247339112836463, 0.8023589851465613], 
      Point3DBox[{2, 9, 6}]}, 
     {RGBColor[0.8916684827912231, 0.9902195831924954, 0.9450380427020255], 
      Point3DBox[{2, 9, 7}]}, 
     {RGBColor[0.44948315948626383`, 0.3396409101950284, 0.9589705884028312], 
      Point3DBox[{2, 9, 8}]}, 
     {RGBColor[
      0.22262228159927777`, 0.3638982503498329, 0.22048858715691755`], 
      Point3DBox[{2, 9, 9}]}, 
     {RGBColor[
      0.017055905650549485`, 0.494198947652998, 0.32271808462781437`], 
      Point3DBox[{2, 9, 10}]}}, {
     {RGBColor[0.3099047464551896, 0.037708233684454306`, 0.8054461732420559],
       Point3DBox[{2, 10, 1}]}, 
     {RGBColor[0.8174624235964318, 0.5697550940154001, 0.36692840924621994`], 
      Point3DBox[{2, 10, 2}]}, 
     {RGBColor[0.03601420581929582, 0.31243755596162015`, 0.6062800306210678],
       Point3DBox[{2, 10, 3}]}, 
     {RGBColor[0.9451648357649189, 0.8318320274882269, 0.24765911708333932`], 
      Point3DBox[{2, 10, 4}]}, 
     {RGBColor[0.6923307699607946, 0.25056080432935746`, 0.3137460823572149], 
      Point3DBox[{2, 10, 5}]}, 
     {RGBColor[0.6441730351837514, 0.13336174652229715`, 0.7053621935495498], 
      Point3DBox[{2, 10, 6}]}, 
     {RGBColor[0.1865439565793694, 0.09535611522980281, 0.5564760802468363], 
      Point3DBox[{2, 10, 7}]}, 
     {RGBColor[0.9370809419534041, 0.1484716459048807, 0.46961992368360495`], 
      Point3DBox[{2, 10, 8}]}, 
     {RGBColor[0.6378484352857019, 0.882091016220371, 0.3581700283270297], 
      Point3DBox[{2, 10, 9}]}, 
     {RGBColor[0.8754451103432699, 0.6105377358252477, 0.8346410716910526], 
      Point3DBox[{2, 10, 10}]}}}, {{
     {RGBColor[0.8456745799859502, 0.6722768236685857, 0.32033556092425086`], 
      Point3DBox[{3, 1, 1}]}, 
     {RGBColor[0.9827219393377644, 0.15085328033302536`, 0.8139685395220124], 
      Point3DBox[{3, 1, 2}]}, 
     {RGBColor[0.8490717408644157, 0.4545864826931896, 0.35902095308832904`], 
      Point3DBox[{3, 1, 3}]}, 
     {RGBColor[0.7216399281475945, 0.13707619634945756`, 0.7910801437293302], 
      Point3DBox[{3, 1, 4}]}, 
     {RGBColor[
      0.0019583510842446916`, 0.8580730585050194, 0.9865868711260812], 
      Point3DBox[{3, 1, 5}]}, 
     {RGBColor[0.33026538371897773`, 0.6079819187130442, 0.7236553705740147], 
      Point3DBox[{3, 1, 6}]}, 
     {RGBColor[0.3378262378758552, 0.9179513428441985, 0.6905681684383551], 
      Point3DBox[{3, 1, 7}]}, 
     {RGBColor[0.20344722463459797`, 0.08091757367817975, 0.6280080925677765],
       Point3DBox[{3, 1, 8}]}, 
     {RGBColor[
      0.8332324296251319, 0.24741276361338116`, 0.40094282339994325`], 
      Point3DBox[{3, 1, 9}]}, 
     {RGBColor[0.5141788888002836, 0.20863589483222955`, 0.50323755159957], 
      Point3DBox[{3, 1, 10}]}}, {
     {RGBColor[
      0.02406348114542567, 0.34118293234163755`, 0.09828396273860807], 
      Point3DBox[{3, 2, 1}]}, 
     {RGBColor[0.5151426597352129, 0.6622031403194182, 0.5469178518572679], 
      Point3DBox[{3, 2, 2}]}, 
     {RGBColor[0.31238335947184437`, 0.6264712593580355, 0.4611623346789362], 
      Point3DBox[{3, 2, 3}]}, 
     {RGBColor[0.21147937695126218`, 0.6824754642809121, 0.5551051983257744], 
      Point3DBox[{3, 2, 4}]}, 
     {RGBColor[0.3910494815233727, 0.7428313691642721, 0.5715446523552301], 
      Point3DBox[{3, 2, 5}]}, 
     {RGBColor[
      0.24804062290033402`, 0.44326382803661724`, 0.4823816521125923], 
      Point3DBox[{3, 2, 6}]}, 
     {RGBColor[0.26837903357834536`, 0.9965144131338148, 0.7717458024403607], 
      Point3DBox[{3, 2, 7}]}, 
     {RGBColor[
      0.008599512450557567, 0.48144065275518044`, 0.8853734873192267], 
      Point3DBox[{3, 2, 8}]}, 
     {RGBColor[0.40240471840216174`, 0.3874003780545414, 0.6466482016137345], 
      Point3DBox[{3, 2, 9}]}, 
     {RGBColor[0.36980375527083087`, 0.4615252314539602, 0.6309628669976606], 
      Point3DBox[{3, 2, 10}]}}, {
     {RGBColor[
      0.49414544844832586`, 0.21706467268400953`, 0.6025887560786198], 
      Point3DBox[{3, 3, 1}]}, 
     {RGBColor[0.8626202414033122, 0.6763547751568677, 0.32688170206541733`], 
      Point3DBox[{3, 3, 2}]}, 
     {RGBColor[0.07439218501694467, 0.6811881943687068, 0.17798652659429526`],
       Point3DBox[{3, 3, 3}]}, 
     {RGBColor[0.24943774339017843`, 0.9268975265261461, 0.3880587157494666], 
      Point3DBox[{3, 3, 4}]}, 
     {RGBColor[0.8707754785527781, 0.6173601441233569, 0.6712011430943672], 
      Point3DBox[{3, 3, 5}]}, 
     {RGBColor[0.6245049662076017, 0.6031182941803264, 0.18624916118085766`], 
      Point3DBox[{3, 3, 6}]}, 
     {RGBColor[0.9293500670760799, 0.5951019123775843, 0.04414948752618608], 
      Point3DBox[{3, 3, 7}]}, 
     {RGBColor[0.3943065367210894, 0.3691037649278859, 0.6766577659404489], 
      Point3DBox[{3, 3, 8}]}, 
     {RGBColor[0.740509887312947, 0.5828463757361046, 0.8634127019294029], 
      Point3DBox[{3, 3, 9}]}, 
     {RGBColor[0.8899304145370468, 0.5936114849259475, 0.435909207679142], 
      Point3DBox[{3, 3, 10}]}}, {
     {RGBColor[0.8773376741780501, 0.4984400897911041, 0.3886494524969093], 
      Point3DBox[{3, 4, 1}]}, 
     {RGBColor[0.46670728957178875`, 0.4574007701094225, 0.343441386910063], 
      Point3DBox[{3, 4, 2}]}, 
     {RGBColor[
      0.40085601223788037`, 0.5780109511445517, 0.15033239597581205`], 
      Point3DBox[{3, 4, 3}]}, 
     {RGBColor[0.2554870962521021, 0.04283629903775954, 0.41813542916405355`],
       Point3DBox[{3, 4, 4}]}, 
     {RGBColor[0.9385261911374019, 0.13669421473559873`, 0.1113356437636619], 
      Point3DBox[{3, 4, 5}]}, 
     {RGBColor[0.5331697672018045, 0.9909759972727663, 0.06361029328265433], 
      Point3DBox[{3, 4, 6}]}, 
     {RGBColor[0.37617896028774767`, 0.6203773309621956, 0.2945578562655724], 
      Point3DBox[{3, 4, 7}]}, 
     {RGBColor[0.11171688351885378`, 0.3056473108739435, 0.9902852456248714], 
      Point3DBox[{3, 4, 8}]}, 
     {RGBColor[
      0.04466503894935925, 0.8313764455153831, 0.046211147869345215`], 
      Point3DBox[{3, 4, 9}]}, 
     {RGBColor[0.8871840970087239, 0.06359303147329776, 0.1884870436726911], 
      Point3DBox[{3, 4, 10}]}}, {
     {RGBColor[0.4097084098483921, 0.9846577951970981, 0.9203472893461806], 
      Point3DBox[{3, 5, 1}]}, 
     {RGBColor[0.2613629273507825, 0.10473547425698992`, 0.5050063655851438], 
      Point3DBox[{3, 5, 2}]}, 
     {RGBColor[0.6364141205455998, 0.15812892134913348`, 0.06803667713989836],
       Point3DBox[{3, 5, 3}]}, 
     {RGBColor[
      0.23072355358084828`, 0.09301103210430028, 0.16536974819305716`], 
      Point3DBox[{3, 5, 4}]}, 
     {RGBColor[0.8922646780355847, 0.23140773577387908`, 0.7679798039153283], 
      Point3DBox[{3, 5, 5}]}, 
     {RGBColor[
      0.9628580420463597, 0.037329612509719556`, 0.39144900051398435`], 
      Point3DBox[{3, 5, 6}]}, 
     {RGBColor[
      0.6346457948129571, 0.5811422224843492, 0.0035511270344064094`], 
      Point3DBox[{3, 5, 7}]}, 
     {RGBColor[0.6251998266647911, 0.9116537490813288, 0.12862794260421517`], 
      Point3DBox[{3, 5, 8}]}, 
     {RGBColor[0.661556410874194, 0.012304770379633068`, 0.6075840707334144], 
      Point3DBox[{3, 5, 9}]}, 
     {RGBColor[0.38399999270225016`, 0.9068005682672622, 0.3748767183147095], 
      Point3DBox[{3, 5, 10}]}}, {
     {RGBColor[0.9668472545332478, 0.4654156329869017, 0.6888797124686958], 
      Point3DBox[{3, 6, 1}]}, 
     {RGBColor[0.9802598961175972, 0.8522422601435387, 0.2191330706635115], 
      Point3DBox[{3, 6, 2}]}, 
     {RGBColor[0.873152876799159, 0.2618313130651444, 0.09106334062865828], 
      Point3DBox[{3, 6, 3}]}, 
     {RGBColor[0.45035499975558246`, 0.0998567724945052, 0.7585316872226151], 
      Point3DBox[{3, 6, 4}]}, 
     {RGBColor[0.8863486300377386, 0.09276677411569456, 0.7446906456936833], 
      Point3DBox[{3, 6, 5}]}, 
     {RGBColor[0.4499505826536099, 0.7637830337903788, 0.22110756772223805`], 
      Point3DBox[{3, 6, 6}]}, 
     {RGBColor[0.3865907885748101, 0.5049755390006976, 0.5126522546737908], 
      Point3DBox[{3, 6, 7}]}, 
     {RGBColor[0.5508943443017844, 0.9979357418224217, 0.7575886587455589], 
      Point3DBox[{3, 6, 8}]}, 
     {RGBColor[0.0973909715279575, 0.42181033357377995`, 0.8449426644705207], 
      Point3DBox[{3, 6, 9}]}, 
     {RGBColor[0.8976122841414418, 0.5561845576349207, 0.9388134406189157], 
      Point3DBox[{3, 6, 10}]}}, {
     {RGBColor[0.05417515303065201, 0.5888236004531717, 0.1827675242610589], 
      Point3DBox[{3, 7, 1}]}, 
     {RGBColor[0.24974620197480912`, 0.6666842185209361, 0.8846876838131583], 
      Point3DBox[{3, 7, 2}]}, 
     {RGBColor[0.3955733978465079, 0.8605651572949722, 0.7352885401179978], 
      Point3DBox[{3, 7, 3}]}, 
     {RGBColor[0.6589502428004719, 0.4569495415852032, 0.8572597190751912], 
      Point3DBox[{3, 7, 4}]}, 
     {RGBColor[0.08662692498630986, 0.796814216921697, 0.5316899476347456], 
      Point3DBox[{3, 7, 5}]}, 
     {RGBColor[0.8010823814588, 0.23983505724017906`, 0.008021574189565062], 
      Point3DBox[{3, 7, 6}]}, 
     {RGBColor[
      0.1889165183265522, 0.43935104726201923`, 0.15784899977556766`], 
      Point3DBox[{3, 7, 7}]}, 
     {RGBColor[0.3095300153478795, 0.982767729795194, 0.8435875662779824], 
      Point3DBox[{3, 7, 8}]}, 
     {RGBColor[
      0.13118063246551892`, 0.3958755929545541, 0.012354518870361542`], 
      Point3DBox[{3, 7, 9}]}, 
     {RGBColor[0.030989685741505957`, 0.2387678201641379, 0.7368807261780688],
       Point3DBox[{3, 7, 10}]}}, {
     {RGBColor[0.5328025252350037, 0.6807607398686786, 0.73138633592715], 
      Point3DBox[{3, 8, 1}]}, 
     {RGBColor[0.4224347431156765, 0.9907114358283815, 0.26167038363918094`], 
      Point3DBox[{3, 8, 2}]}, 
     {RGBColor[0.06730260958292988, 0.8753235882337287, 0.35589994859881746`],
       Point3DBox[{3, 8, 3}]}, 
     {RGBColor[0.8764556653996707, 0.31267759186856003`, 0.6416439020253732], 
      Point3DBox[{3, 8, 4}]}, 
     {RGBColor[0.9077286192469955, 0.47728886850546415`, 0.864683850909713], 
      Point3DBox[{3, 8, 5}]}, 
     {RGBColor[0.745718685663564, 0.12258468678672729`, 0.26144106503392583`],
       Point3DBox[{3, 8, 6}]}, 
     {RGBColor[0.16986645687245505`, 0.06726502629802056, 0.4451277866568015],
       Point3DBox[{3, 8, 7}]}, 
     {RGBColor[
      0.022229143552387587`, 0.007440200855419521, 0.06713962163978593], 
      Point3DBox[{3, 8, 8}]}, 
     {RGBColor[0.17188786234268916`, 0.6799565413962068, 0.8121025665258632], 
      Point3DBox[{3, 8, 9}]}, 
     {RGBColor[
      0.41534635800324016`, 0.11120474192194552`, 0.33383357093906496`], 
      Point3DBox[{3, 8, 10}]}}, {
     {RGBColor[0.594133894206688, 0.748630046703439, 0.010543471864705722`], 
      Point3DBox[{3, 9, 1}]}, 
     {RGBColor[0.8699147852716489, 0.528986400133536, 0.33749679421394396`], 
      Point3DBox[{3, 9, 2}]}, 
     {RGBColor[0.43832087693621236`, 0.1782897427962029, 0.280741681994666], 
      Point3DBox[{3, 9, 3}]}, 
     {RGBColor[0.053871724186260295`, 0.5051622776698141, 0.2873640057444302],
       Point3DBox[{3, 9, 4}]}, 
     {RGBColor[0.9339580286320412, 0.16181355280904075`, 0.5955833788813865], 
      Point3DBox[{3, 9, 5}]}, 
     {RGBColor[0.451076560532798, 0.7413098011715942, 0.5292351083671891], 
      Point3DBox[{3, 9, 6}]}, 
     {RGBColor[0.3444650027552445, 0.809679236554476, 0.9490935793160578], 
      Point3DBox[{3, 9, 7}]}, 
     {RGBColor[0.34839208458963933`, 0.8764073198282543, 0.5756405345715474], 
      Point3DBox[{3, 9, 8}]}, 
     {RGBColor[
      0.1834628824438611, 0.41965106277922537`, 0.34863300228992666`], 
      Point3DBox[{3, 9, 9}]}, 
     {RGBColor[0.8073334972851491, 0.21820406186479557`, 0.4435402573737186], 
      Point3DBox[{3, 9, 10}]}}, {
     {RGBColor[0.8185126478422278, 0.09459001246632659, 0.7048083979070192], 
      Point3DBox[{3, 10, 1}]}, 
     {RGBColor[0.6936473581781861, 0.3429601620035283, 0.6254223668405912], 
      Point3DBox[{3, 10, 2}]}, 
     {RGBColor[0.7093390122832763, 0.16080130647786928`, 0.4255581648603075], 
      Point3DBox[{3, 10, 3}]}, 
     {RGBColor[0.9672280507921958, 0.4516503219711241, 0.3606028320453407], 
      Point3DBox[{3, 10, 4}]}, 
     {RGBColor[0.3510820876033063, 0.5078668767255916, 0.07292701097046828], 
      Point3DBox[{3, 10, 5}]}, 
     {RGBColor[
      0.20064055133003822`, 0.22304377413116128`, 0.2365280658121356], 
      Point3DBox[{3, 10, 6}]}, 
     {RGBColor[0.43546271114350366`, 0.9506822706039899, 0.7273917745035074], 
      Point3DBox[{3, 10, 7}]}, 
     {RGBColor[0.6100660350778311, 0.2617011241372338, 0.8402501635228263], 
      Point3DBox[{3, 10, 8}]}, 
     {RGBColor[0.10290619982410165`, 0.22140505971153446`, 0.888949853410099],
       Point3DBox[{3, 10, 9}]}, 
     {RGBColor[0.8824144931783828, 0.6876187244250784, 0.9497096183933111], 
      Point3DBox[{3, 10, 10}]}}}, {{
     {RGBColor[0.4433850912758679, 0.8345724211411292, 0.7927067685862499], 
      Point3DBox[{4, 1, 1}]}, 
     {RGBColor[0.560929561975861, 0.5401129017018154, 0.8804096316664698], 
      Point3DBox[{4, 1, 2}]}, 
     {RGBColor[0.6029378699680303, 0.988079639857407, 0.8665263083769559], 
      Point3DBox[{4, 1, 3}]}, 
     {RGBColor[0.24976569135088944`, 0.9772074197386202, 0.09519970570441227],
       Point3DBox[{4, 1, 4}]}, 
     {RGBColor[0.6080683099724542, 0.7558901308691524, 0.9837508552272103], 
      Point3DBox[{4, 1, 5}]}, 
     {RGBColor[0.15080116927312082`, 0.6521558181168026, 0.2994373913415982], 
      Point3DBox[{4, 1, 6}]}, 
     {RGBColor[0.09837766747155974, 0.25141727956265303`, 0.4642533947052918],
       Point3DBox[{4, 1, 7}]}, 
     {RGBColor[0.7115941491606552, 0.6814857228891038, 0.9980147234087171], 
      Point3DBox[{4, 1, 8}]}, 
     {RGBColor[0.09626596619517747, 0.9859345757183517, 0.3098839496886008], 
      Point3DBox[{4, 1, 9}]}, 
     {RGBColor[0.6716531096463529, 0.3213710252888822, 0.3737483982227221], 
      Point3DBox[{4, 1, 10}]}}, {
     {RGBColor[
      0.16305695418779553`, 0.09662244844463252, 0.49845577092933313`], 
      Point3DBox[{4, 2, 1}]}, 
     {RGBColor[0.3756642631206506, 0.9990102163784491, 0.5036537043453748], 
      Point3DBox[{4, 2, 2}]}, 
     {RGBColor[0.8363053206713964, 0.9072028527911167, 0.5881892801018682], 
      Point3DBox[{4, 2, 3}]}, 
     {RGBColor[0.798029677516435, 0.11700637464482755`, 0.6891234114865483], 
      Point3DBox[{4, 2, 4}]}, 
     {RGBColor[0.7569558865092232, 0.6894890737400066, 0.4676119335803244], 
      Point3DBox[{4, 2, 5}]}, 
     {RGBColor[0.8563889937500953, 0.19835033484602516`, 0.9253231987578474], 
      Point3DBox[{4, 2, 6}]}, 
     {RGBColor[
      0.11609819233601715`, 0.29937402664558954`, 0.7972070395525834], 
      Point3DBox[{4, 2, 7}]}, 
     {RGBColor[0.5254681130617889, 0.09517439003405448, 0.03831114221877363], 
      Point3DBox[{4, 2, 8}]}, 
     {RGBColor[0.6541413420911519, 0.1651360883270252, 0.05971131981967526], 
      Point3DBox[{4, 2, 9}]}, 
     {RGBColor[0.5311315394566611, 0.34594625615745733`, 0.04503041464058599],
       Point3DBox[{4, 2, 10}]}}, {
     {RGBColor[0.9692249577927823, 0.0308409336592248, 0.6105834417505636], 
      Point3DBox[{4, 3, 1}]}, 
     {RGBColor[0.8658354584694723, 0.021275678960136934`, 0.9276492030007553],
       Point3DBox[{4, 3, 2}]}, 
     {RGBColor[
      0.9434859084506837, 0.27969174007602193`, 0.20336550083809324`], 
      Point3DBox[{4, 3, 3}]}, 
     {RGBColor[0.9717420080530301, 0.7780854603907097, 0.06557835846006554], 
      Point3DBox[{4, 3, 4}]}, 
     {RGBColor[0.6402852851189726, 0.8723369205018034, 0.8631900390965601], 
      Point3DBox[{4, 3, 5}]}, 
     {RGBColor[0.940284825647608, 0.05745659811665238, 0.322060284817403], 
      Point3DBox[{4, 3, 6}]}, 
     {RGBColor[
      0.05643309888786052, 0.021136800482039808`, 0.3821335758919593], 
      Point3DBox[{4, 3, 7}]}, 
     {RGBColor[0.9075848482208242, 0.42393739688722376`, 0.9747872420651014], 
      Point3DBox[{4, 3, 8}]}, 
     {RGBColor[0.5348791485087423, 0.33108640979871273`, 0.9372544604828812], 
      Point3DBox[{4, 3, 9}]}, 
     {RGBColor[0.901959711147998, 0.6728299295131108, 0.6081603759936325], 
      Point3DBox[{4, 3, 10}]}}, {
     {RGBColor[0.45525860121124007`, 0.9612208517480068, 0.6945217049727339], 
      Point3DBox[{4, 4, 1}]}, 
     {RGBColor[0.404902309873568, 0.8340645285691377, 0.862106092502289], 
      Point3DBox[{4, 4, 2}]}, 
     {RGBColor[
      0.35397735002455444`, 0.7598094443332035, 0.12785045792540206`], 
      Point3DBox[{4, 4, 3}]}, 
     {RGBColor[0.5395192753647957, 0.09928577573425867, 0.22994688295999555`],
       Point3DBox[{4, 4, 4}]}, 
     {RGBColor[0.6068696566297909, 0.8924340304713492, 0.5276162708228036], 
      Point3DBox[{4, 4, 5}]}, 
     {RGBColor[0.6274939616218866, 0.36291336759268655`, 0.935889828556715], 
      Point3DBox[{4, 4, 6}]}, 
     {RGBColor[0.902264597694147, 0.7412692916054051, 0.46569860334113544`], 
      Point3DBox[{4, 4, 7}]}, 
     {RGBColor[0.335698643067162, 0.5627477946965613, 0.6354731353720673], 
      Point3DBox[{4, 4, 8}]}, 
     {RGBColor[0.866764292756736, 0.7934196015163328, 0.3400077352476347], 
      Point3DBox[{4, 4, 9}]}, 
     {RGBColor[0.8563878030068772, 0.5548604758204794, 0.9246540575103461], 
      Point3DBox[{4, 4, 10}]}}, {
     {RGBColor[
      0.4300351017334376, 0.0047235286161833034`, 0.03288304527429253], 
      Point3DBox[{4, 5, 1}]}, 
     {RGBColor[0.48033716165579676`, 0.2730411962262902, 0.5097095659440967], 
      Point3DBox[{4, 5, 2}]}, 
     {RGBColor[
      0.01183097886528528, 0.046949658498604885`, 0.9542958694933188], 
      Point3DBox[{4, 5, 3}]}, 
     {RGBColor[0.6142779001663079, 0.7991420651182477, 0.7065860346665054], 
      Point3DBox[{4, 5, 4}]}, 
     {RGBColor[0.7858839820036316, 0.32919318923110885`, 0.8027014898151537], 
      Point3DBox[{4, 5, 5}]}, 
     {RGBColor[0.31785750261969903`, 0.5467989834614315, 0.2769400212333064], 
      Point3DBox[{4, 5, 6}]}, 
     {RGBColor[0.15026844855428823`, 0.3237826760448588, 0.1276619888727566], 
      Point3DBox[{4, 5, 7}]}, 
     {RGBColor[0.8196743003735028, 0.03864620008311004, 0.6045211007266573], 
      Point3DBox[{4, 5, 8}]}, 
     {RGBColor[0.1472022580550827, 0.5500431239474752, 0.4116456323284887], 
      Point3DBox[{4, 5, 9}]}, 
     {RGBColor[0.853066054139314, 0.45273910494591596`, 0.8032239570189414], 
      Point3DBox[{4, 5, 10}]}}, {
     {RGBColor[0.03688197428884776, 0.7040097048605736, 0.9768451835062735], 
      Point3DBox[{4, 6, 1}]}, 
     {RGBColor[0.7050868592074835, 0.2099200847033409, 0.46679806217364295`], 
      Point3DBox[{4, 6, 2}]}, 
     {RGBColor[0.05027857664088198, 0.9608856343851124, 0.13448527484260064`],
       Point3DBox[{4, 6, 3}]}, 
     {RGBColor[0.8924552208552974, 0.6380326176832762, 0.776090673038631], 
      Point3DBox[{4, 6, 4}]}, 
     {RGBColor[0.37482521712383865`, 0.2979328369896965, 0.3404217231144979], 
      Point3DBox[{4, 6, 5}]}, 
     {RGBColor[0.1310095382867149, 0.17373414277825638`, 0.4511754111360087], 
      Point3DBox[{4, 6, 6}]}, 
     {RGBColor[0.6256695880542116, 0.9199797118599535, 0.6121624556862602], 
      Point3DBox[{4, 6, 7}]}, 
     {RGBColor[0.7802199231822455, 0.7070395040962281, 0.8953110819028642], 
      Point3DBox[{4, 6, 8}]}, 
     {RGBColor[0.5026807827150412, 0.16723280944752084`, 0.09413764335816444],
       Point3DBox[{4, 6, 9}]}, 
     {RGBColor[0.9443991307415001, 0.9432102254843997, 0.24354726326349052`], 
      Point3DBox[{4, 6, 10}]}}, {
     {RGBColor[0.3072070351974512, 0.7041829504855697, 0.2807610670901317], 
      Point3DBox[{4, 7, 1}]}, 
     {RGBColor[0.06896252018600979, 0.6411087458689999, 0.6659563052646522], 
      Point3DBox[{4, 7, 2}]}, 
     {RGBColor[0.2319275092034192, 0.24427618154739372`, 0.617192937495515], 
      Point3DBox[{4, 7, 3}]}, 
     {RGBColor[0.1564230597570575, 0.4640371136443229, 0.7133286477968825], 
      Point3DBox[{4, 7, 4}]}, 
     {RGBColor[0.831196888438249, 0.9411005628267333, 0.5219789716911583], 
      Point3DBox[{4, 7, 5}]}, 
     {RGBColor[0.563650896789055, 0.5776252545312919, 0.03583021497661476], 
      Point3DBox[{4, 7, 6}]}, 
     {RGBColor[0.6526385979709977, 0.4688869517042207, 0.5632039364948251], 
      Point3DBox[{4, 7, 7}]}, 
     {RGBColor[0.3896797470273725, 0.8639982555600316, 0.6168960874911744], 
      Point3DBox[{4, 7, 8}]}, 
     {RGBColor[0.6280348932865916, 0.08256104394545583, 0.6038545319637552], 
      Point3DBox[{4, 7, 9}]}, 
     {RGBColor[0.3319111940010493, 0.015523073144732447`, 0.9080947459709314],
       Point3DBox[{4, 7, 10}]}}, {
     {RGBColor[0.586318184977126, 0.6522237551298278, 0.9504611806632208], 
      Point3DBox[{4, 8, 1}]}, 
     {RGBColor[0.6316811456764999, 0.3544858199486123, 0.5150903600022565], 
      Point3DBox[{4, 8, 2}]}, 
     {RGBColor[0.8109461373355336, 0.5572647759331653, 0.719967783705677], 
      Point3DBox[{4, 8, 3}]}, 
     {RGBColor[0.9087607474268853, 0.47024663380278864`, 0.5831000931686368], 
      Point3DBox[{4, 8, 4}]}, 
     {RGBColor[0.7842919956141403, 0.862162637032454, 0.9200998047228495], 
      Point3DBox[{4, 8, 5}]}, 
     {RGBColor[0.1356282422201176, 0.08383432626108567, 0.9048684930538995], 
      Point3DBox[{4, 8, 6}]}, 
     {RGBColor[0.4703385695228197, 0.26018960288419524`, 0.2399265821593639], 
      Point3DBox[{4, 8, 7}]}, 
     {RGBColor[0.7208872216056084, 0.19381928467627407`, 0.06275564773116704],
       Point3DBox[{4, 8, 8}]}, 
     {RGBColor[0.8330902796494621, 0.5686026537774447, 0.6774268525503171], 
      Point3DBox[{4, 8, 9}]}, 
     {RGBColor[0.3661634043244628, 0.233035490870787, 0.5958171462609001], 
      Point3DBox[{4, 8, 10}]}}, {
     {RGBColor[0.4118715394962311, 0.8921064927171374, 0.8510880365351428], 
      Point3DBox[{4, 9, 1}]}, 
     {RGBColor[0.8680421380150942, 0.6859061033141609, 0.6770396943903072], 
      Point3DBox[{4, 9, 2}]}, 
     {RGBColor[0.04496215413541438, 0.3806462017960992, 0.15682567742623843`],
       Point3DBox[{4, 9, 3}]}, 
     {RGBColor[0.2129118988862695, 0.4074635715279866, 0.18240915288876325`], 
      Point3DBox[{4, 9, 4}]}, 
     {RGBColor[0.6086783575108463, 0.5237927435762426, 0.632015887626822], 
      Point3DBox[{4, 9, 5}]}, 
     {RGBColor[0.6437320307327481, 0.7578726480745914, 0.16232124202222065`], 
      Point3DBox[{4, 9, 6}]}, 
     {RGBColor[
      0.31198649324580496`, 0.34007373568437393`, 0.4069579375617831], 
      Point3DBox[{4, 9, 7}]}, 
     {RGBColor[0.637973195242975, 0.5580823689658836, 0.4884837555168011], 
      Point3DBox[{4, 9, 8}]}, 
     {RGBColor[0.638981327465233, 0.49102773177899284`, 0.2254226255026479], 
      Point3DBox[{4, 9, 9}]}, 
     {RGBColor[0.5636350459553565, 0.7926206532733995, 0.29220647256744225`], 
      Point3DBox[{4, 9, 10}]}}, {
     {RGBColor[0.9056464657735606, 0.8770843290377079, 0.7416049303097474], 
      Point3DBox[{4, 10, 1}]}, 
     {RGBColor[0.17453446175245024`, 0.22583108920300687`, 0.46994522386938], 
      Point3DBox[{4, 10, 2}]}, 
     {RGBColor[
      0.12804078278146958`, 0.37766619652112143`, 0.4023649729903229], 
      Point3DBox[{4, 10, 3}]}, 
     {RGBColor[0.3324229829638201, 0.4482249153166642, 0.19104386831411624`], 
      Point3DBox[{4, 10, 4}]}, 
     {RGBColor[0.3694021647957306, 0.7778050672385919, 0.1433728853144125], 
      Point3DBox[{4, 10, 5}]}, 
     {RGBColor[
      0.020482282474470592`, 0.31239891707128153`, 0.8928484213793573], 
      Point3DBox[{4, 10, 6}]}, 
     {RGBColor[0.1325197793760966, 0.4148287721961408, 0.4170075589835971], 
      Point3DBox[{4, 10, 7}]}, 
     {RGBColor[0.5100425865672376, 0.9491957742442219, 0.3212437027758335], 
      Point3DBox[{4, 10, 8}]}, 
     {RGBColor[0.5951357670388309, 0.6563169708739722, 0.9033938997112136], 
      Point3DBox[{4, 10, 9}]}, 
     {RGBColor[0.2519235730936815, 0.5665681568447696, 0.05998847392836559], 
      Point3DBox[{4, 10, 10}]}}}, {{
     {RGBColor[0.664817585678606, 0.23085547600932066`, 0.5231741597891943], 
      Point3DBox[{5, 1, 1}]}, 
     {RGBColor[0.7262547256987091, 0.03282062290000165, 0.7789571927274879], 
      Point3DBox[{5, 1, 2}]}, 
     {RGBColor[0.1153159503920882, 0.5671827577496928, 0.4970633385605274], 
      Point3DBox[{5, 1, 3}]}, 
     {RGBColor[0.9095711719904, 0.9411974706867008, 0.3375093715427939], 
      Point3DBox[{5, 1, 4}]}, 
     {RGBColor[0.2380791638506654, 0.8617243314306102, 0.6504238962712716], 
      Point3DBox[{5, 1, 5}]}, 
     {RGBColor[0.0811166313271161, 0.16399735889579747`, 0.8130105843313946], 
      Point3DBox[{5, 1, 6}]}, 
     {RGBColor[0.6047308371130744, 0.6485627240097771, 0.860001463394984], 
      Point3DBox[{5, 1, 7}]}, 
     {RGBColor[0.6221956273527938, 0.28223966594988825`, 0.711299439288136], 
      Point3DBox[{5, 1, 8}]}, 
     {RGBColor[0.18959184311029498`, 0.863646643236281, 0.8963531691892177], 
      Point3DBox[{5, 1, 9}]}, 
     {RGBColor[0.8795058792994819, 0.2550446015825589, 0.2537747934953658], 
      Point3DBox[{5, 1, 10}]}}, {
     {RGBColor[0.23618761876551964`, 0.7753679318342426, 0.03276313191536118],
       Point3DBox[{5, 2, 1}]}, 
     {RGBColor[0.21611513415596884`, 0.224135829002307, 0.8319569896353547], 
      Point3DBox[{5, 2, 2}]}, 
     {RGBColor[0.4051449394879718, 0.3522503138235904, 0.025564636233873506`],
       Point3DBox[{5, 2, 3}]}, 
     {RGBColor[0.5174466149844898, 0.30197213152166524`, 0.23811460227134984`]
      , Point3DBox[{5, 2, 4}]}, 
     {RGBColor[0.0816657948153019, 0.8227641888115353, 0.8749636620033501], 
      Point3DBox[{5, 2, 5}]}, 
     {RGBColor[0.2004665610473153, 0.9475133766883412, 0.6974605599933534], 
      Point3DBox[{5, 2, 6}]}, 
     {RGBColor[0.661171546696079, 0.11749888395904806`, 0.15170233729958515`],
       Point3DBox[{5, 2, 7}]}, 
     {RGBColor[
      0.11049529532166646`, 0.14877736104721562`, 0.7358048130123127], 
      Point3DBox[{5, 2, 8}]}, 
     {RGBColor[0.737407497838547, 0.45552174816844015`, 0.6062267499805103], 
      Point3DBox[{5, 2, 9}]}, 
     {RGBColor[0.5923144576981199, 0.4706969153724119, 0.6363436892479017], 
      Point3DBox[{5, 2, 10}]}}, {
     {RGBColor[
      0.9695076384245909, 0.19649085535494182`, 0.26675925297610714`], 
      Point3DBox[{5, 3, 1}]}, 
     {RGBColor[0.35732801742795717`, 0.4860703226862273, 0.868248632711669], 
      Point3DBox[{5, 3, 2}]}, 
     {RGBColor[
      0.024515938546016525`, 0.7848731353471816, 0.11652738337371105`], 
      Point3DBox[{5, 3, 3}]}, 
     {RGBColor[0.8638374784191307, 0.602296726081891, 0.4960055619171204], 
      Point3DBox[{5, 3, 4}]}, 
     {RGBColor[0.9247259324849288, 0.9346609595700948, 0.7795205978920956], 
      Point3DBox[{5, 3, 5}]}, 
     {RGBColor[
      0.03481675876804169, 0.7219620002176756, 0.035520466575385656`], 
      Point3DBox[{5, 3, 6}]}, 
     {RGBColor[0.32770637955804616`, 0.6394457821227555, 0.4803343335413077], 
      Point3DBox[{5, 3, 7}]}, 
     {RGBColor[0.22391408589855644`, 0.5490151921262134, 0.8436652549509303], 
      Point3DBox[{5, 3, 8}]}, 
     {RGBColor[0.769875304947496, 0.5117921211602583, 0.2867980090497677], 
      Point3DBox[{5, 3, 9}]}, 
     {RGBColor[0.8054245676577183, 0.8995007590605901, 0.08425427908158456], 
      Point3DBox[{5, 3, 10}]}}, {
     {RGBColor[0.8319507032710582, 0.9664460981849161, 0.04468295833873004], 
      Point3DBox[{5, 4, 1}]}, 
     {RGBColor[0.5962250512348461, 0.5500974394596683, 0.18613983034298753`], 
      Point3DBox[{5, 4, 2}]}, 
     {RGBColor[0.6926419493207314, 0.7273077009093982, 0.14652391621808847`], 
      Point3DBox[{5, 4, 3}]}, 
     {RGBColor[0.4065248378505504, 0.3081199639473855, 0.6957632590262295], 
      Point3DBox[{5, 4, 4}]}, 
     {RGBColor[
      0.41997691323576714`, 0.7711491937653294, 0.19105347421402374`], 
      Point3DBox[{5, 4, 5}]}, 
     {RGBColor[0.5524764412271508, 0.13406569703684967`, 0.7220734426236206], 
      Point3DBox[{5, 4, 6}]}, 
     {RGBColor[0.5185510791257837, 0.11269777529722447`, 0.06957709428445225],
       Point3DBox[{5, 4, 7}]}, 
     {RGBColor[0.5516303447697848, 0.9294115102364047, 0.277157128634137], 
      Point3DBox[{5, 4, 8}]}, 
     {RGBColor[0.6898135644470604, 0.7836427828373651, 0.6794581407127578], 
      Point3DBox[{5, 4, 9}]}, 
     {RGBColor[
      0.40324022198430876`, 0.4326932430641286, 0.29081760576128945`], 
      Point3DBox[{5, 4, 10}]}}, {
     {RGBColor[0.838508258671826, 0.8257835147982806, 0.20283959161250897`], 
      Point3DBox[{5, 5, 1}]}, 
     {RGBColor[0.5760832642803471, 0.6986284775510598, 0.15036834202757476`], 
      Point3DBox[{5, 5, 2}]}, 
     {RGBColor[
      0.004074356029455828, 0.20854810592498563`, 0.2077306818609872], 
      Point3DBox[{5, 5, 3}]}, 
     {RGBColor[
      0.37111365781015104`, 0.3598139820889126, 0.26832144069264285`], 
      Point3DBox[{5, 5, 4}]}, 
     {RGBColor[0.4576902901788935, 0.8236463490689714, 0.44070375479412016`], 
      Point3DBox[{5, 5, 5}]}, 
     {RGBColor[
      0.23285689930098608`, 0.15878571972184052`, 0.15280434506723228`], 
      Point3DBox[{5, 5, 6}]}, 
     {RGBColor[0.1820018278361808, 0.08803370422201096, 0.8358802390919693], 
      Point3DBox[{5, 5, 7}]}, 
     {RGBColor[0.6852396326562085, 0.897870189373535, 0.8672823482028711], 
      Point3DBox[{5, 5, 8}]}, 
     {RGBColor[0.3516595317827209, 0.08290496409295711, 0.39092076437450807`],
       Point3DBox[{5, 5, 9}]}, 
     {RGBColor[0.45110888459752574`, 0.771624173910048, 0.09985651426899711], 
      Point3DBox[{5, 5, 10}]}}, {
     {RGBColor[0.7823120257245018, 0.5974676030651043, 0.6302173993024902], 
      Point3DBox[{5, 6, 1}]}, 
     {RGBColor[0.24320293198133225`, 0.8375324965620723, 0.8567413150537739], 
      Point3DBox[{5, 6, 2}]}, 
     {RGBColor[
      0.18221302975038367`, 0.33682471618322496`, 0.5283277378276221], 
      Point3DBox[{5, 6, 3}]}, 
     {RGBColor[
      0.7592639056065151, 0.40990515337172506`, 0.31774650939273985`], 
      Point3DBox[{5, 6, 4}]}, 
     {RGBColor[0.9203749589337533, 0.44698072169277525`, 0.8615442262128934], 
      Point3DBox[{5, 6, 5}]}, 
     {RGBColor[0.5957694073765243, 0.4575267248313317, 0.700402856632949], 
      Point3DBox[{5, 6, 6}]}, 
     {RGBColor[0.7967688620257716, 0.4353409144118088, 0.7074205152717579], 
      Point3DBox[{5, 6, 7}]}, 
     {RGBColor[0.14556899198600748`, 0.3011167274562898, 0.8101383274444895], 
      Point3DBox[{5, 6, 8}]}, 
     {RGBColor[0.7091164520659807, 0.3935515743777944, 0.9958400564207557], 
      Point3DBox[{5, 6, 9}]}, 
     {RGBColor[
      0.019496379281500387`, 0.7352175112180022, 0.48624453083907593`], 
      Point3DBox[{5, 6, 10}]}}, {
     {RGBColor[0.4081664457794947, 0.6142668028278544, 0.5757465068138787], 
      Point3DBox[{5, 7, 1}]}, 
     {RGBColor[0.7235789186231927, 0.5621264131517183, 0.6493995281201987], 
      Point3DBox[{5, 7, 2}]}, 
     {RGBColor[0.9752458567758768, 0.6135394262377787, 0.5631395083496433], 
      Point3DBox[{5, 7, 3}]}, 
     {RGBColor[0.7317363627309625, 0.8693128304616695, 0.8584714195086345], 
      Point3DBox[{5, 7, 4}]}, 
     {RGBColor[
      0.46574751353246935`, 0.24845905742762353`, 0.9904857854125622], 
      Point3DBox[{5, 7, 5}]}, 
     {RGBColor[0.5034490325079386, 0.7185761221257827, 0.6024529754918753], 
      Point3DBox[{5, 7, 6}]}, 
     {RGBColor[0.6166814769597344, 0.2567279270141185, 0.42873069947415354`], 
      Point3DBox[{5, 7, 7}]}, 
     {RGBColor[0.13472850198777064`, 0.7609199865295688, 0.6551375873326084], 
      Point3DBox[{5, 7, 8}]}, 
     {RGBColor[0.9843472084824325, 0.07025547439871516, 0.34661388824451533`],
       Point3DBox[{5, 7, 9}]}, 
     {RGBColor[0.02236775316107731, 0.9671748694803122, 0.8257046321590762], 
      Point3DBox[{5, 7, 10}]}}, {
     {RGBColor[0.874338793781736, 0.9896675882004444, 0.7209999619543295], 
      Point3DBox[{5, 8, 1}]}, 
     {RGBColor[
      0.15928514338887445`, 0.49933976666916613`, 0.31496287059162675`], 
      Point3DBox[{5, 8, 2}]}, 
     {RGBColor[0.8641053479523879, 0.03971099820389701, 0.7086199346401116], 
      Point3DBox[{5, 8, 3}]}, 
     {RGBColor[0.3447763190587172, 0.10099109793811523`, 0.8189678696827694], 
      Point3DBox[{5, 8, 4}]}, 
     {RGBColor[0.6041863178637483, 0.1212300031539757, 0.8480249852586446], 
      Point3DBox[{5, 8, 5}]}, 
     {RGBColor[0.7804522676341801, 0.32840839487034823`, 0.7563878212602324], 
      Point3DBox[{5, 8, 6}]}, 
     {RGBColor[0.8666511700138939, 0.4818946686536951, 0.30967254775128517`], 
      Point3DBox[{5, 8, 7}]}, 
     {RGBColor[0.11162804124621939`, 0.5493361650254802, 0.9562593084969759], 
      Point3DBox[{5, 8, 8}]}, 
     {RGBColor[
      0.12376452482475253`, 0.5748427407512582, 0.24595569305283727`], 
      Point3DBox[{5, 8, 9}]}, 
     {RGBColor[0.6980120550103639, 0.5622682704306916, 0.6021351609888419], 
      Point3DBox[{5, 8, 10}]}}, {
     {RGBColor[
      0.9290608400901827, 0.23740283993843225`, 0.34788298267716544`], 
      Point3DBox[{5, 9, 1}]}, 
     {RGBColor[0.31462823561434217`, 0.7254808546295808, 0.8483284549008729], 
      Point3DBox[{5, 9, 2}]}, 
     {RGBColor[0.8607180328551078, 0.10032056132989453`, 0.4285062749897126], 
      Point3DBox[{5, 9, 3}]}, 
     {RGBColor[0.8721326728475554, 0.6814233854688787, 0.46122890878573863`], 
      Point3DBox[{5, 9, 4}]}, 
     {RGBColor[0.6560807697111644, 0.29939131124432383`, 0.321154672799866], 
      Point3DBox[{5, 9, 5}]}, 
     {RGBColor[0.7181874664407375, 0.5590951489072291, 0.001865853479548596], 
      Point3DBox[{5, 9, 6}]}, 
     {RGBColor[
      0.41080856338878324`, 0.9427425874527606, 0.19919059942721917`], 
      Point3DBox[{5, 9, 7}]}, 
     {RGBColor[0.4800884810772945, 0.6768811307967713, 0.6030128064208737], 
      Point3DBox[{5, 9, 8}]}, 
     {RGBColor[
      0.014907356117060289`, 0.1609329928760299, 0.03485987737392415], 
      Point3DBox[{5, 9, 9}]}, 
     {RGBColor[0.024233538201032356`, 0.7754674651777451, 0.4429729998199199],
       Point3DBox[{5, 9, 10}]}}, {
     {RGBColor[0.9360434093518721, 0.2626195408680072, 0.22060874037017908`], 
      Point3DBox[{5, 10, 1}]}, 
     {RGBColor[0.2313605657254738, 0.30712375338192843`, 0.7081002756083894], 
      Point3DBox[{5, 10, 2}]}, 
     {RGBColor[0.34350622169836686`, 0.5325722291763102, 0.2774524704990615], 
      Point3DBox[{5, 10, 3}]}, 
     {RGBColor[0.11562880495926242`, 0.5181381165212602, 0.2943804769373013], 
      Point3DBox[{5, 10, 4}]}, 
     {RGBColor[0.30212047463864256`, 0.2318294860975354, 0.3916908892516875], 
      Point3DBox[{5, 10, 5}]}, 
     {RGBColor[0.08569220528163712, 0.2945876433483299, 0.9575748355778027], 
      Point3DBox[{5, 10, 6}]}, 
     {RGBColor[0.6280878621277286, 0.17857255124438676`, 0.3169836460043367], 
      Point3DBox[{5, 10, 7}]}, 
     {RGBColor[0.6712587251539919, 0.7722279361320665, 0.7474635399319949], 
      Point3DBox[{5, 10, 8}]}, 
     {RGBColor[0.43350233677614014`, 0.2975156874672611, 0.09903354381589069],
       Point3DBox[{5, 10, 9}]}, 
     {RGBColor[0.811083416875841, 0.2921821068708097, 0.4332156527957256], 
      Point3DBox[{5, 10, 10}]}}}, {{
     {RGBColor[
      0.36890128478853246`, 0.29456718420782413`, 0.8286915711436702], 
      Point3DBox[{6, 1, 1}]}, 
     {RGBColor[0.4168204290892221, 0.9597675564575494, 0.05495473804177342], 
      Point3DBox[{6, 1, 2}]}, 
     {RGBColor[0.9442906715719404, 0.3305348531919088, 0.14342035446913504`], 
      Point3DBox[{6, 1, 3}]}, 
     {RGBColor[0.7318497142813603, 0.3163104193504085, 0.27205438592870923`], 
      Point3DBox[{6, 1, 4}]}, 
     {RGBColor[0.9740719831100109, 0.09936829205780362, 0.28296087810151516`],
       Point3DBox[{6, 1, 5}]}, 
     {RGBColor[0.9773597049574683, 0.27008386020658826`, 0.6089426957418649], 
      Point3DBox[{6, 1, 6}]}, 
     {RGBColor[
      0.1875752287804402, 0.12236688094081472`, 0.055607971177148885`], 
      Point3DBox[{6, 1, 7}]}, 
     {RGBColor[0.7158662078584348, 0.6811796621203916, 0.05989009175558513], 
      Point3DBox[{6, 1, 8}]}, 
     {RGBColor[0.3811985365506312, 0.8393015837874325, 0.6512480646878396], 
      Point3DBox[{6, 1, 9}]}, 
     {RGBColor[0.25394589412643365`, 0.7227909568898143, 0.5788341977317322], 
      Point3DBox[{6, 1, 10}]}}, {
     {RGBColor[0.8808060424165709, 0.4018390544057504, 0.9479910643525378], 
      Point3DBox[{6, 2, 1}]}, 
     {RGBColor[0.8467373701387972, 0.43690465328684036`, 0.7796327020964307], 
      Point3DBox[{6, 2, 2}]}, 
     {RGBColor[0.12489398338432234`, 0.8168887175644561, 0.7844933765433808], 
      Point3DBox[{6, 2, 3}]}, 
     {RGBColor[0.8403037836675045, 0.2319013578956015, 0.40478466348774833`], 
      Point3DBox[{6, 2, 4}]}, 
     {RGBColor[0.30175042851865674`, 0.05023153115705048, 0.4631618676942193],
       Point3DBox[{6, 2, 5}]}, 
     {RGBColor[0.7844568148034838, 0.1406734540512573, 0.3482509131932199], 
      Point3DBox[{6, 2, 6}]}, 
     {RGBColor[0.11179958925568245`, 0.4313134762128492, 0.7239756119788547], 
      Point3DBox[{6, 2, 7}]}, 
     {RGBColor[0.6480986709019807, 0.3400289757071824, 0.32831857405767684`], 
      Point3DBox[{6, 2, 8}]}, 
     {RGBColor[
      0.12915136697922192`, 0.7991144649567956, 0.36056364201961255`], 
      Point3DBox[{6, 2, 9}]}, 
     {RGBColor[0.8988454308743763, 0.4734065874344209, 0.38351275022878384`], 
      Point3DBox[{6, 2, 10}]}}, {
     {RGBColor[
      0.47196941246121127`, 0.15974658104288952`, 0.7157553698353261], 
      Point3DBox[{6, 3, 1}]}, 
     {RGBColor[0.8388284513100912, 0.05427088492259502, 0.3000457364994782], 
      Point3DBox[{6, 3, 2}]}, 
     {RGBColor[
      0.12186670764777463`, 0.9069091108202123, 0.046795913213582896`], 
      Point3DBox[{6, 3, 3}]}, 
     {RGBColor[0.027029535759108603`, 0.6835830312429549, 0.8144986949731594],
       Point3DBox[{6, 3, 4}]}, 
     {RGBColor[0.20323315613382875`, 0.4127116316307182, 0.6087735394746434], 
      Point3DBox[{6, 3, 5}]}, 
     {RGBColor[0.989318871923049, 0.3524838578635394, 0.3584005220393158], 
      Point3DBox[{6, 3, 6}]}, 
     {RGBColor[0.7872699709316675, 0.9082964306308308, 0.65949826701331], 
      Point3DBox[{6, 3, 7}]}, 
     {RGBColor[0.7332116073985717, 0.6625041279284278, 0.5762778027571949], 
      Point3DBox[{6, 3, 8}]}, 
     {RGBColor[0.4534550292649566, 0.9344206888628428, 0.46977056701747477`], 
      Point3DBox[{6, 3, 9}]}, 
     {RGBColor[0.5668132522580969, 0.34163607715477307`, 0.7003667775795699], 
      Point3DBox[{6, 3, 10}]}}, {
     {RGBColor[0.5754770893042092, 0.8835765520687622, 0.998704532524231], 
      Point3DBox[{6, 4, 1}]}, 
     {RGBColor[0.8380857149711178, 0.597871986515021, 0.0025330759113166845`],
       Point3DBox[{6, 4, 2}]}, 
     {RGBColor[0.9517871412011834, 0.8678924188515658, 0.7775328042361058], 
      Point3DBox[{6, 4, 3}]}, 
     {RGBColor[
      0.3885442378588473, 0.23050653661935305`, 0.47003794438247826`], 
      Point3DBox[{6, 4, 4}]}, 
     {RGBColor[0.44750341553407824`, 0.5043508939239731, 0.8060374754728856], 
      Point3DBox[{6, 4, 5}]}, 
     {RGBColor[0.27360785663568143`, 0.3673701144480255, 0.7759088453313652], 
      Point3DBox[{6, 4, 6}]}, 
     {RGBColor[0.7802124657402909, 0.6782011038817664, 0.008647344498307508], 
      Point3DBox[{6, 4, 7}]}, 
     {RGBColor[0.16389843858513498`, 0.5120657561459263, 0.7481515611801726], 
      Point3DBox[{6, 4, 8}]}, 
     {RGBColor[0.39585210616844835`, 0.5507702128775778, 0.4752608060871375], 
      Point3DBox[{6, 4, 9}]}, 
     {RGBColor[0.3572653986647645, 0.1825386517707357, 0.53665838718931], 
      Point3DBox[{6, 4, 10}]}}, {
     {RGBColor[
      0.2649022550091884, 0.10182006460495696`, 0.023241333208489756`], 
      Point3DBox[{6, 5, 1}]}, 
     {RGBColor[
      0.41267270671601564`, 0.42995140970082746`, 0.9474406815295444], 
      Point3DBox[{6, 5, 2}]}, 
     {RGBColor[
      0.014398169411557804`, 0.13872353361536915`, 0.24990605151919265`], 
      Point3DBox[{6, 5, 3}]}, 
     {RGBColor[0.3499195875792054, 0.049281429361646145`, 0.6706150532256807],
       Point3DBox[{6, 5, 4}]}, 
     {RGBColor[0.953724058277889, 0.3492200791295834, 0.15103536651327842`], 
      Point3DBox[{6, 5, 5}]}, 
     {RGBColor[0.3897647579163581, 0.6461931076100818, 0.5681370473332195], 
      Point3DBox[{6, 5, 6}]}, 
     {RGBColor[0.8302035113385198, 0.9184025854118714, 0.33104070277927944`], 
      Point3DBox[{6, 5, 7}]}, 
     {RGBColor[0.3062167343083979, 0.43151021321364347`, 0.08127880397994525],
       Point3DBox[{6, 5, 8}]}, 
     {RGBColor[0.5917258458876222, 0.6266195987127794, 0.2694668603841679], 
      Point3DBox[{6, 5, 9}]}, 
     {RGBColor[0.8392996984433401, 0.9589377263162044, 0.8911535835239206], 
      Point3DBox[{6, 5, 10}]}}, {
     {RGBColor[0.04495737852148607, 0.6247047082567256, 0.4901653839346545], 
      Point3DBox[{6, 6, 1}]}, 
     {RGBColor[0.8603689160450296, 0.06917850361117761, 0.8955264601661463], 
      Point3DBox[{6, 6, 2}]}, 
     {RGBColor[0.8243023933785121, 0.4633509933930098, 0.9164258613726994], 
      Point3DBox[{6, 6, 3}]}, 
     {RGBColor[0.0418862652721812, 0.36521032130921527`, 0.4088532787821566], 
      Point3DBox[{6, 6, 4}]}, 
     {RGBColor[0.523652335577852, 0.9871474366390303, 0.815360868592995], 
      Point3DBox[{6, 6, 5}]}, 
     {RGBColor[0.5331701465619265, 0.6497472010520049, 0.9711407209242728], 
      Point3DBox[{6, 6, 6}]}, 
     {RGBColor[0.04194906710260615, 0.6665827525466061, 0.7610275064125172], 
      Point3DBox[{6, 6, 7}]}, 
     {RGBColor[0.4078030109265296, 0.14430222072595522`, 0.6053259276709948], 
      Point3DBox[{6, 6, 8}]}, 
     {RGBColor[
      0.9773904633657042, 0.47936406881093285`, 0.36741952925478016`], 
      Point3DBox[{6, 6, 9}]}, 
     {RGBColor[0.6560318741565121, 0.8771192442536901, 0.01635728665162728], 
      Point3DBox[{6, 6, 10}]}}, {
     {RGBColor[0.8466805760074938, 0.6071273047207806, 0.3621386064764702], 
      Point3DBox[{6, 7, 1}]}, 
     {RGBColor[0.2575362687670415, 0.9558887001999044, 0.6422562493035469], 
      Point3DBox[{6, 7, 2}]}, 
     {RGBColor[0.6058651576497167, 0.9932085564179935, 0.9867276966028058], 
      Point3DBox[{6, 7, 3}]}, 
     {RGBColor[0.6021520684474735, 0.4910620032946311, 0.19439409094202253`], 
      Point3DBox[{6, 7, 4}]}, 
     {RGBColor[0.7551566397108342, 0.6110664241592196, 0.0637428556564521], 
      Point3DBox[{6, 7, 5}]}, 
     {RGBColor[0.7510629171818128, 0.5331472551906169, 0.02700210206756104], 
      Point3DBox[{6, 7, 6}]}, 
     {RGBColor[0.6530001197290847, 0.20137413432919415`, 0.2658253223556528], 
      Point3DBox[{6, 7, 7}]}, 
     {RGBColor[0.8056508017800021, 0.9258331366548738, 0.95343471676877], 
      Point3DBox[{6, 7, 8}]}, 
     {RGBColor[
      0.20763055047751688`, 0.1612104642326544, 0.011140215478446569`], 
      Point3DBox[{6, 7, 9}]}, 
     {RGBColor[0.1711051661999463, 0.9143151086760228, 0.2240949535900667], 
      Point3DBox[{6, 7, 10}]}}, {
     {RGBColor[0.8447266106005915, 0.7582186335591363, 0.0965970817738897], 
      Point3DBox[{6, 8, 1}]}, 
     {RGBColor[0.7892496605783632, 0.1478345303171773, 0.6242710789582664], 
      Point3DBox[{6, 8, 2}]}, 
     {RGBColor[
      0.2673072171773099, 0.44357775317847103`, 0.28739678691045656`], 
      Point3DBox[{6, 8, 3}]}, 
     {RGBColor[
      0.024990283788183243`, 0.35746236400295395`, 0.3972851529249932], 
      Point3DBox[{6, 8, 4}]}, 
     {RGBColor[0.24512674249185284`, 0.3692877811409079, 0.8483051651609417], 
      Point3DBox[{6, 8, 5}]}, 
     {RGBColor[0.8588833504081128, 0.9982431655258819, 0.3855518118089536], 
      Point3DBox[{6, 8, 6}]}, 
     {RGBColor[0.6673058623422201, 0.8340580544447358, 0.9438597372058026], 
      Point3DBox[{6, 8, 7}]}, 
     {RGBColor[0.29209124631218897`, 0.1989928016419995, 0.9148753723639198], 
      Point3DBox[{6, 8, 8}]}, 
     {RGBColor[
      0.11079650139676289`, 0.4246818734590221, 0.27949559658846024`], 
      Point3DBox[{6, 8, 9}]}, 
     {RGBColor[0.9466447105616682, 0.8715562999695714, 0.9482955150840677], 
      Point3DBox[{6, 8, 10}]}}, {
     {RGBColor[0.5643065779873804, 0.4198057192338609, 0.9426828809647347], 
      Point3DBox[{6, 9, 1}]}, 
     {RGBColor[0.35527393826900955`, 0.57286542565062, 0.6535833168651322], 
      Point3DBox[{6, 9, 2}]}, 
     {RGBColor[0.4971407921809796, 0.7704853178099333, 0.753346899838728], 
      Point3DBox[{6, 9, 3}]}, 
     {RGBColor[
      0.23675307906918497`, 0.00013886879933422414`, 0.9322055278159977], 
      Point3DBox[{6, 9, 4}]}, 
     {RGBColor[0.838957089886033, 0.05768943148154593, 0.8537523904885014], 
      Point3DBox[{6, 9, 5}]}, 
     {RGBColor[
      0.7146902797534622, 0.42570296262138196`, 0.35081474368913534`], 
      Point3DBox[{6, 9, 6}]}, 
     {RGBColor[0.0815116125287767, 0.12738305727373067`, 0.4224956383912062], 
      Point3DBox[{6, 9, 7}]}, 
     {RGBColor[0.00911027055093494, 0.5638353205951729, 0.7118293333405308], 
      Point3DBox[{6, 9, 8}]}, 
     {RGBColor[0.714722378883454, 0.8277908501348719, 0.988622733767557], 
      Point3DBox[{6, 9, 9}]}, 
     {RGBColor[0.5549466263865357, 0.1056472314388075, 0.1659518622616576], 
      Point3DBox[{6, 9, 10}]}}, {
     {RGBColor[
      0.5843277460234704, 0.30960587651665405`, 0.31004849116440414`], 
      Point3DBox[{6, 10, 1}]}, 
     {RGBColor[
      0.8923715149363944, 0.3579534165428724, 0.0016126216369702906`], 
      Point3DBox[{6, 10, 2}]}, 
     {RGBColor[0.9508586773913617, 0.6906989294712795, 0.7254884729510436], 
      Point3DBox[{6, 10, 3}]}, 
     {RGBColor[0.9069677208092461, 0.3300927505793503, 0.248061006330909], 
      Point3DBox[{6, 10, 4}]}, 
     {RGBColor[
      0.11588158627609069`, 0.24528735115657985`, 0.06685730910827758], 
      Point3DBox[{6, 10, 5}]}, 
     {RGBColor[0.7564644194108086, 0.26869885432437424`, 0.7137481921766653], 
      Point3DBox[{6, 10, 6}]}, 
     {RGBColor[0.2092979466400462, 0.44666136321069483`, 0.2804115162092038], 
      Point3DBox[{6, 10, 7}]}, 
     {RGBColor[0.8253267645688627, 0.39541799807015887`, 0.7994141725962263], 
      Point3DBox[{6, 10, 8}]}, 
     {RGBColor[0.3364371960962509, 0.0555455703810519, 0.28529764371570643`], 
      Point3DBox[{6, 10, 9}]}, 
     {RGBColor[0.34871782489142555`, 0.3609221088501553, 0.7467370920796064], 
      Point3DBox[{6, 10, 10}]}}}, {{
     {RGBColor[0.1380574591053645, 0.7224425379879034, 0.24208860033735968`], 
      Point3DBox[{7, 1, 1}]}, 
     {RGBColor[
      0.9333973610013975, 0.03276280884085536, 0.034878518272346115`], 
      Point3DBox[{7, 1, 2}]}, 
     {RGBColor[0.2426823035073571, 0.6689224707384134, 0.37572528497358015`], 
      Point3DBox[{7, 1, 3}]}, 
     {RGBColor[0.5615181037588364, 0.3558059420142965, 0.1652664745871646], 
      Point3DBox[{7, 1, 4}]}, 
     {RGBColor[0.3018431729700486, 0.737393358103013, 0.40145592660702567`], 
      Point3DBox[{7, 1, 5}]}, 
     {RGBColor[0.20192536924955018`, 0.8732600497448886, 0.7220215901696649], 
      Point3DBox[{7, 1, 6}]}, 
     {RGBColor[0.8313324700422673, 0.7411106648939789, 0.1389762102730019], 
      Point3DBox[{7, 1, 7}]}, 
     {RGBColor[0.9546210385056118, 0.9282692781820219, 0.07160417612149783], 
      Point3DBox[{7, 1, 8}]}, 
     {RGBColor[0.9299410163064741, 0.3253633833870726, 0.972749872168684], 
      Point3DBox[{7, 1, 9}]}, 
     {RGBColor[0.3464237686928118, 0.790354378037462, 0.36370695780592754`], 
      Point3DBox[{7, 1, 10}]}}, {
     {RGBColor[0.2801040477449577, 0.7361863327318796, 0.6125760503863396], 
      Point3DBox[{7, 2, 1}]}, 
     {RGBColor[0.9455329515390072, 0.42996703907894984`, 0.9174103857187046], 
      Point3DBox[{7, 2, 2}]}, 
     {RGBColor[0.5158961554952661, 0.4606625268806732, 0.7708554121503177], 
      Point3DBox[{7, 2, 3}]}, 
     {RGBColor[
      0.48535530771166346`, 0.33392675599884236`, 0.7596991842985086], 
      Point3DBox[{7, 2, 4}]}, 
     {RGBColor[0.1610088301860637, 0.9028244029891581, 0.26419424892863774`], 
      Point3DBox[{7, 2, 5}]}, 
     {RGBColor[
      0.14305679945474314`, 0.16351562209297055`, 0.8651150610092366], 
      Point3DBox[{7, 2, 6}]}, 
     {RGBColor[0.4503101893618573, 0.3454023949536851, 0.06168755713968066], 
      Point3DBox[{7, 2, 7}]}, 
     {RGBColor[0.05676675959807698, 0.248726869606253, 0.2730909127894354], 
      Point3DBox[{7, 2, 8}]}, 
     {RGBColor[0.5989613669564968, 0.509766766930309, 0.49563829782003643`], 
      Point3DBox[{7, 2, 9}]}, 
     {RGBColor[0.4307742099291392, 0.6430165377548331, 0.8297733962238556], 
      Point3DBox[{7, 2, 10}]}}, {
     {RGBColor[0.7526260802952949, 0.07896994472879149, 0.8130361588500066], 
      Point3DBox[{7, 3, 1}]}, 
     {RGBColor[
      0.27041114175122494`, 0.018913891177690045`, 0.01800740173524673], 
      Point3DBox[{7, 3, 2}]}, 
     {RGBColor[
      0.6218792239424853, 0.39546191691410937`, 0.30138687924361096`], 
      Point3DBox[{7, 3, 3}]}, 
     {RGBColor[0.7058363626992292, 0.7324844032947144, 0.21113312916232818`], 
      Point3DBox[{7, 3, 4}]}, 
     {RGBColor[
      0.32671603833297436`, 0.7125379583709242, 0.40255655832404513`], 
      Point3DBox[{7, 3, 5}]}, 
     {RGBColor[0.9404458352757195, 0.10985911035541185`, 0.5378587343868355], 
      Point3DBox[{7, 3, 6}]}, 
     {RGBColor[0.40401222375758405`, 0.09818694533739691, 0.6721053425345636],
       Point3DBox[{7, 3, 7}]}, 
     {RGBColor[0.10335826642302837`, 0.99109414050746, 0.1466682699207269], 
      Point3DBox[{7, 3, 8}]}, 
     {RGBColor[0.2953319004810895, 0.8294258430579127, 0.5180488457777992], 
      Point3DBox[{7, 3, 9}]}, 
     {RGBColor[0.6477697685495329, 0.735344912002301, 0.8030002808830334], 
      Point3DBox[{7, 3, 10}]}}, {
     {RGBColor[0.7025669377806947, 0.3702515245629756, 0.193474263858588], 
      Point3DBox[{7, 4, 1}]}, 
     {RGBColor[0.6452022510285909, 0.7561311766604335, 0.9034030935854427], 
      Point3DBox[{7, 4, 2}]}, 
     {RGBColor[0.6074438457716722, 0.6390474188441744, 0.908984807879907], 
      Point3DBox[{7, 4, 3}]}, 
     {RGBColor[0.749837189424412, 0.3356919667715985, 0.8491209932301791], 
      Point3DBox[{7, 4, 4}]}, 
     {RGBColor[0.8498498880303225, 0.5130813931359373, 0.16697787689803523`], 
      Point3DBox[{7, 4, 5}]}, 
     {RGBColor[0.6778945143725448, 0.46744776590725867`, 0.0916154198065251], 
      Point3DBox[{7, 4, 6}]}, 
     {RGBColor[0.9024633914423192, 0.060995038318439, 0.005020631744516502], 
      Point3DBox[{7, 4, 7}]}, 
     {RGBColor[
      0.22645114236681807`, 0.5996693981293282, 0.40221438809465915`], 
      Point3DBox[{7, 4, 8}]}, 
     {RGBColor[
      0.35917423890615585`, 0.6821126336340888, 0.34031280184584367`], 
      Point3DBox[{7, 4, 9}]}, 
     {RGBColor[
      0.07504088978948498, 0.03178778859039477, 0.016299731714581878`], 
      Point3DBox[{7, 4, 10}]}}, {
     {RGBColor[0.42460435484295167`, 0.9082648775754003, 0.01890723298719421],
       Point3DBox[{7, 5, 1}]}, 
     {RGBColor[0.1453261787106377, 0.5157789499567107, 0.9744337248431589], 
      Point3DBox[{7, 5, 2}]}, 
     {RGBColor[0.2613016515661639, 0.06877545505733251, 0.10741972506407005`],
       Point3DBox[{7, 5, 3}]}, 
     {RGBColor[0.5528140720957262, 0.8063195210234049, 0.3938954288765608], 
      Point3DBox[{7, 5, 4}]}, 
     {RGBColor[0.4326794483382681, 0.014947736640383624`, 0.2820961960031576],
       Point3DBox[{7, 5, 5}]}, 
     {RGBColor[0.3949855147088026, 0.933706565799352, 0.6826613534515731], 
      Point3DBox[{7, 5, 6}]}, 
     {RGBColor[0.9804526778502121, 0.021246456037165018`, 0.9006584560151052],
       Point3DBox[{7, 5, 7}]}, 
     {RGBColor[
      0.46140235439733734`, 0.39384736731024317`, 0.8193211106987484], 
      Point3DBox[{7, 5, 8}]}, 
     {RGBColor[0.6668222254225447, 0.605604052096758, 0.09136032450358877], 
      Point3DBox[{7, 5, 9}]}, 
     {RGBColor[0.4159158680653283, 0.2739740348364985, 0.8621853444143139], 
      Point3DBox[{7, 5, 10}]}}, {
     {RGBColor[0.904607564242494, 0.7671578496435785, 0.4575129356676746], 
      Point3DBox[{7, 6, 1}]}, 
     {RGBColor[0.9802173951027873, 0.6818246461575079, 0.16287162414814804`], 
      Point3DBox[{7, 6, 2}]}, 
     {RGBColor[
      0.4646814826255037, 0.25236292689277473`, 0.026210723505319944`], 
      Point3DBox[{7, 6, 3}]}, 
     {RGBColor[0.8794524483851993, 0.3486496306181446, 0.9082814509692867], 
      Point3DBox[{7, 6, 4}]}, 
     {RGBColor[0.9362571778879782, 0.18293039108187248`, 0.4785722404038746], 
      Point3DBox[{7, 6, 5}]}, 
     {RGBColor[0.6090765126659106, 0.4086790349941891, 0.9005715377889039], 
      Point3DBox[{7, 6, 6}]}, 
     {RGBColor[0.8488097925161453, 0.8305036863826067, 0.6463976224508499], 
      Point3DBox[{7, 6, 7}]}, 
     {RGBColor[0.43979754070046795`, 0.6194918317799669, 0.8835532741948777], 
      Point3DBox[{7, 6, 8}]}, 
     {RGBColor[
      0.049369021466566965`, 0.6383510724658144, 0.26324553229813485`], 
      Point3DBox[{7, 6, 9}]}, 
     {RGBColor[0.6458130697531801, 0.8366529727088172, 0.23076964688581914`], 
      Point3DBox[{7, 6, 10}]}}, {
     {RGBColor[0.09198007445738732, 0.3523039328973818, 0.7789987587078679], 
      Point3DBox[{7, 7, 1}]}, 
     {RGBColor[0.16223531029551785`, 0.4154525826462774, 0.9050811642839731], 
      Point3DBox[{7, 7, 2}]}, 
     {RGBColor[0.450457459383949, 0.5735877754982721, 0.18225880074236267`], 
      Point3DBox[{7, 7, 3}]}, 
     {RGBColor[
      0.3280681606205449, 0.40569254693859635`, 0.18606564181428764`], 
      Point3DBox[{7, 7, 4}]}, 
     {RGBColor[0.6813523993730175, 0.6864104211897348, 0.29778769047128506`], 
      Point3DBox[{7, 7, 5}]}, 
     {RGBColor[0.5196242066440637, 0.2658178485001583, 0.5479862949328815], 
      Point3DBox[{7, 7, 6}]}, 
     {RGBColor[0.5789334538244886, 0.5044533036474845, 0.32184165408721443`], 
      Point3DBox[{7, 7, 7}]}, 
     {RGBColor[0.8695711171562202, 0.08604191105359371, 0.8254418440285458], 
      Point3DBox[{7, 7, 8}]}, 
     {RGBColor[0.7190494331581427, 0.13144636933675402`, 0.1826506827010419], 
      Point3DBox[{7, 7, 9}]}, 
     {RGBColor[0.4558955216159444, 0.5922475783887886, 0.4419930421621632], 
      Point3DBox[{7, 7, 10}]}}, {
     {RGBColor[0.183241767756255, 0.8199432170081802, 0.3471054526857218], 
      Point3DBox[{7, 8, 1}]}, 
     {RGBColor[0.2771118093806253, 0.6844975953205683, 0.05506237889069987], 
      Point3DBox[{7, 8, 2}]}, 
     {RGBColor[
      0.21186279755554605`, 0.12036179256190538`, 0.30138688296247507`], 
      Point3DBox[{7, 8, 3}]}, 
     {RGBColor[
      0.9178770805509149, 0.42359462349436194`, 0.15037975915813018`], 
      Point3DBox[{7, 8, 4}]}, 
     {RGBColor[0.7869708959485924, 0.6279185507667129, 0.8195227775444109], 
      Point3DBox[{7, 8, 5}]}, 
     {RGBColor[0.36146018412607095`, 0.35555804384981715`, 0.68482879727476], 
      Point3DBox[{7, 8, 6}]}, 
     {RGBColor[0.01909453864908861, 0.7087320148876715, 0.1991607541541902], 
      Point3DBox[{7, 8, 7}]}, 
     {RGBColor[
      0.2095521195296024, 0.47745634020332495`, 0.047327358938639374`], 
      Point3DBox[{7, 8, 8}]}, 
     {RGBColor[0.7706629221815953, 0.8147491827874798, 0.6562325390010424], 
      Point3DBox[{7, 8, 9}]}, 
     {RGBColor[
      0.29844735345220585`, 0.24743884050555742`, 0.17974145443888867`], 
      Point3DBox[{7, 8, 10}]}}, {
     {RGBColor[0.4719533300323526, 0.8186354482158296, 0.4064704690353498], 
      Point3DBox[{7, 9, 1}]}, 
     {RGBColor[0.8348710255923866, 0.08115073412510254, 0.7774997624887507], 
      Point3DBox[{7, 9, 2}]}, 
     {RGBColor[0.14117148933806356`, 0.09592861940854003, 0.9109844454657141],
       Point3DBox[{7, 9, 3}]}, 
     {RGBColor[0.4192052860996536, 0.27788207475272597`, 0.3342206432440509], 
      Point3DBox[{7, 9, 4}]}, 
     {RGBColor[0.23031509906494096`, 0.8423936459091483, 0.5260954799292035], 
      Point3DBox[{7, 9, 5}]}, 
     {RGBColor[0.02240787500393937, 0.9708068531318863, 0.6643209028203154], 
      Point3DBox[{7, 9, 6}]}, 
     {RGBColor[0.456873560273533, 0.2768096175275958, 0.413261910093909], 
      Point3DBox[{7, 9, 7}]}, 
     {RGBColor[
      0.32955422774663945`, 0.5381283156951502, 0.005881704838381241], 
      Point3DBox[{7, 9, 8}]}, 
     {RGBColor[0.6339999947816672, 0.7096816595675113, 0.819864881707238], 
      Point3DBox[{7, 9, 9}]}, 
     {RGBColor[
      0.28968238483514663`, 0.3777385401839728, 0.20175893755381735`], 
      Point3DBox[{7, 9, 10}]}}, {
     {RGBColor[
      0.8183587050676144, 0.39696562612346264`, 0.0032637579064389577`], 
      Point3DBox[{7, 10, 1}]}, 
     {RGBColor[0.8745755703182143, 0.39417048757782114`, 0.1334693907106026], 
      Point3DBox[{7, 10, 2}]}, 
     {RGBColor[0.1843781414691965, 0.7711846875310351, 0.10007428351451608`], 
      Point3DBox[{7, 10, 3}]}, 
     {RGBColor[0.5712545894338137, 0.3190412212036957, 0.17802946723468938`], 
      Point3DBox[{7, 10, 4}]}, 
     {RGBColor[0.7564883841529451, 0.5700560035587845, 0.5170726835734905], 
      Point3DBox[{7, 10, 5}]}, 
     {RGBColor[0.7221924640656805, 0.19673911556249712`, 0.2888579134449998], 
      Point3DBox[{7, 10, 6}]}, 
     {RGBColor[0.859685714030286, 0.6510564328719346, 0.2826493408600437], 
      Point3DBox[{7, 10, 7}]}, 
     {RGBColor[
      0.2071892737213401, 0.0036533053720306796`, 0.7024614594457776], 
      Point3DBox[{7, 10, 8}]}, 
     {RGBColor[0.9682988062215303, 0.7761602711025781, 0.45333133423968186`], 
      Point3DBox[{7, 10, 9}]}, 
     {RGBColor[0.9692054068529041, 0.18072299200766828`, 0.9098423498542587], 
      Point3DBox[{7, 10, 10}]}}}, {{
     {RGBColor[0.5837160764286029, 0.4774926824729504, 0.3427875393314841], 
      Point3DBox[{8, 1, 1}]}, 
     {RGBColor[0.5715755577357711, 0.6861741320996726, 0.926383561739329], 
      Point3DBox[{8, 1, 2}]}, 
     {RGBColor[
      0.46392508097560126`, 0.05269107279523033, 0.41073751905738276`], 
      Point3DBox[{8, 1, 3}]}, 
     {RGBColor[0.24253468044052306`, 0.5113566443338589, 0.4447778582202415], 
      Point3DBox[{8, 1, 4}]}, 
     {RGBColor[0.7572779557601659, 0.15430603821616495`, 0.1188991917456379], 
      Point3DBox[{8, 1, 5}]}, 
     {RGBColor[0.008229226045413984, 0.9840753371857331, 0.06490823507947674],
       Point3DBox[{8, 1, 6}]}, 
     {RGBColor[0.08480513752018637, 0.08097375366638038, 0.614309928791053], 
      Point3DBox[{8, 1, 7}]}, 
     {RGBColor[
      0.2643226695987182, 0.43986906600269493`, 0.33828932027697434`], 
      Point3DBox[{8, 1, 8}]}, 
     {RGBColor[0.8290121914636523, 0.8139509605343094, 0.4549986855918873], 
      Point3DBox[{8, 1, 9}]}, 
     {RGBColor[0.7090735942657553, 0.7347188109212421, 0.07657188027355022], 
      Point3DBox[{8, 1, 10}]}}, {
     {RGBColor[
      0.23214321683609995`, 0.46118819746762574`, 0.17466440581653697`], 
      Point3DBox[{8, 2, 1}]}, 
     {RGBColor[
      0.5594789457058411, 0.10269164375163586`, 0.27246541071571895`], 
      Point3DBox[{8, 2, 2}]}, 
     {RGBColor[0.4992299292005822, 0.7776136202300823, 0.37460390894503437`], 
      Point3DBox[{8, 2, 3}]}, 
     {RGBColor[0.21929877494826888`, 0.7681606467658217, 0.3408945379301862], 
      Point3DBox[{8, 2, 4}]}, 
     {RGBColor[0.051996722275763796`, 0.7080807469027077, 0.5828436346592283],
       Point3DBox[{8, 2, 5}]}, 
     {RGBColor[0.4520601702618148, 0.26116059268293745`, 0.8782616383292561], 
      Point3DBox[{8, 2, 6}]}, 
     {RGBColor[0.2217923927769081, 0.4792054333893476, 0.019605273787792976`],
       Point3DBox[{8, 2, 7}]}, 
     {RGBColor[0.2869699431284538, 0.7063298651247933, 0.5428096331296095], 
      Point3DBox[{8, 2, 8}]}, 
     {RGBColor[0.41283709733845453`, 0.2192003537584244, 0.2355135669269517], 
      Point3DBox[{8, 2, 9}]}, 
     {RGBColor[0.23440196809984037`, 0.6624172294892763, 0.5700462626740486], 
      Point3DBox[{8, 2, 10}]}}, {
     {RGBColor[
      0.016102395962868554`, 0.35975304119555807`, 0.03794207471826394], 
      Point3DBox[{8, 3, 1}]}, 
     {RGBColor[0.3452860675556755, 0.608688339770088, 0.5753256990406836], 
      Point3DBox[{8, 3, 2}]}, 
     {RGBColor[0.40955778569458046`, 0.2726548358497225, 0.8319467607370354], 
      Point3DBox[{8, 3, 3}]}, 
     {RGBColor[0.6692408973936015, 0.4407920363093234, 0.5544793739297571], 
      Point3DBox[{8, 3, 4}]}, 
     {RGBColor[0.7501409229648435, 0.38345359652064426`, 0.6037899789565631], 
      Point3DBox[{8, 3, 5}]}, 
     {RGBColor[
      0.11325456227900643`, 0.5569485165340151, 0.13362114170783146`], 
      Point3DBox[{8, 3, 6}]}, 
     {RGBColor[
      0.34830622326823013`, 0.6743026914923171, 0.030891515499413824`], 
      Point3DBox[{8, 3, 7}]}, 
     {RGBColor[0.8696763925980904, 0.7640177201604756, 0.6110304074028121], 
      Point3DBox[{8, 3, 8}]}, 
     {RGBColor[
      0.28645350672668934`, 0.9463327464384079, 0.36103868700223973`], 
      Point3DBox[{8, 3, 9}]}, 
     {RGBColor[0.8864307921258614, 0.2782029392932297, 0.44987709623668315`], 
      Point3DBox[{8, 3, 10}]}}, {
     {RGBColor[
      0.21090865098749778`, 0.1763693210215056, 0.33628524851000696`], 
      Point3DBox[{8, 4, 1}]}, 
     {RGBColor[0.8037942492147212, 0.39655716882259795`, 0.4318737637217662], 
      Point3DBox[{8, 4, 2}]}, 
     {RGBColor[0.9024151889486802, 0.4174296923788159, 0.809495365376707], 
      Point3DBox[{8, 4, 3}]}, 
     {RGBColor[
      0.7073698515778706, 0.16409891391531994`, 0.11843074872307868`], 
      Point3DBox[{8, 4, 4}]}, 
     {RGBColor[0.0717080012027389, 0.1375331598070113, 0.08954065164894498], 
      Point3DBox[{8, 4, 5}]}, 
     {RGBColor[
      0.35476035119302396`, 0.21365162308105856`, 0.9039849804177174], 
      Point3DBox[{8, 4, 6}]}, 
     {RGBColor[0.4269842488220148, 0.448292983524625, 0.47219687265103083`], 
      Point3DBox[{8, 4, 7}]}, 
     {RGBColor[0.8262728773286176, 0.5575696317559049, 0.9961600018888892], 
      Point3DBox[{8, 4, 8}]}, 
     {RGBColor[0.814060867872048, 0.3124641722468675, 0.6356683927735585], 
      Point3DBox[{8, 4, 9}]}, 
     {RGBColor[0.2142352456101717, 0.9320305225307697, 0.32273197502457807`], 
      Point3DBox[{8, 4, 10}]}}, {
     {RGBColor[0.4575299487358271, 0.17339287532889136`, 0.4554593137013412], 
      Point3DBox[{8, 5, 1}]}, 
     {RGBColor[0.27938125816875603`, 0.5582555501457798, 0.3690351623997823], 
      Point3DBox[{8, 5, 2}]}, 
     {RGBColor[0.18476241505087732`, 0.09430542516235207, 0.8664046708534163],
       Point3DBox[{8, 5, 3}]}, 
     {RGBColor[0.3565673345385203, 0.05596361418800644, 0.5726281237989381], 
      Point3DBox[{8, 5, 4}]}, 
     {RGBColor[0.2032396905463003, 0.4493037394371935, 0.6846795775011421], 
      Point3DBox[{8, 5, 5}]}, 
     {RGBColor[0.14354421252764693`, 0.7900097302888833, 0.7393256947779887], 
      Point3DBox[{8, 5, 6}]}, 
     {RGBColor[0.7736379987711481, 0.8287428050641525, 0.8594002510821144], 
      Point3DBox[{8, 5, 7}]}, 
     {RGBColor[0.9789097032699619, 0.08035222338110315, 0.36894976575252025`],
       Point3DBox[{8, 5, 8}]}, 
     {RGBColor[0.42592271459466025`, 0.702154115312638, 0.5322184234315324], 
      Point3DBox[{8, 5, 9}]}, 
     {RGBColor[0.17147663587235829`, 0.5727190631137735, 0.8588632227490514], 
      Point3DBox[{8, 5, 10}]}}, {
     {RGBColor[0.764058011620556, 0.5876051142061371, 0.006674490828592727], 
      Point3DBox[{8, 6, 1}]}, 
     {RGBColor[0.4846854213325842, 0.885599236081883, 0.6395228317024146], 
      Point3DBox[{8, 6, 2}]}, 
     {RGBColor[0.36621564947091456`, 0.543810356744215, 0.22105592218446968`],
       Point3DBox[{8, 6, 3}]}, 
     {RGBColor[0.6264197696021441, 0.507587121202042, 0.02858365302070287], 
      Point3DBox[{8, 6, 4}]}, 
     {RGBColor[
      0.16486675049524013`, 0.47505385086886176`, 0.5600550329392613], 
      Point3DBox[{8, 6, 5}]}, 
     {RGBColor[0.8088170994227621, 0.6633429174389374, 0.9526237096576131], 
      Point3DBox[{8, 6, 6}]}, 
     {RGBColor[0.19177037840235855`, 0.03008832355834401, 0.8354068915612511],
       Point3DBox[{8, 6, 7}]}, 
     {RGBColor[
      0.14237373628740202`, 0.8333254677454185, 0.42967239336583174`], 
      Point3DBox[{8, 6, 8}]}, 
     {RGBColor[0.8721124802358016, 0.2819133214935021, 0.3275604196812911], 
      Point3DBox[{8, 6, 9}]}, 
     {RGBColor[0.7440005479363596, 0.20163657184065586`, 0.9565273420779699], 
      Point3DBox[{8, 6, 10}]}}, {
     {RGBColor[0.9740270633086399, 0.9679769418416635, 0.22621131348120027`], 
      Point3DBox[{8, 7, 1}]}, 
     {RGBColor[0.28319740678223626`, 0.0587994519632733, 0.9585510535673574], 
      Point3DBox[{8, 7, 2}]}, 
     {RGBColor[0.8096618053740303, 0.18875071855743242`, 0.2521379099091152], 
      Point3DBox[{8, 7, 3}]}, 
     {RGBColor[0.7577124013524816, 0.5491325197977039, 0.9879018279150946], 
      Point3DBox[{8, 7, 4}]}, 
     {RGBColor[0.15980987490070908`, 0.363511388400932, 0.5711518224797181], 
      Point3DBox[{8, 7, 5}]}, 
     {RGBColor[
      0.6792990618479633, 0.46758409652647615`, 0.14719210734646615`], 
      Point3DBox[{8, 7, 6}]}, 
     {RGBColor[
      0.4694632684013653, 0.36979195214339944`, 0.17545027205579755`], 
      Point3DBox[{8, 7, 7}]}, 
     {RGBColor[
      0.2977599253015111, 0.26900398568233364`, 0.12697895877528453`], 
      Point3DBox[{8, 7, 8}]}, 
     {RGBColor[0.3925843111264913, 0.42932871976169906`, 0.00907441896231087],
       Point3DBox[{8, 7, 9}]}, 
     {RGBColor[0.4925900513831445, 0.8932814797214093, 0.8192427973178551], 
      Point3DBox[{8, 7, 10}]}}, {
     {RGBColor[0.5389442390649481, 0.7279379233279308, 0.9576514433204515], 
      Point3DBox[{8, 8, 1}]}, 
     {RGBColor[0.9333622027618989, 0.5572085159695579, 0.9727217074909811], 
      Point3DBox[{8, 8, 2}]}, 
     {RGBColor[0.3776093092888846, 0.3807366023607266, 0.5198192538609414], 
      Point3DBox[{8, 8, 3}]}, 
     {RGBColor[
      0.26316774062707227`, 0.01486822311429492, 0.19372732114891833`], 
      Point3DBox[{8, 8, 4}]}, 
     {RGBColor[0.9173116630818519, 0.6426241177871037, 0.07982886630636399], 
      Point3DBox[{8, 8, 5}]}, 
     {RGBColor[0.5856761394794261, 0.0966469561241905, 0.07017060953302612], 
      Point3DBox[{8, 8, 6}]}, 
     {RGBColor[
      0.32301882180162833`, 0.0033326155817223757`, 0.8975787401939621], 
      Point3DBox[{8, 8, 7}]}, 
     {RGBColor[0.7355274052891623, 0.8563000786246813, 0.9086952495319052], 
      Point3DBox[{8, 8, 8}]}, 
     {RGBColor[0.9235983972749697, 0.8221512761875642, 0.4597099716384132], 
      Point3DBox[{8, 8, 9}]}, 
     {RGBColor[0.43417096215433193`, 0.3839871531718828, 0.2621743868198807], 
      Point3DBox[{8, 8, 10}]}}, {
     {RGBColor[0.8482498929628719, 0.9930494121526117, 0.019977791012990354`],
       Point3DBox[{8, 9, 1}]}, 
     {RGBColor[0.6554795260966457, 0.504436539595146, 0.3554717413179298], 
      Point3DBox[{8, 9, 2}]}, 
     {RGBColor[
      0.38106691905087575`, 0.10105822947853205`, 0.6323798259732765], 
      Point3DBox[{8, 9, 3}]}, 
     {RGBColor[
      0.043639306670392175`, 0.710751882137101, 0.46249319566090663`], 
      Point3DBox[{8, 9, 4}]}, 
     {RGBColor[0.8761863138163615, 0.9841469923585051, 0.9689712493635323], 
      Point3DBox[{8, 9, 5}]}, 
     {RGBColor[0.04302634964143226, 0.9015592889490487, 0.4242590174873233], 
      Point3DBox[{8, 9, 6}]}, 
     {RGBColor[0.5035362138625574, 0.8040138697209136, 0.8392268285670663], 
      Point3DBox[{8, 9, 7}]}, 
     {RGBColor[
      0.49261614636075723`, 0.30283230927677796`, 0.9935284012119407], 
      Point3DBox[{8, 9, 8}]}, 
     {RGBColor[
      0.14790690942831208`, 0.34811829572454456`, 0.9730920970232901], 
      Point3DBox[{8, 9, 9}]}, 
     {RGBColor[0.46289677359843506`, 0.6412265734369977, 0.2540281626261318], 
      Point3DBox[{8, 9, 10}]}}, {
     {RGBColor[0.5835059388398554, 0.2825951322459963, 0.7461935967661268], 
      Point3DBox[{8, 10, 1}]}, 
     {RGBColor[0.281039199211534, 0.3721838340953354, 0.734021832732809], 
      Point3DBox[{8, 10, 2}]}, 
     {RGBColor[0.6359065232049776, 0.6848086367023021, 0.07151631180349538], 
      Point3DBox[{8, 10, 3}]}, 
     {RGBColor[0.37142499942199425`, 0.8424315760096659, 0.4760117965777977], 
      Point3DBox[{8, 10, 4}]}, 
     {RGBColor[0.6561078935692408, 0.7596035856517729, 0.7592596813986325], 
      Point3DBox[{8, 10, 5}]}, 
     {RGBColor[
      0.21969664090796903`, 0.18166962088317518`, 0.18850290764315836`], 
      Point3DBox[{8, 10, 6}]}, 
     {RGBColor[
      0.09675692575384409, 0.026874682740115174`, 0.7712074202737507], 
      Point3DBox[{8, 10, 7}]}, 
     {RGBColor[0.6521601295469039, 0.5478971513653776, 0.13459062272776245`], 
      Point3DBox[{8, 10, 8}]}, 
     {RGBColor[0.9938259350657366, 0.5430094604813505, 0.08710629684665294], 
      Point3DBox[{8, 10, 9}]}, 
     {RGBColor[0.3281639057473873, 0.8978224319192867, 0.29388126579219587`], 
      Point3DBox[{8, 10, 10}]}}}, {{
     {RGBColor[0.4204528390939448, 0.9546889384887218, 0.49933433316505593`], 
      Point3DBox[{9, 1, 1}]}, 
     {RGBColor[0.8911279170056514, 0.0691615297795003, 0.57859666196749], 
      Point3DBox[{9, 1, 2}]}, 
     {RGBColor[0.697119030590555, 0.3676349283101856, 0.3557617297805491], 
      Point3DBox[{9, 1, 3}]}, 
     {RGBColor[0.13227098665158943`, 0.08945222466354852, 0.7241048739874512],
       Point3DBox[{9, 1, 4}]}, 
     {RGBColor[0.0761315931790465, 0.6671957380672018, 0.41110736156352634`], 
      Point3DBox[{9, 1, 5}]}, 
     {RGBColor[
      0.9707867021892456, 0.14999593760177543`, 0.44607378442141643`], 
      Point3DBox[{9, 1, 6}]}, 
     {RGBColor[
      0.13503898457004726`, 0.34300291888400714`, 0.5816897800470096], 
      Point3DBox[{9, 1, 7}]}, 
     {RGBColor[0.4521817090481548, 0.794582206024911, 0.5560251867593915], 
      Point3DBox[{9, 1, 8}]}, 
     {RGBColor[0.778287568741507, 0.05700000656891291, 0.048461752935840874`],
       Point3DBox[{9, 1, 9}]}, 
     {RGBColor[0.46196924978443477`, 0.9028946911159357, 0.4358787287935222], 
      Point3DBox[{9, 1, 10}]}}, {
     {RGBColor[0.5865858605949039, 0.5521710768152306, 0.6242499445714025], 
      Point3DBox[{9, 2, 1}]}, 
     {RGBColor[0.527628687429456, 0.8997242382015622, 0.09875155820639536], 
      Point3DBox[{9, 2, 2}]}, 
     {RGBColor[0.1440362132620301, 0.7085200294337026, 0.7191219869574761], 
      Point3DBox[{9, 2, 3}]}, 
     {RGBColor[
      0.47647091772980055`, 0.4827001081879021, 0.28709348980529636`], 
      Point3DBox[{9, 2, 4}]}, 
     {RGBColor[0.019911461787692764`, 0.1342892798570472, 0.5830545219950554],
       Point3DBox[{9, 2, 5}]}, 
     {RGBColor[0.08666350845881432, 0.6538955400152655, 0.2046539295126939], 
      Point3DBox[{9, 2, 6}]}, 
     {RGBColor[0.30460583451581713`, 0.6563197310658235, 0.8316744501065427], 
      Point3DBox[{9, 2, 7}]}, 
     {RGBColor[0.9415981026676594, 0.7706118804026321, 0.799080090648326], 
      Point3DBox[{9, 2, 8}]}, 
     {RGBColor[0.9818078001786825, 0.644880520227187, 0.3651499906150997], 
      Point3DBox[{9, 2, 9}]}, 
     {RGBColor[0.2725488092739914, 0.293367193376437, 0.4975617774337877], 
      Point3DBox[{9, 2, 10}]}}, {
     {RGBColor[0.7408990910491995, 0.5323036688090941, 0.8149964417016211], 
      Point3DBox[{9, 3, 1}]}, 
     {RGBColor[0.6576279759381922, 0.09747402467014932, 0.14012143329081894`],
       Point3DBox[{9, 3, 2}]}, 
     {RGBColor[
      0.025515945426915376`, 0.5295056236160338, 0.35627875415728716`], 
      Point3DBox[{9, 3, 3}]}, 
     {RGBColor[0.17133591854514352`, 0.2041746659697441, 0.9674525254515185], 
      Point3DBox[{9, 3, 4}]}, 
     {RGBColor[0.7849129401070207, 0.5724933575757993, 0.5134622079763531], 
      Point3DBox[{9, 3, 5}]}, 
     {RGBColor[0.7514996953100341, 0.13481469228273557`, 0.6856965880513008], 
      Point3DBox[{9, 3, 6}]}, 
     {RGBColor[0.6350117324722477, 0.6090467810719473, 0.2933213031886186], 
      Point3DBox[{9, 3, 7}]}, 
     {RGBColor[0.8933296269445439, 0.8597580714523512, 0.08266185772690027], 
      Point3DBox[{9, 3, 8}]}, 
     {RGBColor[
      0.9782876886689611, 0.011280739607305135`, 0.013037346263968796`], 
      Point3DBox[{9, 3, 9}]}, 
     {RGBColor[
      0.11775078699460528`, 0.8336469721405471, 0.27435640628872027`], 
      Point3DBox[{9, 3, 10}]}}, {
     {RGBColor[0.160299110295139, 0.38513115780962237`, 0.20563426855644784`],
       Point3DBox[{9, 4, 1}]}, 
     {RGBColor[
      0.46499637016699813`, 0.34495889692095294`, 0.8774713926113353], 
      Point3DBox[{9, 4, 2}]}, 
     {RGBColor[
      0.43602163218753853`, 0.3221995782057485, 0.38394630497683346`], 
      Point3DBox[{9, 4, 3}]}, 
     {RGBColor[0.30157389769298537`, 0.1508227235046833, 0.6529218605145335], 
      Point3DBox[{9, 4, 4}]}, 
     {RGBColor[0.7679154648765785, 0.16432673653472696`, 0.5808445328232732], 
      Point3DBox[{9, 4, 5}]}, 
     {RGBColor[0.5918738193299458, 0.14614010656597598`, 0.7738588397628747], 
      Point3DBox[{9, 4, 6}]}, 
     {RGBColor[0.647778919296625, 0.24824071651669, 0.5008190170862479], 
      Point3DBox[{9, 4, 7}]}, 
     {RGBColor[0.43255093490048857`, 0.6562564460557629, 0.566732671128555], 
      Point3DBox[{9, 4, 8}]}, 
     {RGBColor[0.37985987933243703`, 0.5367452081394664, 0.4852370241138715], 
      Point3DBox[{9, 4, 9}]}, 
     {RGBColor[0.3452334912567083, 0.47610109329678907`, 0.8644165158841262], 
      Point3DBox[{9, 4, 10}]}}, {
     {RGBColor[0.44645170877058193`, 0.981250130810579, 0.9770905354605746], 
      Point3DBox[{9, 5, 1}]}, 
     {RGBColor[0.9903109845800917, 0.5073633615245305, 0.20467613735471324`], 
      Point3DBox[{9, 5, 2}]}, 
     {RGBColor[0.19273343009225163`, 0.2324942376512471, 0.6314345164764781], 
      Point3DBox[{9, 5, 3}]}, 
     {RGBColor[
      0.4382232882957824, 0.23097826381782327`, 0.14049532199580717`], 
      Point3DBox[{9, 5, 4}]}, 
     {RGBColor[0.6403646882882581, 0.599574773067546, 0.17546627204398346`], 
      Point3DBox[{9, 5, 5}]}, 
     {RGBColor[0.2761998112981088, 0.6429463264272708, 0.44945156084061777`], 
      Point3DBox[{9, 5, 6}]}, 
     {RGBColor[0.49840244194649297`, 0.7080266728778779, 0.9161550008234574], 
      Point3DBox[{9, 5, 7}]}, 
     {RGBColor[0.774414294980714, 0.7227991260696505, 0.16292847214704542`], 
      Point3DBox[{9, 5, 8}]}, 
     {RGBColor[0.7811125784684176, 0.7558705188166839, 0.45913968660662396`], 
      Point3DBox[{9, 5, 9}]}, 
     {RGBColor[
      0.22037696015909725`, 0.1754371660393763, 0.47172368442848356`], 
      Point3DBox[{9, 5, 10}]}}, {
     {RGBColor[0.3683660344665691, 0.335295215826072, 0.009687890844365832], 
      Point3DBox[{9, 6, 1}]}, 
     {RGBColor[0.21718387999285826`, 0.02801771828317201, 0.6877606101293261],
       Point3DBox[{9, 6, 2}]}, 
     {RGBColor[
      0.5078490590910847, 0.20075564918490185`, 0.44335570880245845`], 
      Point3DBox[{9, 6, 3}]}, 
     {RGBColor[
      0.058526459508891016`, 0.2554363564392266, 0.05223101659477303], 
      Point3DBox[{9, 6, 4}]}, 
     {RGBColor[0.3168832462957927, 0.7866432904701568, 0.25695857463207683`], 
      Point3DBox[{9, 6, 5}]}, 
     {RGBColor[0.1931477270031272, 0.6190802252513792, 0.8670736798868917], 
      Point3DBox[{9, 6, 6}]}, 
     {RGBColor[0.75269962020277, 0.9833888668104678, 0.9590118486237347], 
      Point3DBox[{9, 6, 7}]}, 
     {RGBColor[0.5527218455176692, 0.04897907028035986, 0.46183951304029125`],
       Point3DBox[{9, 6, 8}]}, 
     {RGBColor[
      0.11512440409853952`, 0.30963802030364507`, 0.4074595631019804], 
      Point3DBox[{9, 6, 9}]}, 
     {RGBColor[0.9369885980180703, 0.24334855644211517`, 0.5386731513665477], 
      Point3DBox[{9, 6, 10}]}}, {
     {RGBColor[0.3347380100552779, 0.48429629913312144`, 0.5091020372130881], 
      Point3DBox[{9, 7, 1}]}, 
     {RGBColor[0.7466338614507917, 0.5813064981303877, 0.11301767338521373`], 
      Point3DBox[{9, 7, 2}]}, 
     {RGBColor[0.7247008167999636, 0.11234057224882421`, 0.5105106958942844], 
      Point3DBox[{9, 7, 3}]}, 
     {RGBColor[0.6638336126216509, 0.4361538136465748, 0.5575358456375941], 
      Point3DBox[{9, 7, 4}]}, 
     {RGBColor[
      0.23522908085389993`, 0.05314463604434305, 0.44275806273186524`], 
      Point3DBox[{9, 7, 5}]}, 
     {RGBColor[0.7430108193614282, 0.7240171704672735, 0.981858734465912], 
      Point3DBox[{9, 7, 6}]}, 
     {RGBColor[0.839491653891872, 0.9089789070251877, 0.4421881612640699], 
      Point3DBox[{9, 7, 7}]}, 
     {RGBColor[0.520213260823049, 0.3111010221793775, 0.31960761069166543`], 
      Point3DBox[{9, 7, 8}]}, 
     {RGBColor[0.7696007348704725, 0.44742325192709553`, 0.8912320144713273], 
      Point3DBox[{9, 7, 9}]}, 
     {RGBColor[0.26951028982096803`, 0.907698013000489, 0.5467254630794356], 
      Point3DBox[{9, 7, 10}]}}, {
     {RGBColor[0.9949010402281986, 0.4019816506723317, 0.5036524894189081], 
      Point3DBox[{9, 8, 1}]}, 
     {RGBColor[0.5653625546940948, 0.6873537811571298, 0.39817438054370036`], 
      Point3DBox[{9, 8, 2}]}, 
     {RGBColor[0.04513299327178921, 0.638848011437575, 0.908061909655695], 
      Point3DBox[{9, 8, 3}]}, 
     {RGBColor[0.9855145758104511, 0.8418426987370959, 0.4351773812467996], 
      Point3DBox[{9, 8, 4}]}, 
     {RGBColor[0.39135561705806565`, 0.5386913981977954, 0.5791895990156675], 
      Point3DBox[{9, 8, 5}]}, 
     {RGBColor[0.6735168804600482, 0.5167140376004689, 0.7993726721502725], 
      Point3DBox[{9, 8, 6}]}, 
     {RGBColor[0.07883921486022416, 0.1247388031848522, 0.09698361383728482], 
      Point3DBox[{9, 8, 7}]}, 
     {RGBColor[0.8316715731229767, 0.3215454925511658, 0.1317134053573159], 
      Point3DBox[{9, 8, 8}]}, 
     {RGBColor[
      0.0026517830103045537`, 0.9158614326232803, 0.7096151658429257], 
      Point3DBox[{9, 8, 9}]}, 
     {RGBColor[0.94556868138194, 0.2595619757119352, 0.9827258736686169], 
      Point3DBox[{9, 8, 10}]}}, {
     {RGBColor[0.9751391608605451, 0.4331938379440765, 0.8491028898139219], 
      Point3DBox[{9, 9, 1}]}, 
     {RGBColor[
      0.0015586512426257748`, 0.7835510518043629, 0.8548356186171109], 
      Point3DBox[{9, 9, 2}]}, 
     {RGBColor[0.6736014372267005, 0.19648237902058918`, 0.6236782615164238], 
      Point3DBox[{9, 9, 3}]}, 
     {RGBColor[
      0.29515945789164344`, 0.25029591806613705`, 0.6599679710965567], 
      Point3DBox[{9, 9, 4}]}, 
     {RGBColor[0.8946856962929297, 0.430754238726095, 0.8479601736241489], 
      Point3DBox[{9, 9, 5}]}, 
     {RGBColor[0.2339278753261409, 0.7014337855550978, 0.48458658891815354`], 
      Point3DBox[{9, 9, 6}]}, 
     {RGBColor[0.6839135570611665, 0.11809999817731831`, 0.8046740019833634], 
      Point3DBox[{9, 9, 7}]}, 
     {RGBColor[0.5645486623130849, 0.7202772977607137, 0.44590869352494744`], 
      Point3DBox[{9, 9, 8}]}, 
     {RGBColor[0.2983971735072566, 0.3303801666439068, 0.3583646278095032], 
      Point3DBox[{9, 9, 9}]}, 
     {RGBColor[
      0.10454238023862206`, 0.6646439842826968, 0.20405557230840476`], 
      Point3DBox[{9, 9, 10}]}}, {
     {RGBColor[0.6720910435191387, 0.9855251031190508, 0.8630938666837888], 
      Point3DBox[{9, 10, 1}]}, 
     {RGBColor[0.634714316172122, 0.31758438474489203`, 0.2933677467589053], 
      Point3DBox[{9, 10, 2}]}, 
     {RGBColor[0.89764311857866, 0.6843800292173905, 0.14063190802398995`], 
      Point3DBox[{9, 10, 3}]}, 
     {RGBColor[0.2959165991662702, 0.1833589341617543, 0.7403355288913023], 
      Point3DBox[{9, 10, 4}]}, 
     {RGBColor[0.07141919077791048, 0.9402500580246422, 0.0777941236812636], 
      Point3DBox[{9, 10, 5}]}, 
     {RGBColor[0.9702101336619955, 0.985095483559864, 0.03831333610612897], 
      Point3DBox[{9, 10, 6}]}, 
     {RGBColor[0.6106723118088073, 0.6918908640316488, 0.6145936025984962], 
      Point3DBox[{9, 10, 7}]}, 
     {RGBColor[
      0.9778775075597343, 0.18361678121128389`, 0.29753762021148034`], 
      Point3DBox[{9, 10, 8}]}, 
     {RGBColor[0.8119657345687408, 0.05423620706870991, 0.30721350355838717`],
       Point3DBox[{9, 10, 9}]}, 
     {RGBColor[0.3834731280788861, 0.10621634545071346`, 0.2383614350819705], 
      Point3DBox[{9, 10, 10}]}}}, {{
     {RGBColor[0.8442668478114135, 0.8295650795496508, 0.6609513129692306], 
      Point3DBox[{10, 1, 1}]}, 
     {RGBColor[0.1927011786040429, 0.9646875717878718, 0.8142105256431831], 
      Point3DBox[{10, 1, 2}]}, 
     {RGBColor[0.5118575567542096, 0.15002582279678078`, 0.1325044066740353], 
      Point3DBox[{10, 1, 3}]}, 
     {RGBColor[
      0.34486123271147173`, 0.29820910939944745`, 0.21840967976457448`], 
      Point3DBox[{10, 1, 4}]}, 
     {RGBColor[0.9668121372613174, 0.24584455010542028`, 0.6818554775766055], 
      Point3DBox[{10, 1, 5}]}, 
     {RGBColor[0.7844842936528063, 0.8786888507698254, 0.8998186218484217], 
      Point3DBox[{10, 1, 6}]}, 
     {RGBColor[0.6593667624729904, 0.616363755675166, 0.4464810639453436], 
      Point3DBox[{10, 1, 7}]}, 
     {RGBColor[0.5361776669876921, 0.26757918636664746`, 0.9435187977096609], 
      Point3DBox[{10, 1, 8}]}, 
     {RGBColor[0.5392751652967513, 0.8594775115283311, 0.7608367428496314], 
      Point3DBox[{10, 1, 9}]}, 
     {RGBColor[0.19755605143991684`, 0.9539230383961659, 0.7160774159857086], 
      Point3DBox[{10, 1, 10}]}}, {
     {RGBColor[0.2086163583327445, 0.057233697062220035`, 0.6579418323003519],
       Point3DBox[{10, 2, 1}]}, 
     {RGBColor[
      0.36088552021134834`, 0.19782089778770717`, 0.8585527263298005], 
      Point3DBox[{10, 2, 2}]}, 
     {RGBColor[0.8522467855756033, 0.7166988055862817, 0.2395079104548885], 
      Point3DBox[{10, 2, 3}]}, 
     {RGBColor[
      0.36461243542184807`, 0.5536574977460997, 0.24076230533171272`], 
      Point3DBox[{10, 2, 4}]}, 
     {RGBColor[0.690633522989299, 0.3008772612486139, 0.7968409333081738], 
      Point3DBox[{10, 2, 5}]}, 
     {RGBColor[0.4146899500876864, 0.3230787971929785, 0.7930229625760705], 
      Point3DBox[{10, 2, 6}]}, 
     {RGBColor[0.9383297524384413, 0.7428306265412292, 0.4170810679721082], 
      Point3DBox[{10, 2, 7}]}, 
     {RGBColor[0.31326409398246, 0.07512518962013326, 0.4254600182777257], 
      Point3DBox[{10, 2, 8}]}, 
     {RGBColor[0.13067315518406808`, 0.6109908230164642, 0.5088758695549782], 
      Point3DBox[{10, 2, 9}]}, 
     {RGBColor[0.7469823303263039, 0.784480520727328, 0.9098242013307511], 
      Point3DBox[{10, 2, 10}]}}, {
     {RGBColor[0.781659067214239, 0.6388928768701836, 0.6639494783092463], 
      Point3DBox[{10, 3, 1}]}, 
     {RGBColor[0.3485808527446983, 0.2568082693259339, 0.6744039567250579], 
      Point3DBox[{10, 3, 2}]}, 
     {RGBColor[0.3067947694186066, 0.753054107791669, 0.7619964811960473], 
      Point3DBox[{10, 3, 3}]}, 
     {RGBColor[0.6148796391190983, 0.6222039205314849, 0.035604650346545474`],
       Point3DBox[{10, 3, 4}]}, 
     {RGBColor[0.01740696899323324, 0.06854690591995549, 0.4140075788237103], 
      Point3DBox[{10, 3, 5}]}, 
     {RGBColor[0.1953578822355806, 0.32845548992870377`, 0.5140256257208173], 
      Point3DBox[{10, 3, 6}]}, 
     {RGBColor[0.3310536890481852, 0.2412968767206627, 0.08804680108797025], 
      Point3DBox[{10, 3, 7}]}, 
     {RGBColor[0.9628150889451861, 0.8444787981795858, 0.8274958711565696], 
      Point3DBox[{10, 3, 8}]}, 
     {RGBColor[0.7975112171105216, 0.7732653493078643, 0.8724410559884055], 
      Point3DBox[{10, 3, 9}]}, 
     {RGBColor[0.36539172932388264`, 0.8939057274213378, 0.5406109677920674], 
      Point3DBox[{10, 3, 10}]}}, {
     {RGBColor[
      0.0278282780188015, 0.40194875237678174`, 0.32931462589941907`], 
      Point3DBox[{10, 4, 1}]}, 
     {RGBColor[0.06458803676411029, 0.5231258572763915, 0.43981235938984753`],
       Point3DBox[{10, 4, 2}]}, 
     {RGBColor[0.05564609508827467, 0.8745128912691755, 0.27201414637015797`],
       Point3DBox[{10, 4, 3}]}, 
     {RGBColor[0.8052922413946353, 0.9453512166251952, 0.615462585710622], 
      Point3DBox[{10, 4, 4}]}, 
     {RGBColor[0.269027897658799, 0.6381385486208464, 0.18409021550930027`], 
      Point3DBox[{10, 4, 5}]}, 
     {RGBColor[0.6816974807333094, 0.33933300766610186`, 0.6207452823922766], 
      Point3DBox[{10, 4, 6}]}, 
     {RGBColor[
      0.34784448949232716`, 0.010091181316528752`, 0.8596796026041711], 
      Point3DBox[{10, 4, 7}]}, 
     {RGBColor[0.7809924259262073, 0.3837081101020072, 0.2041077344175526], 
      Point3DBox[{10, 4, 8}]}, 
     {RGBColor[0.10198601161759391`, 0.5710349415113862, 0.8108757413164256], 
      Point3DBox[{10, 4, 9}]}, 
     {RGBColor[0.5312542441800743, 0.9261175252075524, 0.41713486592623683`], 
      Point3DBox[{10, 4, 10}]}}, {
     {RGBColor[0.9124715837754112, 0.9918821004586769, 0.48356031559471346`], 
      Point3DBox[{10, 5, 1}]}, 
     {RGBColor[0.04468389363961345, 0.6968838764662746, 0.6604902900106813], 
      Point3DBox[{10, 5, 2}]}, 
     {RGBColor[0.9415606402274133, 0.536387007771453, 0.1738656247147563], 
      Point3DBox[{10, 5, 3}]}, 
     {RGBColor[0.33126144835418114`, 0.8841534462609733, 0.844366685619933], 
      Point3DBox[{10, 5, 4}]}, 
     {RGBColor[0.9116425254954943, 0.9099140728385045, 0.10079378548414941`], 
      Point3DBox[{10, 5, 5}]}, 
     {RGBColor[0.5862292007335641, 0.8517218188272977, 0.9260917619684776], 
      Point3DBox[{10, 5, 6}]}, 
     {RGBColor[0.6168444047400659, 0.7513432911246178, 0.1748767601215402], 
      Point3DBox[{10, 5, 7}]}, 
     {RGBColor[0.3313845303512146, 0.5332749683047309, 0.928388214906873], 
      Point3DBox[{10, 5, 8}]}, 
     {RGBColor[0.6047549771955651, 0.09706587140882128, 0.7005345624804673], 
      Point3DBox[{10, 5, 9}]}, 
     {RGBColor[0.6884824132620864, 0.25008572155536646`, 0.8495792227961707], 
      Point3DBox[{10, 5, 10}]}}, {
     {RGBColor[0.7457682947815916, 0.6731433034964927, 0.1514981944754381], 
      Point3DBox[{10, 6, 1}]}, 
     {RGBColor[0.04552394684510208, 0.5642309900798814, 0.5688193185103996], 
      Point3DBox[{10, 6, 2}]}, 
     {RGBColor[0.5630343504934432, 0.7468387962057264, 0.5490849522706434], 
      Point3DBox[{10, 6, 3}]}, 
     {RGBColor[0.8020395163148624, 0.22090338355547523`, 0.6328993638161491], 
      Point3DBox[{10, 6, 4}]}, 
     {RGBColor[0.8958934281098083, 0.05538970695600787, 0.31238617736339336`],
       Point3DBox[{10, 6, 5}]}, 
     {RGBColor[0.9855291784349527, 0.928524417710993, 0.9603602800224136], 
      Point3DBox[{10, 6, 6}]}, 
     {RGBColor[0.9118378085439793, 0.9654525578868218, 0.753761967332037], 
      Point3DBox[{10, 6, 7}]}, 
     {RGBColor[0.3736190438976241, 0.5982637338430365, 0.47508441219463404`], 
      Point3DBox[{10, 6, 8}]}, 
     {RGBColor[0.472329045489011, 0.027328478733188888`, 0.4008267639378422], 
      Point3DBox[{10, 6, 9}]}, 
     {RGBColor[0.3469533145653192, 0.398465949158588, 0.05208078514773673], 
      Point3DBox[{10, 6, 10}]}}, {
     {RGBColor[0.27490518317967005`, 0.7118633207015619, 0.9773280611867692], 
      Point3DBox[{10, 7, 1}]}, 
     {RGBColor[0.7874556402465984, 0.7109663844732117, 0.4777056189887767], 
      Point3DBox[{10, 7, 2}]}, 
     {RGBColor[0.9240949075089617, 0.5959699211440159, 0.8815332871778119], 
      Point3DBox[{10, 7, 3}]}, 
     {RGBColor[0.5059080662319071, 0.5986349814922689, 0.767424302259768], 
      Point3DBox[{10, 7, 4}]}, 
     {RGBColor[0.922325141764244, 0.9949369842669813, 0.04757470250957874], 
      Point3DBox[{10, 7, 5}]}, 
     {RGBColor[0.5983447494422585, 0.7612930017884851, 0.9622549762472732], 
      Point3DBox[{10, 7, 6}]}, 
     {RGBColor[0.8423058141542068, 0.5732769070335018, 0.8996319943184747], 
      Point3DBox[{10, 7, 7}]}, 
     {RGBColor[0.2713290854772532, 0.6726557924221095, 0.9900145868839725], 
      Point3DBox[{10, 7, 8}]}, 
     {RGBColor[0.6955220344756017, 0.2210144336386275, 0.44895484228811666`], 
      Point3DBox[{10, 7, 9}]}, 
     {RGBColor[0.394754314189367, 0.5535605726516972, 0.719943795551379], 
      Point3DBox[{10, 7, 10}]}}, {
     {RGBColor[0.3341858504402242, 0.2728395145789735, 0.03195991846414148], 
      Point3DBox[{10, 8, 1}]}, 
     {RGBColor[
      0.17381395536097077`, 0.24662371203250388`, 0.44503369874856835`], 
      Point3DBox[{10, 8, 2}]}, 
     {RGBColor[
      0.23492284379017647`, 0.22457387488693525`, 0.1660674491555323], 
      Point3DBox[{10, 8, 3}]}, 
     {RGBColor[0.8453070967734302, 0.8214944210393362, 0.49397463710031264`], 
      Point3DBox[{10, 8, 4}]}, 
     {RGBColor[0.19888732112847074`, 0.2729513170758373, 0.1495250296092776], 
      Point3DBox[{10, 8, 5}]}, 
     {RGBColor[
      0.16050310987769834`, 0.19020730213608217`, 0.8545557426316241], 
      Point3DBox[{10, 8, 6}]}, 
     {RGBColor[0.9799335482053164, 0.6472188999598341, 0.9990366363645531], 
      Point3DBox[{10, 8, 7}]}, 
     {RGBColor[
      0.15552897898592377`, 0.040936057816510774`, 0.8483111156641359], 
      Point3DBox[{10, 8, 8}]}, 
     {RGBColor[0.16757532342617631`, 0.28253300114711744`, 0.174319180490351],
       Point3DBox[{10, 8, 9}]}, 
     {RGBColor[0.5750867511208824, 0.2201326955686591, 0.2170226191127027], 
      Point3DBox[{10, 8, 10}]}}, {
     {RGBColor[0.5295216098239397, 0.568290128521548, 0.776802674140981], 
      Point3DBox[{10, 9, 1}]}, 
     {RGBColor[0.3928949676179354, 0.5410525578267809, 0.7697461661989846], 
      Point3DBox[{10, 9, 2}]}, 
     {RGBColor[0.8580113692800513, 0.8197769423283163, 0.5607357493154781], 
      Point3DBox[{10, 9, 3}]}, 
     {RGBColor[0.3400550507872486, 0.8719744364357618, 0.6955391753307707], 
      Point3DBox[{10, 9, 4}]}, 
     {RGBColor[0.6076734788456637, 0.5661256644554031, 0.8661561294703497], 
      Point3DBox[{10, 9, 5}]}, 
     {RGBColor[0.9677493072032983, 0.8657534422079933, 0.06360161620746041], 
      Point3DBox[{10, 9, 6}]}, 
     {RGBColor[0.22565603729787043`, 0.7946574194598763, 0.4086990136999773], 
      Point3DBox[{10, 9, 7}]}, 
     {RGBColor[0.22923242751651052`, 0.9415419868458115, 0.7262180585427278], 
      Point3DBox[{10, 9, 8}]}, 
     {RGBColor[0.9670680912142, 0.4865161197816523, 0.5885117395362429], 
      Point3DBox[{10, 9, 9}]}, 
     {RGBColor[0.12965770218504002`, 0.343018288041268, 0.7491103063496956], 
      Point3DBox[{10, 9, 10}]}}, {
     {RGBColor[
      0.018220758449237318`, 0.22201723389697992`, 0.386349535194493], 
      Point3DBox[{10, 10, 1}]}, 
     {RGBColor[0.5130941478898987, 0.5412457081295048, 0.20512673859591524`], 
      Point3DBox[{10, 10, 2}]}, 
     {RGBColor[0.623240807786082, 0.13815228146244452`, 0.9522705059503151], 
      Point3DBox[{10, 10, 3}]}, 
     {RGBColor[
      0.688786653677244, 0.15375073868677802`, 0.013246687980316585`], 
      Point3DBox[{10, 10, 4}]}, 
     {RGBColor[0.4683222076594944, 0.7310901774835747, 0.8563512915381237], 
      Point3DBox[{10, 10, 5}]}, 
     {RGBColor[0.5902487419960827, 0.21366940258275346`, 0.6725921608207643], 
      Point3DBox[{10, 10, 6}]}, 
     {RGBColor[0.40610311081016737`, 0.03630344341600966, 0.8222537639310219],
       Point3DBox[{10, 10, 7}]}, 
     {RGBColor[0.24769384012151696`, 0.3103688009993604, 0.5510562164811565], 
      Point3DBox[{10, 10, 8}]}, 
     {RGBColor[0.6489655160598875, 0.5794023721085075, 0.6821535175190514], 
      Point3DBox[{10, 10, 9}]}, 
     {RGBColor[0.9531403481919063, 0.17892738859255797`, 0.7043495402984397], 
      Point3DBox[{10, 10, 10}]}}}},
  ImageSize->{328.74887773531054`, 326.02549644709484`},
  ImageSizeRaw->Automatic,
  ViewPoint->{1.2458735758259945`, -0.7437374204080989, 3.0569026288946883`},
  ViewVertical->{-0.03724820457032907, 0.5833507277011764, 
   0.8113658236250743}]], "Output",
 CellChangeTimes->{
  3.933045670910715*^9, 3.933093095846922*^9, 3.933180335442196*^9, {
   3.933186692108526*^9, 3.933186750412044*^9}, 3.9331868353726063`*^9, {
   3.933186871131144*^9, 3.93318690777597*^9}, 3.933188159231113*^9, 
   3.933274338299231*^9, {3.933276638645656*^9, 3.9332766511361856`*^9}, {
   3.933367090724166*^9, 3.933367102983233*^9}, 3.933713122601194*^9, {
   3.933713171746725*^9, 3.933713186417428*^9}, {3.9337132648086557`*^9, 
   3.9337132938429937`*^9}},
 CellLabel->"Out[44]=",ExpressionUUID->"51351dd7-d226-475d-b1fd-748cca3d2c17"]
}, Open  ]],

Cell["\<\
+Q5. Take the first two digits of numbers from 10 to 100 and draw a line that \
uses them as coordinates.\
\>", "CodeText",
 CellChangeTimes->{{3.933044981954609*^9, 3.9330449829879637`*^9}, {
   3.9330450176513767`*^9, 3.9330450320914183`*^9}, {3.933045084826315*^9, 
   3.9330450895412827`*^9}, {3.933045286272798*^9, 3.933045318006721*^9}, {
   3.933045368732009*^9, 3.933045377536852*^9}, {3.933045545062495*^9, 
   3.933045552087694*^9}, {3.933045582724339*^9, 3.933045598952709*^9}, {
   3.933045654828909*^9, 3.9330456668860083`*^9}, 3.933045736409889*^9, 
   3.933093082081451*^9, 3.933180276922765*^9, 3.933186631520351*^9, {
   3.933188136235816*^9, 3.9331881450240517`*^9}, 3.933274311211767*^9, 
   3.933276554620142*^9, 3.933276665367118*^9, 3.933367068678151*^9, 
   3.933712970692966*^9, 3.9337130186920643`*^9, 3.933713206030465*^9, 
   3.9337133068142653`*^9},ExpressionUUID->"ca9c45d1-e686-48bd-9543-\
c3eba81d1704"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{"Line", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Take", "[", 
      RowBox[{
       RowBox[{"IntegerDigits", "[", "#", "]"}], ",", "2"}], "]"}], "&"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{"10", ",", "100"}], "]"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.933045668871724*^9, 3.933045670351816*^9}, {
  3.9330930870089808`*^9, 3.933093095152356*^9}, {3.933180287808238*^9, 
  3.933180334695085*^9}, {3.933186671477257*^9, 3.933186749813414*^9}, {
  3.93318682967554*^9, 3.933186900276577*^9}, {3.9331881482665873`*^9, 
  3.933188158821327*^9}, {3.933274322521419*^9, 3.933274337743745*^9}, {
  3.9332765892289133`*^9, 3.9332766502688007`*^9}, {3.933367089807831*^9, 
  3.9333671025593224`*^9}, {3.933712979397196*^9, 3.933713062395549*^9}, {
  3.933713096767788*^9, 3.933713117276865*^9}, {3.933713165199708*^9, 
  3.933713185804031*^9}, {3.933713327039526*^9, 3.933713336634749*^9}, {
  3.933713376190016*^9, 3.933713445521315*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"4d0887e5-6ee8-4123-821a-c9bdadbb30f9"],

Cell[BoxData[
 GraphicsBox[LineBox[CompressedData["
1:eJxdkksOAjEMQzPTT5JjcCW27DgA3H8HiGdhMZL1qk5rJU4v9+f1cUbE7a0P
j/h+h0n7A0644IYJCzZ3wzxO04ATLrhhwoLNnbBahnlJEy64YcKCzdmwnlTL
NC9pwQ0TFmzOhGWjnlTLMi9pw4QFm39hGSsb9aRatnlJCQs2e2GzUsbKRj2p
ljQvqWCzjvjNXLNSxspGPamWMi+pUUB/Q5q9ZqaslZF66z8vvecXAR8Fag==

   "]]]], "Output",
 CellChangeTimes->{
  3.933045670910715*^9, 3.933093095846922*^9, 3.933180335442196*^9, {
   3.933186692108526*^9, 3.933186750412044*^9}, 3.9331868353726063`*^9, {
   3.933186871131144*^9, 3.93318690777597*^9}, 3.933188159231113*^9, 
   3.933274338299231*^9, {3.933276638645656*^9, 3.9332766511361856`*^9}, {
   3.933367090724166*^9, 3.933367102983233*^9}, 3.933713122601194*^9, {
   3.933713171746725*^9, 3.933713186417428*^9}, 3.933713336961157*^9, {
   3.933713405670557*^9, 3.933713446648534*^9}},
 CellLabel->"Out[50]=",ExpressionUUID->"668bc3c2-8088-44b8-b127-f703115f2200"]
}, Open  ]],

Cell["\<\
+Q6. Take the first 3 digits of numbers from 100 to 1000 and draw a line in \
3D that uses them as coordinates.\
\>", "CodeText",
 CellChangeTimes->{{3.933044981954609*^9, 3.9330449829879637`*^9}, {
   3.9330450176513767`*^9, 3.9330450320914183`*^9}, {3.933045084826315*^9, 
   3.9330450895412827`*^9}, {3.933045286272798*^9, 3.933045318006721*^9}, {
   3.933045368732009*^9, 3.933045377536852*^9}, {3.933045545062495*^9, 
   3.933045552087694*^9}, {3.933045582724339*^9, 3.933045598952709*^9}, {
   3.933045654828909*^9, 3.9330456668860083`*^9}, 3.933045736409889*^9, 
   3.933093082081451*^9, 3.933180276922765*^9, 3.933186631520351*^9, {
   3.933188136235816*^9, 3.9331881450240517`*^9}, 3.933274311211767*^9, 
   3.933276554620142*^9, 3.933276665367118*^9, 3.933367068678151*^9, 
   3.933712970692966*^9, 3.9337130186920643`*^9, 3.9337132037998543`*^9, {
   3.933713463413932*^9, 
   3.933713464837194*^9}},ExpressionUUID->"558c31b1-d881-4d6a-b573-\
0cdf1601ccc8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics3D", "[", 
  RowBox[{"Line", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Take", "[", 
      RowBox[{
       RowBox[{"IntegerDigits", "[", "#", "]"}], ",", "3"}], "]"}], "&"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{"100", ",", "1000"}], "]"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.933045668871724*^9, 3.933045670351816*^9}, {
  3.9330930870089808`*^9, 3.933093095152356*^9}, {3.933180287808238*^9, 
  3.933180334695085*^9}, {3.933186671477257*^9, 3.933186749813414*^9}, {
  3.93318682967554*^9, 3.933186900276577*^9}, {3.9331881482665873`*^9, 
  3.933188158821327*^9}, {3.933274322521419*^9, 3.933274337743745*^9}, {
  3.9332765892289133`*^9, 3.9332766502688007`*^9}, {3.933367089807831*^9, 
  3.9333671025593224`*^9}, {3.933712979397196*^9, 3.933713062395549*^9}, {
  3.933713096767788*^9, 3.933713117276865*^9}, {3.933713165199708*^9, 
  3.933713185804031*^9}, {3.933713531472608*^9, 3.933713541708104*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"b8ede543-a283-492d-a090-97f49cd22ca8"],

Cell[BoxData[
 Graphics3DBox[Line3DBox[CompressedData["
1:eJwdVllxBTEM820LRikVwiNQFOX9pOzsXyaJLevIz+fv9xNm9p9m/M31u1u4
pVu5tdu4rdu5wbXGL9zTvdzbfdzX/dzhYVqJ8EiP8miP8ViP84CnaVOGZ3qW
Z3uO53qeJ7xM51V4pVd5tdd4rdd5wdt0VYd3epd3e4/3ep83fExVTPikT/m0
z/isz/nA11Tghm/6lm/7ju/6ni/8TLVf+KVf+bXf+K3f+cFhbMsRjnSUox3j
WMc5QNzUsUVYhlVYh03Yhl0Y95jAEBzsmY2xepbIOngZQtu4xi8jKqIjJmIj
LgKRJgi5khlZkR05kRt5kYgyoctNlVEV1VETtVEXhWgT8DyvM7qiO3qiN/qi
EWOaCa+ajKmYjpmYjbkYxJrGxSo2Yyu2Yyd2Yy8WcaZJssDLuIrruInbuItD
wDhk1h7IQAU6MIENXACPXq62LNMqrdMmbdMujeCaqCHekBxkAMfMWXJgnAqP
M7FGSBEO9szGWD1LZB1InejCSV9lduZkbuZlIsvENULIlaqszpqszbosZJto
SHS5qSu7syd7sy8bOSaGEnieN5XTOZOzOZeDXBN5ORNetZXbuZO7uZeLPBOv
OS5WcZXXeZO3eZeHhJHynCQLTFSiE5PYxCVQZlIDh8zarcq6bMq27MrIQpNQ
JDB2RqlQDyQ9mU36EneThkQpNk1ykAEcM2fJgfEmk7wEIvEgHOyZjbF6lojS
ZS5CaY1fV03VVl0Vqk2iJNcIIVe6q6d6q68aNSa9koZEl5uma6Zma64GtSYp
k6EEnudt107t1l4t6kwqJ3k5E151XTd1W3d1KBgNgLzmuFhFoQtT2MIV0Gby
BlKek2SB1m3Ttm3XRrmabENOlKpdxkF3oAVQ5ySoyVGkvVRbkgr1QNKT2RyJ
yWzEtlTHIgcZwDFzlizC5EPCNwWG4GDPbIzVo1WHS3naxjV+073d140ek3tR
lOQaIeTKTM/2XA96TcZGvZKGRJebdnq393rRZ/I8SpkMJfA876Zv+64PDaMd
UuUkL2fCqxrT2MY1MGZyShoAec1xsQqbsR27MfqayURl2alJymFpo/RKGiKV
bPJXmVRqyPIUGgfdgRZA7pqsV7JMzV8qolSoB5Ke0zK5soiYooZ4Q3KQARwz
6zMZtqBPsUZIEQ72zMYwKtFlUTqxhJO+nbkZzJpsnu5FUZJrhJAru7M3izlT
AtDYqFfSkOhy0+3czWFgDAd6HqVMhhJ4njfYwQ2wZsoN2iFVTvJyJrzKdu3W
GACmSFG2pXitKGIhDBUmBy3PlDZy8xTlZb6skTZKr6TITUEk/0qpQXbD8mkc
dAfS2pRRUmxKKBIYO6NUqAcO0hRf4mhKQ6IUmyY5yACWbko2TSUlL4FIPAgH
e8aqepeX67ISobTG73axZ8pD2jzdi6Ik1wghV+72sDBGJROAxka9koZEl5sW
t8CZKUUZDvQ8SpkMJfA8z+6MSWkKWD0CUipXZo+uUsQyG0zZq9hLGYBSalSF
QoVuaIplGX3KG+TLowJlo9S/KbFlbSnbkBONapdxkPGmMJeYU44i7Y3aklQ4
Y1POi74psxHbRh2LHOzK9ATQwFI+JHxHYAgOnBpzhZ7qKClP27jGDwfjw4F5
SJune1GU5Boh5MoBMNObglHJBKCxUa+kIdHlJgPeGwvvtYT37sF7weC9RfBe
FXjvA7ykx8tsvPTFy1G8RMTLNryUwssbvOTAywA8N8fzZTyHxfNKPNfD8y88
J8LzFDx3wNM5nmLxtIenIjw94DEbj6N4bMPjDR4D8GaJNxU8fPGQwusZr3q8
OvBOxFvjW/QLdYIzbQ==
   "]],
  ImageSize->{341.68312546485436`, 346.0581633535467},
  ImageSizeRaw->Automatic,
  ViewPoint->{2.2143359938222007`, -2.2958876951400393`, 1.1294316259818504`},
  
  ViewVertical->{0.22890517618084993`, -0.20158054188663488`, 
   0.952348520999694}]], "Output",
 CellChangeTimes->{
  3.933045670910715*^9, 3.933093095846922*^9, 3.933180335442196*^9, {
   3.933186692108526*^9, 3.933186750412044*^9}, 3.9331868353726063`*^9, {
   3.933186871131144*^9, 3.93318690777597*^9}, 3.933188159231113*^9, 
   3.933274338299231*^9, {3.933276638645656*^9, 3.9332766511361856`*^9}, {
   3.933367090724166*^9, 3.933367102983233*^9}, 3.933713122601194*^9, {
   3.933713171746725*^9, 3.933713186417428*^9}, 3.933713543380042*^9},
 CellLabel->"Out[51]=",ExpressionUUID->"ff6d62d3-480c-44a7-af04-ba33597c0aee"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{663, 852},
WindowMargins->{{Automatic, 0}, {0, Automatic}},
FrontEndVersion->"13.1 for Linux x86 (64-bit) (June 16, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"0b5572db-88d9-4e0a-8d30-6deeb2e2dd8d"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 150, 3, 68, "Section",ExpressionUUID->"8b259311-48ae-4ecd-8dc6-ea5e4a506588"],
Cell[733, 27, 684, 10, 38, "CodeText",ExpressionUUID->"1bfd07db-0489-4d4f-b4e1-fd122b4004cc"],
Cell[CellGroupData[{
Cell[1442, 41, 817, 17, 29, "Input",ExpressionUUID->"f8d2a430-ab95-46ca-ba29-c508cd213514"],
Cell[2262, 60, 494, 8, 376, "Output",ExpressionUUID->"cdc1cc07-7a5a-448b-8724-a86f19698319"]
}, Open  ]],
Cell[2771, 71, 610, 9, 38, "CodeText",ExpressionUUID->"e642b81f-36cc-4e82-a2f4-4f887c416eb6"],
Cell[CellGroupData[{
Cell[3406, 84, 658, 14, 29, "Input",ExpressionUUID->"71383e52-7b63-4a77-aefa-e5a3fea85e72"],
Cell[4067, 100, 400, 7, 449, "Output",ExpressionUUID->"d012dae0-efa7-4195-bc1f-c2e005e3e496"]
}, Open  ]],
Cell[4482, 110, 626, 9, 38, "CodeText",ExpressionUUID->"c74fa225-8583-4f63-8f0b-f521f0ce3736"],
Cell[CellGroupData[{
Cell[5133, 123, 580, 11, 29, "Input",ExpressionUUID->"8b74de4e-8fbd-4edd-b60c-7aac71e8d117"],
Cell[5716, 136, 371, 6, 376, "Output",ExpressionUUID->"d1e3d4d1-fc1c-4c48-9ce2-3472e69be931"]
}, Open  ]],
Cell[6102, 145, 655, 11, 38, "CodeText",ExpressionUUID->"194a5a3a-387e-48f7-a349-083b853bab96"],
Cell[CellGroupData[{
Cell[6782, 160, 412, 9, 29, "Input",ExpressionUUID->"35914cbb-2a1b-48f8-b19a-d80706d9a87d"],
Cell[7197, 171, 1023, 20, 359, "Output",ExpressionUUID->"87bfec2f-ad79-4c12-beb3-e845d54782b1"]
}, Open  ]],
Cell[8235, 194, 672, 10, 38, "CodeText",ExpressionUUID->"2921c7f2-066e-4ca7-ad8e-4ce76a2248a1"],
Cell[CellGroupData[{
Cell[8932, 208, 561, 14, 29, "Input",ExpressionUUID->"2651b0ed-d985-45cc-b7e5-1bd8eeae43a4"],
Cell[9496, 224, 267, 4, 449, "Output",ExpressionUUID->"e241f94e-bea7-4d63-8acc-a427b30e5df2"]
}, Open  ]],
Cell[9778, 231, 684, 10, 38, "CodeText",ExpressionUUID->"e0fc989f-c4f1-49e6-b608-cd2d991fb5fd"],
Cell[CellGroupData[{
Cell[10487, 245, 459, 10, 29, "Input",ExpressionUUID->"57e4eb0f-6308-4c02-adaf-af4b6592f595"],
Cell[10949, 257, 214992, 3526, 407, 65, 1, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"57736cd4-9e7a-404f-a95b-a8f63f1be482"]
}, Open  ]],
Cell[225956, 3786, 661, 10, 38, "CodeText",ExpressionUUID->"0b308a81-0dee-4c26-958f-90bad5cf5102"],
Cell[CellGroupData[{
Cell[226642, 3800, 586, 14, 29, "Input",ExpressionUUID->"e2131e88-04dc-4891-b559-f6567c725a21"],
Cell[227231, 3816, 278361, 4580, 407, 2155, 51, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"1c6b0d77-a084-4255-92bb-81d7fb8465ab"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[505641, 8402, 156, 3, 68, "Section",ExpressionUUID->"a1ab1e82-09ce-468e-a7d0-5f91ed75a90d"],
Cell[505800, 8407, 585, 11, 38, "CodeText",ExpressionUUID->"5e7af161-1d1e-4932-855b-53e872d326b1"],
Cell[CellGroupData[{
Cell[506410, 8422, 786, 16, 29, "Input",ExpressionUUID->"ca5851d7-84af-4dc7-a3e7-447455e49de9"],
Cell[507199, 8440, 524, 9, 376, "Output",ExpressionUUID->"b24bf240-0260-4a08-a25c-da3b68863ea3"]
}, Open  ]],
Cell[507738, 8452, 562, 8, 38, "CodeText",ExpressionUUID->"0882b12f-7c20-4a42-83d8-b2f422677fde"],
Cell[CellGroupData[{
Cell[508325, 8464, 900, 19, 29, "Input",ExpressionUUID->"1f7e8a21-3af1-4620-9d98-f0b63fcca059"],
Cell[509228, 8485, 1418, 27, 376, "Output",ExpressionUUID->"e9f3fd16-94f1-46e7-bbb2-f5053d9e5705"]
}, Open  ]],
Cell[510661, 8515, 627, 11, 38, "CodeText",ExpressionUUID->"5acbb0fa-cddc-4869-a018-d599c393bee1"],
Cell[CellGroupData[{
Cell[511313, 8530, 1001, 20, 29, "Input",ExpressionUUID->"5d7af015-e4bb-466f-bdf6-d8de373cd8e9"],
Cell[512317, 8552, 2520, 40, 376, "Output",ExpressionUUID->"05efa38a-ccdb-4ee9-a5bb-df3923c8f700"]
}, Open  ]],
Cell[514852, 8595, 682, 12, 38, "CodeText",ExpressionUUID->"a8859051-b98e-44a3-b579-c3d56e57cd1e"],
Cell[CellGroupData[{
Cell[515559, 8611, 907, 18, 29, "Input",ExpressionUUID->"5ea1b8aa-02a1-46a1-bf8f-794e694c64e7"],
Cell[516469, 8631, 2392, 33, 376, "Output",ExpressionUUID->"d9068cf3-9efb-4fe3-9f22-a9eed9afa372"]
}, Open  ]],
Cell[518876, 8667, 606, 10, 38, "CodeText",ExpressionUUID->"5bacb8c7-a53a-4a77-9045-7169201206ec"],
Cell[CellGroupData[{
Cell[519507, 8681, 938, 20, 29, "Input",ExpressionUUID->"38326284-39fd-4921-81cf-815a315319a2"],
Cell[520448, 8703, 1872, 38, 468, "Output",ExpressionUUID->"805750b5-e157-4f5a-b8a9-c1003021e2ef"]
}, Open  ]],
Cell[522335, 8744, 701, 12, 38, "CodeText",ExpressionUUID->"56b7d38b-aa0e-4e92-8716-54b540714e5d"],
Cell[CellGroupData[{
Cell[523061, 8760, 967, 19, 51, "Input",ExpressionUUID->"c552233f-49e4-4283-a8b6-4ee7962ee925"],
Cell[524031, 8781, 5397, 104, 407, "Output",ExpressionUUID->"f966664e-b66e-4925-b33b-a813418a96e6"]
}, Open  ]],
Cell[529443, 8888, 831, 14, 59, "CodeText",ExpressionUUID->"b578ceab-39b5-492a-ba7e-78f27a53f278"],
Cell[CellGroupData[{
Cell[530299, 8906, 1374, 30, 75, "Input",ExpressionUUID->"dc7f5bc8-eaf8-4803-8f88-22e3f589c946"],
Cell[531676, 8938, 172586, 6414, 391, "Output",ExpressionUUID->"e55f1e64-4471-4bfc-b6ba-9a81bc91ee5e"]
}, Open  ]],
Cell[704277, 15355, 645, 11, 59, "CodeText",ExpressionUUID->"62d000ed-23c3-4378-ad5d-ad5e9f37b5d4"],
Cell[CellGroupData[{
Cell[704947, 15370, 1022, 22, 33, "Input",ExpressionUUID->"35c0c4c9-2776-4e0a-a5d1-319f67edf658"],
Cell[705972, 15394, 1934, 38, 196, "Output",ExpressionUUID->"4445d1a6-46e5-4068-b937-14b702b25082"]
}, Open  ]],
Cell[707921, 15435, 638, 11, 38, "CodeText",ExpressionUUID->"7688c120-d5cf-4bf5-9367-03194b99a432"],
Cell[CellGroupData[{
Cell[708584, 15450, 1019, 21, 44, "Input",ExpressionUUID->"60612cbd-55d1-4e99-b6df-efe25f8d2f6b"],
Cell[709606, 15473, 14830, 308, 367, "Output",ExpressionUUID->"1a202bbe-0ece-4359-9a69-23633f77121b"]
}, Open  ]],
Cell[724451, 15784, 656, 11, 59, "CodeText",ExpressionUUID->"91d30211-345a-42e2-b907-ccaa61a45016"],
Cell[CellGroupData[{
Cell[725132, 15799, 907, 17, 29, "Input",ExpressionUUID->"ef2b2496-e806-4244-90fb-aa8e1b367464"],
Cell[726042, 15818, 807, 15, 407, "Output",ExpressionUUID->"d3cb7651-67b7-496d-8eba-84ebb7ebe6f3"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[726898, 15839, 163, 3, 68, "Section",ExpressionUUID->"15289483-f97a-4ce9-8060-d19485e93761"],
Cell[727064, 15844, 862, 14, 59, "CodeText",ExpressionUUID->"65988677-9616-4537-9056-6a71fe34d260"],
Cell[CellGroupData[{
Cell[727951, 15862, 972, 21, 29, "Input",ExpressionUUID->"caf82913-b230-47a1-953c-cbf6e1f1a140"],
Cell[728926, 15885, 1943, 39, 468, "Output",ExpressionUUID->"055c5e91-9ead-4592-ab02-cb0e0e668017"]
}, Open  ]],
Cell[730884, 15927, 819, 14, 59, "CodeText",ExpressionUUID->"cc87318f-58c7-41d8-8e49-b1dac081d316"],
Cell[CellGroupData[{
Cell[731728, 15945, 861, 18, 29, "Input",ExpressionUUID->"5be751e6-b90e-4894-8de2-72ebbd628fc8"],
Cell[732592, 15965, 3433, 67, 376, "Output",ExpressionUUID->"c22059e1-d6f2-48fe-87cc-56742e7b5dc0"]
}, Open  ]],
Cell[736040, 16035, 943, 15, 59, "CodeText",ExpressionUUID->"7d0a007d-6ca9-41d6-ae41-d091ee3cea9d"],
Cell[CellGroupData[{
Cell[737008, 16054, 1222, 25, 71, "Input",ExpressionUUID->"5bae3c17-d5e7-47c8-8545-1fb71f5cbd9c"],
Cell[738233, 16081, 175778, 3428, 365, "Output",ExpressionUUID->"00768374-6665-4518-bd74-d69f8f5d0cac"]
}, Open  ]],
Cell[914026, 19512, 940, 15, 38, "CodeText",ExpressionUUID->"6990856a-ae67-4067-8c2e-12fbcc702d7f"],
Cell[CellGroupData[{
Cell[914991, 19531, 1225, 25, 51, "Input",ExpressionUUID->"7e0dae4a-7a2a-4a94-9c02-b2f9a84ba23f"],
Cell[916219, 19558, 112128, 2186, 343, "Output",ExpressionUUID->"51351dd7-d226-475d-b1fd-748cca3d2c17"]
}, Open  ]],
Cell[1028362, 21747, 944, 15, 59, "CodeText",ExpressionUUID->"ca9c45d1-e686-48bd-9543-c3eba81d1704"],
Cell[CellGroupData[{
Cell[1029331, 21766, 1085, 20, 29, "Input",ExpressionUUID->"4d0887e5-6ee8-4123-821a-c9bdadbb30f9"],
Cell[1030419, 21788, 899, 16, 419, "Output",ExpressionUUID->"668bc3c2-8088-44b8-b127-f703115f2200"]
}, Open  ]],
Cell[1031333, 21807, 978, 16, 59, "CodeText",ExpressionUUID->"558c31b1-d881-4d6a-b573-0cdf1601ccc8"],
Cell[CellGroupData[{
Cell[1032336, 21827, 1040, 19, 29, "Input",ExpressionUUID->"b8ede543-a283-492d-a090-97f49cd22ca8"],
Cell[1033379, 21848, 2709, 47, 386, "Output",ExpressionUUID->"ff6d62d3-480c-44a7-af04-ba33597c0aee"]
}, Open  ]]
}, Open  ]]
}
]
*)

