(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    913152,      17774]
NotebookOptionsPosition[    906176,      17656]
NotebookOutlinePosition[    906610,      17673]
CellTagsIndexPosition[    906567,      17670]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Lesson", "Section",
 CellChangeTimes->{{3.933044945653796*^9, 
  3.93304494744347*^9}},ExpressionUUID->"c7395808-00b9-44e7-b2b4-\
475c364c9325"],

Cell["Create a dataset object:", "CodeText",
 CellChangeTimes->{{3.933044880661512*^9, 3.9330448849037743`*^9}, {
   3.933045010762053*^9, 3.933045016167248*^9}, 3.933089476917685*^9, {
   3.934873318772355*^9, 3.934873340559256*^9}, {3.934988055612883*^9, 
   3.934988070412993*^9}, {3.9351663107964363`*^9, 3.935166316272831*^9}, {
   3.93556674761861*^9, 3.935566751923903*^9}, {3.9355691081759357`*^9, 
   3.935569131047987*^9}, {3.935674371842689*^9, 3.935674376119218*^9}, {
   3.9356776101365643`*^9, 3.935677612503272*^9}, {3.935677653856864*^9, 
   3.935677655713052*^9}, {3.935769289376171*^9, 3.935769297056432*^9}, {
   3.936256539442891*^9, 3.936256570212113*^9}, {3.936256667840105*^9, 
   3.936256672507863*^9}, {3.936859477126536*^9, 3.936859489253384*^9}, {
   3.936863129088579*^9, 3.9368631345772963`*^9}, {3.9368663648272657`*^9, 
   3.936866369947884*^9}},ExpressionUUID->"849d7174-d0da-438a-b28d-\
4780b381c153"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<x\>\"", "->", "2"}], ",", 
      RowBox[{"\"\<y\>\"", "->", "4"}], ",", 
      RowBox[{"\"\<z\>\"", "->", "6"}]}], "|>"}], ",", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<x\>\"", "->", "11"}], ",", 
      RowBox[{"\"\<y\>\"", "->", "7"}], ",", 
      RowBox[{"\"\<z\>\"", "->", "1"}]}], "|>"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.9330448729199553`*^9, 3.933044876628175*^9}, {
   3.93487332484067*^9, 3.934873342814859*^9}, {3.934988047954281*^9, 
   3.934988052254182*^9}, {3.935166297447146*^9, 3.935166306800384*^9}, {
   3.9355667273565187`*^9, 3.935566734739246*^9}, 3.935569104114254*^9, {
   3.935674364368042*^9, 3.9356743679338427`*^9}, {3.935674440145122*^9, 
   3.935674447640419*^9}, 3.9356747514311323`*^9, 3.935677597338626*^9, 
   3.935677673271533*^9, {3.935769299903405*^9, 3.935769310971045*^9}, 
   3.936256506426607*^9, 3.936859470103771*^9, 3.936863124241221*^9, {
   3.936863238901867*^9, 3.936863242841909*^9}, 3.936866361573007*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"cd2835e9-65f6-4253-b6b5-3b7a0f75847f"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|"x" -> 2, "y" -> 4, "z" -> 6|>, <|
       "x" -> 11, "y" -> 7, "z" -> 1|>}, "AllowEmbedding" -> True, 
     "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "x"} -> 1, {All, "y"} -> 
        1, {All, "z"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "x" -> TypeSystem`PackageScope`AtomShape[34], "y" -> 
            TypeSystem`PackageScope`AtomShape[34], "z" -> 
            TypeSystem`PackageScope`AtomShape[34]|>], 
          DirectedInfinity[1], 3, {All}]], 2, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"x", "y", "z"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer]}], 2], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "x"} -> 1, {All, "y"} -> 
        1, {All, "z"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "x" -> TypeSystem`PackageScope`AtomShape[34], "y" -> 
            TypeSystem`PackageScope`AtomShape[34], "z" -> 
            TypeSystem`PackageScope`AtomShape[34]|>], 
          DirectedInfinity[1], 3, {All}]], 2, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"x", "y", "z"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer]}], 2], "Path" -> {}, "DisplayedRowCount" -> 
     2, "DisplayedColumnCount" -> 3, "DataRowCount" -> 2, "DataColumnCount" -> 
     3, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["x", 
                  Style[
                  "x", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "x"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "x"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["y", 
                  Style[
                  "y", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "y"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "y"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["z", 
                  Style[
                  "z", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "z"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "z"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["x"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["y"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["z"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["11"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["x"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["y"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["z"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{127., {46.1875, 51.8125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{127., {46.1875, 51.8125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.936859471140723*^9, 3.936863247557427*^9, 
  3.936863326477045*^9, 3.936866362797126*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"a215b6fd-22dd-43d2-ae33-bc5676cbce47"]
}, Open  ]],

Cell["Convert dataset into normal lists and associations:", "CodeText",
 CellChangeTimes->{{3.933044880661512*^9, 3.9330448849037743`*^9}, {
   3.933045010762053*^9, 3.933045016167248*^9}, 3.933089476917685*^9, {
   3.934873318772355*^9, 3.934873340559256*^9}, {3.934988055612883*^9, 
   3.934988070412993*^9}, {3.9351663107964363`*^9, 3.935166316272831*^9}, {
   3.93556674761861*^9, 3.935566751923903*^9}, {3.9355691081759357`*^9, 
   3.935569131047987*^9}, {3.935674371842689*^9, 3.935674376119218*^9}, {
   3.9356776101365643`*^9, 3.935677612503272*^9}, {3.935677653856864*^9, 
   3.935677655713052*^9}, {3.935769289376171*^9, 3.935769297056432*^9}, {
   3.936256539442891*^9, 3.936256570212113*^9}, {3.936256667840105*^9, 
   3.936256672507863*^9}, {3.936859477126536*^9, 3.936859489253384*^9}, {
   3.936863129088579*^9, 3.9368631345772963`*^9}, 3.9368634229040003`*^9, {
   3.936866397886519*^9, 
   3.936866407896734*^9}},ExpressionUUID->"d286bcef-25e5-436e-848b-\
57f3c33ef549"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Normal", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.9368632589031982`*^9, 3.936863279165473*^9}, {
  3.936863315704413*^9, 3.936863316770337*^9}, {3.936863351323955*^9, 
  3.936863364577793*^9}, {3.936866387289627*^9, 3.936866390089067*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"9c98bdfe-bbf1-4f7c-bdb9-91f8673a1494"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"x\"\>", "\[Rule]", "2"}], ",", 
     RowBox[{"\<\"y\"\>", "\[Rule]", "4"}], ",", 
     RowBox[{"\<\"z\"\>", "\[Rule]", "6"}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"x\"\>", "\[Rule]", "11"}], ",", 
     RowBox[{"\<\"y\"\>", "\[Rule]", "7"}], ",", 
     RowBox[{"\<\"z\"\>", "\[Rule]", "1"}]}], "\[RightAssociation]"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.936863371162135*^9, 3.9368663907466793`*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"9133e845-d099-4e74-89d0-4672150e396e"]
}, Open  ]],

Cell["Combine the elements of multiple associations", "CodeText",
 CellChangeTimes->{{3.933044880661512*^9, 3.9330448849037743`*^9}, {
   3.933045010762053*^9, 3.933045016167248*^9}, 3.933089476917685*^9, {
   3.934873318772355*^9, 3.934873340559256*^9}, {3.934988055612883*^9, 
   3.934988070412993*^9}, {3.9351663107964363`*^9, 3.935166316272831*^9}, {
   3.93556674761861*^9, 3.935566751923903*^9}, {3.9355691081759357`*^9, 
   3.935569131047987*^9}, {3.935674371842689*^9, 3.935674376119218*^9}, {
   3.9356776101365643`*^9, 3.935677612503272*^9}, {3.935677653856864*^9, 
   3.935677655713052*^9}, {3.935769289376171*^9, 3.935769297056432*^9}, {
   3.936256539442891*^9, 3.936256570212113*^9}, {3.936256667840105*^9, 
   3.936256672507863*^9}, {3.936859477126536*^9, 3.936859489253384*^9}, {
   3.936863129088579*^9, 3.9368631345772963`*^9}, 3.9368634229040003`*^9, {
   3.936863488765271*^9, 3.936863495109717*^9}, {3.9368664752073517`*^9, 
   3.93686648383757*^9}},ExpressionUUID->"4e78c492-55ed-4227-be8c-\
4b129ebc25cf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Catenate", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<x\>\"", "->", "2"}], ",", 
      RowBox[{"\"\<y\>\"", "->", "4"}], ",", 
      RowBox[{"\"\<z\>\"", "->", "6"}]}], "|>"}], ",", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<x\>\"", "->", "11"}], ",", 
      RowBox[{"\"\<y\>\"", "->", "7"}], ",", 
      RowBox[{"\"\<z\>\"", "->", "1"}]}], "|>"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.9368634735315866`*^9, 3.936863475892309*^9}, {
  3.93686642240691*^9, 
  3.9368664427944736`*^9}},ExpressionUUID->"defa2ed9-9f16-4459-9663-\
066883078784"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "4", ",", "6", ",", "11", ",", "7", ",", "1"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.93686348945662*^9, 3.9368664254681597`*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"5b7202de-6488-4acf-b436-3064eb8a8e48"]
}, Open  ]],

Cell["\<\
@* represents the composition of functions applied right-to-left:\
\>", "CodeText",
 CellChangeTimes->{{3.933044880661512*^9, 3.9330448849037743`*^9}, {
   3.933045010762053*^9, 3.933045016167248*^9}, 3.933089476917685*^9, {
   3.934873318772355*^9, 3.934873340559256*^9}, {3.934988055612883*^9, 
   3.934988070412993*^9}, {3.9351663107964363`*^9, 3.935166316272831*^9}, {
   3.93556674761861*^9, 3.935566751923903*^9}, {3.9355691081759357`*^9, 
   3.935569131047987*^9}, {3.935674371842689*^9, 3.935674376119218*^9}, {
   3.9356776101365643`*^9, 3.935677612503272*^9}, {3.935677653856864*^9, 
   3.935677655713052*^9}, {3.935769289376171*^9, 3.935769297056432*^9}, {
   3.936256539442891*^9, 3.936256570212113*^9}, {3.936256667840105*^9, 
   3.936256672507863*^9}, {3.936859477126536*^9, 3.936859489253384*^9}, {
   3.936863129088579*^9, 3.9368631345772963`*^9}, 3.9368634229040003`*^9, {
   3.936863488765271*^9, 3.936863495109717*^9}, {3.936863573641296*^9, 
   3.936863584842311*^9}, {3.936866528793798*^9, 
   3.936866545170245*^9}},ExpressionUUID->"35ce2d57-df77-434a-a50d-\
d75767b84ba9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"f", "@*", "g", "@*", "h"}], ")"}], "[", "x", "]"}]], "Input",
 CellChangeTimes->{{3.936863555704199*^9, 3.936863555704615*^9}, 
   3.936866508247311*^9},
 CellLabel->"In[4]:=",ExpressionUUID->"cdd2d8f1-dabf-4b1c-ae2b-e17ec60b2331"],

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"g", "[", 
   RowBox[{"h", "[", "x", "]"}], "]"}], "]"}]], "Output",
 CellChangeTimes->{3.9368635755031233`*^9, 3.936866509221505*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"0dc5ac50-5278-42f7-aec4-e95d43d26080"]
}, Open  ]],

Cell["\<\
/* represents the composition of functions applied left-to-right:\
\>", "CodeText",
 CellChangeTimes->{{3.933044880661512*^9, 3.9330448849037743`*^9}, {
   3.933045010762053*^9, 3.933045016167248*^9}, 3.933089476917685*^9, {
   3.934873318772355*^9, 3.934873340559256*^9}, {3.934988055612883*^9, 
   3.934988070412993*^9}, {3.9351663107964363`*^9, 3.935166316272831*^9}, {
   3.93556674761861*^9, 3.935566751923903*^9}, {3.9355691081759357`*^9, 
   3.935569131047987*^9}, {3.935674371842689*^9, 3.935674376119218*^9}, {
   3.9356776101365643`*^9, 3.935677612503272*^9}, {3.935677653856864*^9, 
   3.935677655713052*^9}, {3.935769289376171*^9, 3.935769297056432*^9}, {
   3.936256539442891*^9, 3.936256570212113*^9}, {3.936256667840105*^9, 
   3.936256672507863*^9}, {3.936859477126536*^9, 3.936859489253384*^9}, {
   3.936863129088579*^9, 3.9368631345772963`*^9}, 3.9368634229040003`*^9, {
   3.936863488765271*^9, 3.936863495109717*^9}, {3.936863573641296*^9, 
   3.936863584842311*^9}, {3.93686362864207*^9, 3.936863637757316*^9}, {
   3.936866550699827*^9, 
   3.936866562012423*^9}},ExpressionUUID->"047d07d9-e3b2-4d9c-b16c-\
d1656340897b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"h", "/*", "g", "/*", "f"}], ")"}], "[", "x", "]"}]], "Input",
 CellChangeTimes->{{3.936863613254423*^9, 3.936863613254801*^9}, {
   3.936863645311942*^9, 3.93686365420129*^9}, 3.936866520620799*^9},
 CellLabel->"In[5]:=",ExpressionUUID->"30efa6eb-83c1-43b9-ba0d-321494220d86"],

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"g", "[", 
   RowBox[{"h", "[", "x", "]"}], "]"}], "]"}]], "Output",
 CellChangeTimes->{3.9368636158100777`*^9, 3.936863662813457*^9, 
  3.936866521274822*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"08ff1397-cf1c-4f40-9c3c-602ecb426aab"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Questions", "Section",
 CellChangeTimes->{{3.933044963725752*^9, 
  3.9330449795190353`*^9}},ExpressionUUID->"412ba78e-200d-42a7-a8a0-\
21db1e445122"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"planets", "=", 
  RowBox[{
  "CloudGet", "[", "\"\<http://wolfr.am/7FxLgPm5\>\"", "]"}]}]], "Input",
 CellChangeTimes->{3.936866776306032*^9, 3.936866826880622*^9},
 CellLabel->"In[17]:=",ExpressionUUID->"f1bc10fe-e140-4287-96c0-666f9022b64c"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "Mercury" -> <|
        "Mass" -> Quantity[3.30104`6.*^23, "Kilograms"], "Radius" -> 
         Quantity[1515.9592977014236856756`5., "Miles"], "Moons" -> <||>|>, 
       "Venus" -> <|
        "Mass" -> Quantity[4.867320000000000000000001`6.*^24, "Kilograms"], 
         "Radius" -> Quantity[3760.4452497415095840294`5., "Miles"], 
         "Moons" -> <||>|>, 
       "Earth" -> <|
        "Mass" -> Quantity[5.9721986`8.*^24, "Kilograms"], "Radius" -> 
         Quantity[3958.7608367135926191043`7., "Miles"], 
         "Moons" -> <|
          "Moon" -> <|
            "Mass" -> Quantity[
              7.3459006322855173653772`4.995678626217362*^22, "Kilograms"], 
             "Radius" -> Quantity[1079.6324465123677722102`5., "Miles"]|>|>|>,
        "Mars" -> <|
        "Mass" -> Quantity[6.41693`6.*^23, "Kilograms"], "Radius" -> 
         Quantity[2106.1376560884434900182`5., "Miles"], 
         "Moons" -> <|
          "Deimos" -> <|
            "Mass" -> Quantity[
              1.468340774924336`1.9995659225206786*^15, "Kilograms"], 
             "Radius" -> Quantity[3.8525013918714706117`2., "Miles"]|>, 
           "Phobos" -> <|
            "Mass" -> Quantity[
              1.0724880884600402`3.9586073148417724*^16, "Kilograms"], 
             "Radius" -> Quantity[6.8972202338344070631`3., "Miles"]|>|>|>, 
       "Jupiter" -> <|
        "Mass" -> Quantity[1.89813`6.*^27, "Kilograms"], "Radius" -> 
         Quantity[43440.6814205042551499244`5., "Miles"], 
         "Moons" -> <|
          "Adrastea" -> <|
            "Mass" -> Quantity[
              7.491534565940487`0.9999565727231415*^15, "Kilograms"], 
             "Radius" -> Quantity[5.0952437763461385509`2., "Miles"]|>, 
           "Aitne" -> <|
            "Mass" -> Quantity[
              4.4949207395643`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[0.9320567883560009545`2., "Miles"]|>, 
           "Amalthea" -> <|
            "Mass" -> Quantity[
              2.067663540199574478`2.995678626217367*^18, "Kilograms"], 
             "Radius" -> Quantity[51.8534259922055197645`4., "Miles"]|>, 
           "Ananke" -> <|
            "Mass" -> Quantity[
              2.9966138263761948`1.9995659225206872*^16, "Kilograms"], 
             "Radius" -> Quantity[8.6991966913226755739`2., "Miles"]|>, 
           "Aoede" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.4854847689493358785`2., "Miles"]|>, 
           "Arche" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[0.9320567883560009545`2., "Miles"]|>, 
           "Autonoe" -> <|
            "Mass" -> Quantity[
              8.9898414791287`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[1.2427423844746679391`2., "Miles"]|>, 
           "Callirrhoe" -> <|
            "Mass" -> Quantity[
              8.69018009649097`1.9995659225206872*^14, "Kilograms"], "Radius" -> 
             Quantity[2.6718961266205360693`2., "Miles"]|>, 
           "Callisto" -> <|
            "Mass" -> Quantity[
              1.07567783404752629528633`4.995678626217362*^23, "Kilograms"], 
             "Radius" -> Quantity[1497.6909846496460669689`5., "Miles"]|>, 
           "Carme" -> <|
            "Mass" -> Quantity[
              1.31851008360552575`1.9995659225206786*^17, "Kilograms"], 
             "Radius" -> Quantity[14.2915374214586813013`2., "Miles"]|>, 
           "Carpo" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.8641135767120019088`2., "Miles"]|>, 
           "Chaldene" -> <|
            "Mass" -> Quantity[
              7.4915345659396`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[1.1806052652509345422`2., "Miles"]|>, 
           "Cyllene" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.2427423844746679391`2., "Miles"]|>, 
           "Elara" -> <|
            "Mass" -> Quantity[
              8.6901800964909652`1.9995659225206872*^17, "Kilograms"], 
             "Radius" -> Quantity[26.7189612662053606936`2., "Miles"]|>, 
           "Erinome" -> <|
            "Mass" -> Quantity[
              4.4949207395643`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[0.9941939075797343514`2., "Miles"]|>, 
           "Euanthe" -> <|
            "Mass" -> Quantity[
              4.4949207395643`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[0.9320567883560009545`2., "Miles"]|>, 
           "Eukelade" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.4854847689493358785`2., "Miles"]|>, 
           "Euporie" -> <|
            "Mass" -> Quantity[
              1.4983069131881`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[0.6213711922373339697`2., "Miles"]|>, 
           "Europa" -> <|
            "Mass" -> Quantity[
              4.7986859848371340385365`4.995678626217362*^22, "Kilograms"], 
             "Radius" -> Quantity[969.8361568440308597789`5., "Miles"]|>, 
           "Eurydome" -> <|
            "Mass" -> Quantity[
              4.4949207395643`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[0.9320567883560009545`2., "Miles"]|>, 
           "Ganymede" -> <|
            "Mass" -> Quantity[
              1.48150100386563183602529`4.995678626217362*^23, "Kilograms"], 
             "Radius" -> Quantity[1634.9518810148731408574`5., "Miles"]|>, 
           "Harpalyke" -> <|
            "Mass" -> Quantity[
              1.19864553055047`0.9999565727231415*^14, "Kilograms"], "Radius" -> 
             Quantity[1.3670166229221347332`2., "Miles"]|>, 
           "Hegemone" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.8641135767120019088`2., "Miles"]|>, 
           "Helike" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.4854847689493358785`2., "Miles"]|>, 
           "Hermippe" -> <|
            "Mass" -> Quantity[
              8.9898414791287`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[1.2427423844746679391`2., "Miles"]|>, 
           "Herse" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.2427423844746679391`2., "Miles"]|>, 
           "Himalia" -> <|
            "Mass" -> Quantity[
              6.742381109346438525`1.999565922520683*^18, "Kilograms"], 
             "Radius" -> Quantity[52.8165513401733874181`2., "Miles"]|>, 
           "Io" -> <|
            "Mass" -> Quantity[
              8.9297833448203530011087`4.995678626217362*^22, "Kilograms"], 
             "Radius" -> Quantity[1131.8897637795275590551`5., "Miles"]|>, 
           "Iocaste" -> <|
            "Mass" -> Quantity[
              1.94779898714453`1.9995659225206872*^14, "Kilograms"], "Radius" -> 
             Quantity[1.6155650998170683209`2., "Miles"]|>, 
           "Isonoe" -> <|
            "Mass" -> Quantity[
              7.4915345659396`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[1.1806052652509345422`2., "Miles"]|>, 
           "Kale" -> <|
            "Mass" -> Quantity[
              1.4983069131881`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[0.6213711922373339697`2., "Miles"]|>, 
           "Kallichore" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.2427423844746679391`2., "Miles"]|>, 
           "Kalyke" -> <|
            "Mass" -> Quantity[
              1.94779898714453`1.9995659225206872*^14, "Kilograms"], "Radius" -> 
             Quantity[1.6155650998170683209`2., "Miles"]|>, 
           "Kore" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.2427423844746679391`2., "Miles"]|>, 
           "Leda" -> <|
            "Mass" -> Quantity[
              1.0937640466273112`1.9995659225206872*^16, "Kilograms"], 
             "Radius" -> Quantity[6.2137119223733396961`2., "Miles"]|>, 
           "Lysithea" -> <|
            "Mass" -> Quantity[
              6.2928890353900092`1.999565922520683*^16, "Kilograms"], 
             "Radius" -> Quantity[11.1846814602720114531`2., "Miles"]|>, 
           "Megaclite" -> <|
            "Mass" -> Quantity[
              2.09762967846334`1.9995659225206872*^14, "Kilograms"], "Radius" -> 
             Quantity[1.677702219040801718`2., "Miles"]|>, 
           "Metis" -> <|
            "Mass" -> Quantity[
              1.19864553055047796`0.9999565727231415*^17, "Kilograms"], 
             "Radius" -> Quantity[13.3594806331026803464`3., "Miles"]|>, 
           "Mneme" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.2427423844746679391`2., "Miles"]|>, 
           "Orthosie" -> <|
            "Mass" -> Quantity[
              1.4983069131881`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[0.6213711922373339697`2., "Miles"]|>, 
           "Pasiphae" -> <|
            "Mass" -> Quantity[
              2.9966138263761949`1.9995659225206786*^17, "Kilograms"], 
             "Radius" -> Quantity[18.6411357671200190886`2., "Miles"]|>, 
           "Pasithee" -> <|
            "Mass" -> Quantity[
              1.4983069131881`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[0.6213711922373339697`2., "Miles"]|>, 
           "Praxidike" -> <|
            "Mass" -> Quantity[
              4.34509004824548`1.9995659225206872*^14, "Kilograms"], "Radius" -> 
             Quantity[2.1126620536069354967`2., "Miles"]|>, 
           "S/2000 J11" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.2427423844746679391`2., "Miles"]|>, 
           "S/2003 J10" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.2427423844746679391`2., "Miles"]|>, 
           "S/2003 J12" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[0.6213711922373339697`2., "Miles"]|>, 
           "S/2003 J15" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.2427423844746679391`2., "Miles"]|>, 
           "S/2003 J16" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.2427423844746679391`2., "Miles"]|>, 
           "S/2003 J18" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.2427423844746679391`2., "Miles"]|>, 
           "S/2003 J19" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.2427423844746679391`2., "Miles"]|>, 
           "S/2003 J2" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.2427423844746679391`2., "Miles"]|>, 
           "S/2003 J23" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.2427423844746679391`2., "Miles"]|>, 
           "S/2003 J3" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.2427423844746679391`2., "Miles"]|>, 
           "S/2003 J4" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.2427423844746679391`2., "Miles"]|>, 
           "S/2003 J5" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.4854847689493358785`2., "Miles"]|>, 
           "S/2003 J9" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[0.6213711922373339697`2., "Miles"]|>, 
           "S/2010 J1" -> <|
            "Mass" -> Quantity[1.5`2.*^13, "Kilograms"], "Radius" -> 
             Quantity[0.6213711922373339697`2., "Miles"]|>, 
           "S/2010 J2" -> <|
            "Mass" -> Quantity[1.5`2.*^13, "Kilograms"], "Radius" -> 
             Quantity[0.6213711922373339697`2., "Miles"]|>, 
           "S/2011 J1" -> <|
            "Mass" -> Quantity[1.5`2.*^13, "Kilograms"], "Radius" -> 
             Quantity[0.6213711922373339697`2., "Miles"]|>, 
           "S/2011 J2" -> <|
            "Mass" -> Quantity[1.5`2.*^13, "Kilograms"], "Radius" -> 
             Quantity[0.6213711922373339697`2., "Miles"]|>, 
           "S/2016 J1" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[0.3106855961186669848`2., "Miles"]|>, 
           "S/2017 J1" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[0.6213711922373339697`2., "Miles"]|>, 
           "Sinope" -> <|
            "Mass" -> Quantity[
              7.4915345659404873`1.9995659225206786*^16, "Kilograms"], 
             "Radius" -> Quantity[11.8060526525093454228`2., "Miles"]|>, 
           "Sponde" -> <|
            "Mass" -> Quantity[
              1.4983069131881`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[0.6213711922373339697`2., "Miles"]|>, 
           "Taygete" -> <|
            "Mass" -> Quantity[
              1.6481376045069`1.9995659225206872*^14, "Kilograms"], "Radius" -> 
             Quantity[1.553427980593334924`2., "Miles"]|>, 
           "Thebe" -> <|
            "Mass" -> Quantity[
              1.49830691318809745`1.9995659225206872*^18, "Kilograms"], 
             "Radius" -> Quantity[30.6335997773005647022`3., "Miles"]|>, 
           "Thelxinoe" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.2427423844746679391`2., "Miles"]|>, 
           "Themisto" -> <|
            "Mass" -> Quantity[
              6.89221180066526`1.9995659225206872*^14, "Kilograms"], "Radius" -> 
             Quantity[2.4854847689493358785`2., "Miles"]|>, 
           "Thyone" -> <|
            "Mass" -> Quantity[
              8.9898414791287`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[1.2427423844746679391`2., "Miles"]|>|>|>, 
       "Saturn" -> <|
        "Mass" -> Quantity[5.68319`6.*^26, "Kilograms"], "Radius" -> 
         Quantity[36183.6872663644317187624`5., "Miles"], 
         "Moons" -> <|
          "Aegaeon" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[0.1553427980593334919`2., "Miles"]|>, 
           "Aegir" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.8641135767120019088`2., "Miles"]|>, 
           "Albiorix" -> <|
            "Mass" -> Quantity[
              2.0976296784633363`1.9995659225206872*^16, "Kilograms"], 
             "Radius" -> Quantity[9.941939075797343514`2., "Miles"]|>, 
           "Anthe" -> <|
            "Mass" -> Quantity[5.`1.*^12, "Kilograms"], "Radius" -> 
             Quantity[0.6213711922373339697`1., "Miles"]|>, 
           "Atlas" -> <|
            "Mass" -> Quantity[
              2.097629678463337`1.9995659225206786*^15, "Kilograms"], 
             "Radius" -> Quantity[6.2137119223733396961`2., "Miles"]|>, 
           "Bebhionn" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.8641135767120019088`2., "Miles"]|>, 
           "Bergelmir" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.8641135767120019088`2., "Miles"]|>, 
           "Bestla" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.8641135767120019088`2., "Miles"]|>, 
           "Calypso" -> <|
            "Mass" -> Quantity[
              3.595936591651433`1.9995659225206872*^15, "Kilograms"], 
             "Radius" -> Quantity[5.9030263262546727113`2., "Miles"]|>, 
           "Daphnis" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.4233476497256024816`2., "Miles"]|>, 
           "Dione" -> <|
            "Mass" -> Quantity[
              1.095457133439213688532`4.6989700043360205*^21, "Kilograms"], 
             "Radius" -> Quantity[349.5212956335003579097`4., "Miles"]|>, 
           "Enceladus" -> <|
            "Mass" -> Quantity[
              1.08027928440861826137`3.9586073148417764*^20, "Kilograms"], 
             "Radius" -> Quantity[156.7719518014793605344`4., "Miles"]|>, 
           "Epimetheus" -> <|
            "Mass" -> Quantity[
              5.25905726529022205`2.9956786262173543*^17, "Kilograms"], 
             "Radius" -> Quantity[36.2259405074365704286`3., "Miles"]|>, 
           "Erriapo" -> <|
            "Mass" -> Quantity[
              7.64136525725929`1.9995659225206914*^14, "Kilograms"], "Radius" -> 
             Quantity[3.1068559611866698482`1., "Miles"]|>, 
           "Farbauti" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.8641135767120019088`2., "Miles"]|>, 
           "Fenrir" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.2427423844746679391`2., "Miles"]|>, 
           "Fornjot" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.8641135767120019088`2., "Miles"]|>, 
           "Greip" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.8641135767120019088`2., "Miles"]|>, 
           "Hati" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.8641135767120019088`2., "Miles"]|>, 
           "Helene" -> <|
            "Mass" -> Quantity[
              2.5471217524197656`1.9995659225206872*^16, "Kilograms"], 
             "Radius" -> Quantity[9.941939075797343514`2., "Miles"]|>, 
           "Hyperion" -> <|
            "Mass" -> Quantity[
              5.543735578795960565`1.9995659225206872*^18, "Kilograms"], 
             "Radius" -> Quantity[82.6423685675654179591`4., "Miles"]|>, 
           "Hyrrokkin" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.4854847689493358785`2., "Miles"]|>, 
           "Iapetus" -> <|
            "Mass" -> Quantity[
              1.805459830391657427108`4.6989700043360205*^21, "Kilograms"], 
             "Radius" -> Quantity[456.3971406983218006841`4., "Miles"]|>, 
           "Ijiraq" -> <|
            "Mass" -> Quantity[
              1.198645530550478`1.9995659225206872*^15, "Kilograms"], 
             "Radius" -> Quantity[3.7282271534240038177`1., "Miles"]|>, 
           "Janus" -> <|
            "Mass" -> Quantity[
              1.896856552096131371`3.9586073148417764*^18, "Kilograms"], 
             "Radius" -> Quantity[56.1719557782549908535`3., "Miles"]|>, 
           "Jarnsaxa" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.8641135767120019088`2., "Miles"]|>, 
           "Kari" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.8641135767120019088`2., "Miles"]|>, 
           "Kiviuq" -> <|
            "Mass" -> Quantity[
              3.296275209013815`1.9995659225206872*^15, "Kilograms"], 
             "Radius" -> Quantity[4.970969537898671757`1., "Miles"]|>, 
           "Loge" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.8641135767120019088`2., "Miles"]|>, 
           "Methone" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[0.9941939075797343514`2., "Miles"]|>, 
           "Mimas" -> <|
            "Mass" -> Quantity[
              3.7907164903658865482`3.9586073148417764*^19, "Kilograms"], 
             "Radius" -> Quantity[123.5285930167819931599`4., "Miles"]|>, 
           "Mundilfari" -> <|
            "Mass" -> Quantity[
              2.09762967846334`1.9995659225206872*^14, "Kilograms"], "Radius" -> 
             Quantity[2.1747991728306688936`2., "Miles"]|>, 
           "Narvi" -> <|
            "Mass" -> Quantity[
              3.44610590033262`1.9995659225206872*^14, "Kilograms"], "Radius" -> 
             Quantity[2.1747991728306688936`2., "Miles"]|>, 
           "Paaliaq" -> <|
            "Mass" -> Quantity[
              8.240688022534537`1.999565922520683*^15, "Kilograms"], "Radius" -> 
             Quantity[6.8350831146106736658`3., "Miles"]|>, 
           "Pallene" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.6155650998170683209`2., "Miles"]|>, 
           "Pan" -> <|
            "Mass" -> Quantity[
              4.944412813520729`1.9995659225206872*^15, "Kilograms"], 
             "Radius" -> Quantity[7.9535512606378748103`3., "Miles"]|>, 
           "Pandora" -> <|
            "Mass" -> Quantity[
              1.49081537862215657`2.9956786262173587*^17, "Kilograms"], 
             "Radius" -> Quantity[25.2276704048357591665`3., "Miles"]|>, 
           "Phoebe" -> <|
            "Mass" -> Quantity[
              8.287135536843366995`3.9586073148417764*^18, "Kilograms"], 
             "Radius" -> Quantity[66.2381690924998011613`4., "Miles"]|>, 
           "Polydeuces" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[0.7456454306848007635`2., "Miles"]|>, 
           "Prometheus" -> <|
            "Mass" -> Quantity[
              1.86689041383236942`3.9586073148417764*^17, "Kilograms"], 
             "Radius" -> Quantity[29.0801717967072297782`3., "Miles"]|>, 
           "Rhea" -> <|
            "Mass" -> Quantity[
              2.308441461148901741032`4.6989700043360205*^21, "Kilograms"], 
             "Radius" -> Quantity[475.0382764654418197725`4., "Miles"]|>, 
           "S/2004 S12" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.8641135767120019088`2., "Miles"]|>, 
           "S/2004 S13" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.8641135767120019088`2., "Miles"]|>, 
           "S/2004 S17" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.2427423844746679391`2., "Miles"]|>, 
           "S/2004 S7" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.8641135767120019088`2., "Miles"]|>, 
           "S/2006 S1" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.8641135767120019088`2., "Miles"]|>, 
           "S/2006 S3" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.8641135767120019088`2., "Miles"]|>, 
           "S/2007 S2" -> <|
            "Mass" -> Quantity[1.5`2.*^14, "Kilograms"], "Radius" -> 
             Quantity[1.8641135767120019088`1., "Miles"]|>, 
           "S/2007 S3" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.553427980593334924`2., "Miles"]|>, 
           "S/2009 S1" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Missing["NotAvailable"]|>, 
           "Siarnaq" -> <|
            "Mass" -> Quantity[
              3.8955979742890535`1.999565922520683*^16, "Kilograms"], 
             "Radius" -> Quantity[12.4274238447466793923`2., "Miles"]|>, 
           "Skathi" -> <|
            "Mass" -> Quantity[
              3.146444517695`1.9995659225206786*^14, "Kilograms"], "Radius" -> 
             Quantity[2.4854847689493358785`1., "Miles"]|>, 
           "Skoll" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.8641135767120019088`2., "Miles"]|>, 
           "Surtur" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.8641135767120019088`2., "Miles"]|>, 
           "Suttungr" -> <|
            "Mass" -> Quantity[
              2.09762967846334`1.9995659225206872*^14, "Kilograms"], "Radius" -> 
             Quantity[2.1747991728306688936`2., "Miles"]|>, 
           "Tarqeq" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.1747991728306688936`2., "Miles"]|>, 
           "Tarvos" -> <|
            "Mass" -> Quantity[
              2.696952443738576`1.9995659225206786*^15, "Kilograms"], 
             "Radius" -> Quantity[4.6602839417800047721`2., "Miles"]|>, 
           "Telesto" -> <|
            "Mass" -> Quantity[
              7.191873183302868`1.9995659225206872*^15, "Kilograms"], 
             "Radius" -> Quantity[7.4564543068480076355`2., "Miles"]|>, 
           "Tethys" -> <|
            "Mass" -> Quantity[
              6.17452278924814959099`4.6989700043360205*^20, "Kilograms"], 
             "Radius" -> Quantity[333.2413703968822079058`4., "Miles"]|>, 
           "Thrymr" -> <|
            "Mass" -> Quantity[
              2.09762967846334`1.9995659225206872*^14, "Kilograms"], "Radius" -> 
             Quantity[2.1747991728306688936`2., "Miles"]|>, 
           "Titan" -> <|
            "Mass" -> Quantity[
              1.34520841449162446435527`4.958607314841778*^23, "Kilograms"], 
             "Radius" -> Quantity[1600.3415056072536387497`5., "Miles"]|>, 
           "Ymir" -> <|
            "Mass" -> Quantity[
              4.944412813520729`1.9995659225206872*^15, "Kilograms"], 
             "Radius" -> Quantity[5.5923407301360057265`1., "Miles"]|>|>|>, 
       "Uranus" -> <|
        "Mass" -> Quantity[8.68103`6.*^25, "Kilograms"], "Radius" -> 
         Quantity[15759.2161775232641374374`5., "Miles"], 
         "Moons" -> <|
          "Ariel" -> <|
            "Mass" -> Quantity[
              1.352971142608851997243`2.9956786262173587*^21, "Kilograms"], 
             "Radius" -> Quantity[359.711783186192635012`4., "Miles"]|>, 
           "Belinda" -> <|
            "Mass" -> Quantity[
              3.56597045338767194`2.995678626217367*^17, "Kilograms"], 
             "Radius" -> Quantity[25.0412590471645589755`3., "Miles"]|>, 
           "Bianca" -> <|
            "Mass" -> Quantity[
              9.2895028617662042`1.9995659225206872*^16, "Kilograms"], 
             "Radius" -> Quantity[15.9692396404994830191`3., "Miles"]|>, 
           "Caliban" -> <|
            "Mass" -> 
             Quantity[
              7.34170387462167751`1.9995659225206872*^17, "Kilograms"], 
             "Radius" -> Quantity[30.4471884196293645112`2., "Miles"]|>, 
           "Cordelia" -> <|
            "Mass" -> Quantity[
              4.4949207395642923`1.9995659225206872*^16, "Kilograms"], 
             "Radius" -> Quantity[12.4895609639704127894`3., "Miles"]|>, 
           "Cressida" -> <|
            "Mass" -> Quantity[
              3.43112283120074311`2.9956786262173587*^17, "Kilograms"], 
             "Radius" -> Quantity[24.7305734510458919908`3., "Miles"]|>, 
           "Cupid" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.1068559611866698482`2., "Miles"]|>, 
           "Desdemona" -> <|
            "Mass" -> Quantity[
              1.78298522669383596`2.995678626217367*^17, "Kilograms"], 
             "Radius" -> Quantity[19.8838781515946870277`3., "Miles"]|>, 
           "Ferdinand" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[6.2137119223733396961`2., "Miles"]|>, 
           "Francisco" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[6.8350831146106736658`2., "Miles"]|>, 
           "Juliet" -> <|
            "Mass" -> Quantity[
              5.57370171705972251`2.9956786262173543*^17, "Kilograms"], 
             "Radius" -> Quantity[29.0801717967072297782`3., "Miles"]|>, 
           "Mab" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.1068559611866698482`2., "Miles"]|>, 
           "Margaret" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[6.2137119223733396961`2., "Miles"]|>, 
           "Miranda" -> <|
            "Mass" -> Quantity[
              6.5925504180276287794`1.9995659225206872*^19, "Kilograms"], 
             "Radius" -> Quantity[146.5193271295633500358`4., "Miles"]|>, 
           "Oberon" -> <|
            "Mass" -> Quantity[
              3.013095202421263971712`3.9586073148417764*^21, "Kilograms"], 
             "Radius" -> Quantity[473.1120257695060844667`4., "Miles"]|>, 
           "Ophelia" -> <|
            "Mass" -> Quantity[
              5.3939048874771508`1.9995659225206872*^16, "Kilograms"], 
             "Radius" -> Quantity[13.2973435138789469498`3., "Miles"]|>, 
           "Perdita" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[6.2137119223733396961`2., "Miles"]|>, 
           "Portia" -> <|
            "Mass" -> Quantity[
              1.681100356597045339`3.9586073148417764*^18, "Kilograms"], 
             "Radius" -> Quantity[42.0046925952437763461`3., "Miles"]|>, 
           "Prospero" -> <|
            "Mass" -> Quantity[
              2.0976296784633363`1.9995659225206872*^16, "Kilograms"], 
             "Radius" -> Quantity[9.3205678835600095443`2., "Miles"]|>, 
           "Puck" -> <|
            "Mass" -> Quantity[
              2.893230649366216176`3.9586073148417764*^18, "Kilograms"], 
             "Radius" -> Quantity[50.3310665712240515389`2., "Miles"]|>, 
           "Rosalind" -> <|
            "Mass" -> Quantity[
              2.54712175241976567`2.9956786262173587*^17, "Kilograms"], 
             "Radius" -> Quantity[22.3693629205440229062`2., "Miles"]|>, 
           "Setebos" -> <|
            "Mass" -> Quantity[
              2.0976296784633363`1.9995659225206872*^16, "Kilograms"], 
             "Radius" -> Quantity[9.3205678835600095443`2., "Miles"]|>, 
           "Stephano" -> <|
            "Mass" -> Quantity[
              5.99322765275239`0.9999565727231373*^15, "Kilograms"], "Radius" -> 
             Quantity[6.2137119223733396961`2., "Miles"]|>, 
           "Sycorax" -> <|
            "Mass" -> Quantity[
              5.378921818345269844`2.9956786262173627*^18, "Kilograms"], 
             "Radius" -> Quantity[59.0302632625467271138`2., "Miles"]|>, 
           "Titania" -> <|
            "Mass" -> Quantity[
              3.525516166731593299572`3.9586073148417764*^21, "Kilograms"], 
             "Radius" -> Quantity[490.1997335560327686312`4., "Miles"]|>, 
           "Trinculo" -> <|
            "Mass" -> Quantity[
              7.49153456594048`0.9999565727231373*^14, "Kilograms"], "Radius" -> 
             Quantity[3.1068559611866698482`1., "Miles"]|>, 
           "Umbriel" -> <|
            "Mass" -> Quantity[
              1.171676006113092205807`2.9956786262173587*^21, "Kilograms"], 
             "Radius" -> Quantity[363.3157361011691720354`4., "Miles"]|>|>|>, 
       "Neptune" -> <|
        "Mass" -> Quantity[1.0241`6.*^26, "Kilograms"], "Radius" -> 
         Quantity[15299.4014952676369999204`5., "Miles"], 
         "Moons" -> <|
          "Despina" -> <|
            "Mass" -> Quantity[
              2.09762967846333643`1.9995659225206872*^18, "Kilograms"], 
             "Radius" -> Quantity[46.6028394178000477213`2., "Miles"]|>, 
           "Galatea" -> <|
            "Mass" -> Quantity[
              3.745767282970243625`1.9995659225206872*^18, "Kilograms"], 
             "Radius" -> Quantity[54.6806649168853893264`2., "Miles"]|>, 
           "Halimede" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[18.6411357671200190886`2., "Miles"]|>, 
           "Laomedeia" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[12.4274238447466793923`2., "Miles"]|>, 
           "Larissa" -> <|
            "Mass" -> Quantity[
              4.944412813520721585`1.999565922520683*^18, "Kilograms"], 
             "Radius" -> Quantity[60.2730056470213950529`2., "Miles"]|>, 
           "Naiad" -> <|
            "Mass" -> Quantity[
              1.94779898714452669`1.9995659225206872*^17, "Kilograms"], 
             "Radius" -> Quantity[20.5052493438320209974`2., "Miles"]|>, 
           "Nereid" -> <|
            "Mass" -> Quantity[
              3.0865122411674807466`2.9956786262173587*^19, "Kilograms"], 
             "Radius" -> Quantity[105.633102680346774835`3., "Miles"]|>, 
           "Neso" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[18.6411357671200190886`2., "Miles"]|>, 
           "Proteus" -> <|
            "Mass" -> Quantity[
              5.0343112283120074311`2.995678626217367*^19, "Kilograms"], 
             "Radius" -> Quantity[130.4879503698401336197`3., "Miles"]|>, 
           "Psamathe" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[12.4274238447466793923`2., "Miles"]|>, 
           "S/2004 N1" -> <|
            "Mass" -> Quantity[5.`2.*^15, "Kilograms"], "Radius" -> Quantity[
               
               Interval[{
                4.5448630000795355123`1.961079694632928, 
                 6.6398184601924759406`2.0288050906515442}], "Miles"]|>, 
           "Sao" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[12.4274238447466793923`2., "Miles"]|>, 
           "Thalassa" -> <|
            "Mass" -> Quantity[
              3.74576728297024363`1.9995659225206872*^17, "Kilograms"], 
             "Radius" -> Quantity[25.4762188817306927544`2., "Miles"]|>, 
           "Triton" -> <|
            "Mass" -> Quantity[
              2.139432441341284348686`4.6989700043360205*^22, "Kilograms"], 
             "Radius" -> 
             Quantity[840.9637715740077944802`5., "Miles"]|>|>|>|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[5]} -> 1, {All, "Mass"} -> 
        1, {All, "Radius"} -> 1, {All, "Moons"} -> <|{All, "Moons", All, 
            TypeSystem`PackageScope`KeyDummy[4]} -> 
          1, {All, "Moons", All, "Mass"} -> 1, {All, "Moons", All, "Radius"} -> 
          1|>|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[78.4], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "Mass" -> TypeSystem`PackageScope`AtomShape[75], "Radius" -> 
             TypeSystem`PackageScope`AtomShape[75], "Moons" -> 
             TypeSystem`PackageScope`Limited[
               TypeSystem`PackageScope`ColumnShape[
                TypeSystem`PackageScope`KeyValueShape[
                 TypeSystem`PackageScope`AtomShape[78.4], 
                 TypeSystem`PackageScope`Limited[
                  
                  TypeSystem`PackageScope`RowShape[<|
                   "Mass" -> TypeSystem`PackageScope`AtomShape[75], "Radius" -> 
                    TypeSystem`PackageScope`AtomShape[75]|>], 
                  DirectedInfinity[1], 2, {All, "Moons", All}]]], 2, 
               DirectedInfinity[1], {All, "Moons"}]|>], 
           DirectedInfinity[1], 3, {All}]]], 8, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{"Mass", "Radius", "Moons"}, {
         TypeSystem`Atom[
          Quantity[1, "Kilograms"]], 
         TypeSystem`Atom[
          Quantity[1, "Miles"]], 
         TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          TypeSystem`Struct[{"Mass", "Radius"}, {
            TypeSystem`Atom[
             Quantity[1, "Kilograms"]], 
            TypeSystem`Atom[
             Quantity[1, "Miles"]]}], TypeSystem`AnyLength]}], 8], 
     "Meta" -> <|"ID" -> 74754014623759|>, "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[5]} -> 1, {All, "Mass"} -> 
        1, {All, "Radius"} -> 1, {All, "Moons"} -> <|{All, "Moons", All, 
            TypeSystem`PackageScope`KeyDummy[4]} -> 
          1, {All, "Moons", All, "Mass"} -> 1, {All, "Moons", All, "Radius"} -> 
          1|>|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[78.4], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "Mass" -> TypeSystem`PackageScope`AtomShape[75], "Radius" -> 
             TypeSystem`PackageScope`AtomShape[75], "Moons" -> 
             TypeSystem`PackageScope`Limited[
               TypeSystem`PackageScope`ColumnShape[
                TypeSystem`PackageScope`KeyValueShape[
                 TypeSystem`PackageScope`AtomShape[78.4], 
                 TypeSystem`PackageScope`Limited[
                  
                  TypeSystem`PackageScope`RowShape[<|
                   "Mass" -> TypeSystem`PackageScope`AtomShape[75], "Radius" -> 
                    TypeSystem`PackageScope`AtomShape[75]|>], 
                  DirectedInfinity[1], 2, {All, "Moons", All}]]], 2, 
               DirectedInfinity[1], {All, "Moons"}]|>], 
           DirectedInfinity[1], 3, {All}]]], 8, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{"Mass", "Radius", "Moons"}, {
         TypeSystem`Atom[
          Quantity[1, "Kilograms"]], 
         TypeSystem`Atom[
          Quantity[1, "Miles"]], 
         TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          TypeSystem`Struct[{"Mass", "Radius"}, {
            TypeSystem`Atom[
             Quantity[1, "Kilograms"]], 
            TypeSystem`Atom[
             Quantity[1, "Miles"]]}], TypeSystem`AnyLength]}], 8], 
     "Path" -> {}, "DisplayedRowCount" -> 8, "DisplayedColumnCount" -> 3, 
     "DataRowCount" -> 8, "DataColumnCount" -> 3, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Mass", 
                  Style[
                  "Mass", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Mass"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Mass"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Radius", 
                  Style[
                  "Radius", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Radius"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Radius"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Moons", 
                  Style[
                  "Moons", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Moons"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Moons"}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, 
            SpanFromLeft}, {SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Moons", All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Mass", 
                  Style[
                  "Mass", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Moons", All, "Mass"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Moons", All, "Mass"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Radius", 
                  Style[
                  "Radius", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Moons", All, "Radius"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Moons", All, "Radius"}, "ColumnHeader", True], "Mouse"],
               ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Mercury", 
                  Style[
                  "Mercury", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Mercury"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mercury"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"3.30104`6.*^23", "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mercury"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1515.9592977014236856756`5", "\"mi\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mercury"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Spacer[10], 
                   GrayLevel[0.5]], 
                  Style[
                   Style[
                    Spacer[10], 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Mercury"], 
                    Key["Moons"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mercury"], 
                 Key["Moons"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5], 8}], SpanFromLeft, SpanFromLeft}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Venus", 
                  Style[
                  "Venus", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Venus"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Venus"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"4.867320000000000000000001`6.*^24", "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Venus"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"3760.4452497415095840294`5", "\"mi\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Venus"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Spacer[10], 
                   GrayLevel[0.5]], 
                  Style[
                   Style[
                    Spacer[10], 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Venus"], 
                    Key["Moons"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Venus"], 
                 Key["Moons"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5], 8}], SpanFromLeft, SpanFromLeft}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Earth", 
                  Style[
                  "Earth", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Earth"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Earth"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"5.9721986`8.*^24", "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Earth"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"3958.7608367135926191043`7", "\"mi\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Earth"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Moon", 
                  Style[
                  "Moon", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Earth"], 
                    Key["Moons"], 
                    Key["Moon"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Earth"], 
                 Key["Moons"], 
                 Key["Moon"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                RowBox[{
                 "7.3459006322855173653772`4.995678626217362*^22", 
                  "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Earth"], 
                 Key["Moons"], 
                 Key["Moon"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1079.6324465123677722102`5", "\"mi\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Earth"], 
                 Key["Moons"], 
                 Key["Moon"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Mars", 
                  Style[
                  "Mars", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Mars"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"6.41693`6.*^23", "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"2106.1376560884434900182`5", "\"mi\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Deimos", 
                  Style[
                  "Deimos", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Mars"], 
                    Key["Moons"], 
                    Key["Deimos"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"], 
                 Key["Moons"], 
                 Key["Deimos"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                RowBox[{
                 "1.468340774924336`1.9995659225206786*^15", "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"], 
                 Key["Moons"], 
                 Key["Deimos"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"3.8525013918714706117`2", "\"mi\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"], 
                 Key["Moons"], 
                 Key["Deimos"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Phobos", 
                  Style[
                  "Phobos", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Mars"], 
                    Key["Moons"], 
                    Key["Phobos"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"], 
                 Key["Moons"], 
                 Key["Phobos"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                RowBox[{
                 "1.0724880884600402`3.9586073148417724*^16", "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"], 
                 Key["Moons"], 
                 Key["Phobos"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"6.8972202338344070631`3", "\"mi\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"], 
                 Key["Moons"], 
                 Key["Phobos"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Jupiter", 
                  Style[
                  "Jupiter", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Jupiter"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.89813`6.*^27", "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"43440.6814205042551499244`5", "\"mi\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Adrastea", 
                  Style[
                  "Adrastea", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Jupiter"], 
                    Key["Moons"], 
                    Key["Adrastea"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"], 
                 Key["Moons"], 
                 Key["Adrastea"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                RowBox[{
                 "7.491534565940487`0.9999565727231415*^15", "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"], 
                 Key["Moons"], 
                 Key["Adrastea"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"5.0952437763461385509`2", "\"mi\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"], 
                 Key["Moons"], 
                 Key["Adrastea"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Aitne", 
                  Style[
                  "Aitne", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Jupiter"], 
                    Key["Moons"], 
                    Key["Aitne"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"], 
                 Key["Moons"], 
                 Key["Aitne"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"4.4949207395643`0.9999565727231415*^13", "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"], 
                 Key["Moons"], 
                 Key["Aitne"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"0.9320567883560009545`2", "\"mi\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"], 
                 Key["Moons"], 
                 Key["Aitne"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["69 total \:203a ", ""], 
                  Style[
                   Superscript["69 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Jupiter"], 
                    Key["Moons"]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"], 
                 Key["Moons"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, "Moons"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, "Moons"}]], MenuEvaluator -> Automatic], 
                 Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All, "Moons"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All, "Moons"}]], MenuEvaluator -> Automatic]}}, 
             Alignment -> {Left, Baseline}, Background -> GrayLevel[0.98]], 
            SpanFromLeft, SpanFromLeft}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Saturn", 
                  Style[
                  "Saturn", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Saturn"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"5.68319`6.*^26", "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"36183.6872663644317187624`5", "\"mi\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Aegaeon", 
                  Style[
                  "Aegaeon", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Saturn"], 
                    Key["Moons"], 
                    Key["Aegaeon"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"], 
                 Key["Moons"], 
                 Key["Aegaeon"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"], 
                 Key["Moons"], 
                 Key["Aegaeon"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"0.1553427980593334919`2", "\"mi\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"], 
                 Key["Moons"], 
                 Key["Aegaeon"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Aegir", 
                  Style[
                  "Aegir", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Saturn"], 
                    Key["Moons"], 
                    Key["Aegir"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"], 
                 Key["Moons"], 
                 Key["Aegir"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"], 
                 Key["Moons"], 
                 Key["Aegir"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.8641135767120019088`2", "\"mi\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"], 
                 Key["Moons"], 
                 Key["Aegir"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["62 total \:203a ", ""], 
                  Style[
                   Superscript["62 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Saturn"], 
                    Key["Moons"]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"], 
                 Key["Moons"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, "Moons"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, "Moons"}]], MenuEvaluator -> Automatic], 
                 Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All, "Moons"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All, "Moons"}]], MenuEvaluator -> Automatic]}}, 
             Alignment -> {Left, Baseline}, Background -> GrayLevel[0.98]], 
            SpanFromLeft, SpanFromLeft}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Uranus", 
                  Style[
                  "Uranus", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Uranus"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Uranus"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"8.68103`6.*^25", "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Uranus"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"15759.2161775232641374374`5", "\"mi\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Uranus"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Ariel", 
                  Style[
                  "Ariel", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Uranus"], 
                    Key["Moons"], 
                    Key["Ariel"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Uranus"], 
                 Key["Moons"], 
                 Key["Ariel"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                RowBox[{
                 "1.352971142608851997243`2.9956786262173587*^21", 
                  "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Uranus"], 
                 Key["Moons"], 
                 Key["Ariel"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"359.711783186192635012`4", "\"mi\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Uranus"], 
                 Key["Moons"], 
                 Key["Ariel"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Belinda", 
                  Style[
                  "Belinda", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Uranus"], 
                    Key["Moons"], 
                    Key["Belinda"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Uranus"], 
                 Key["Moons"], 
                 Key["Belinda"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                RowBox[{
                 "3.56597045338767194`2.995678626217367*^17", "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Uranus"], 
                 Key["Moons"], 
                 Key["Belinda"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"25.0412590471645589755`3", "\"mi\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Uranus"], 
                 Key["Moons"], 
                 Key["Belinda"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["27 total \:203a ", ""], 
                  Style[
                   Superscript["27 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Uranus"], 
                    Key["Moons"]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Uranus"], 
                 Key["Moons"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, "Moons"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, "Moons"}]], MenuEvaluator -> Automatic], 
                 Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All, "Moons"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All, "Moons"}]], MenuEvaluator -> Automatic]}}, 
             Alignment -> {Left, Baseline}, Background -> GrayLevel[0.98]], 
            SpanFromLeft, SpanFromLeft}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Neptune", 
                  Style[
                  "Neptune", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Neptune"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Neptune"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.0241`6.*^26", "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Neptune"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"15299.4014952676369999204`5", "\"mi\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Neptune"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Despina", 
                  Style[
                  "Despina", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Neptune"], 
                    Key["Moons"], 
                    Key["Despina"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Neptune"], 
                 Key["Moons"], 
                 Key["Despina"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                RowBox[{
                 "2.09762967846333643`1.9995659225206872*^18", "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Neptune"], 
                 Key["Moons"], 
                 Key["Despina"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"46.6028394178000477213`2", "\"mi\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Neptune"], 
                 Key["Moons"], 
                 Key["Despina"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Galatea", 
                  Style[
                  "Galatea", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Neptune"], 
                    Key["Moons"], 
                    Key["Galatea"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Neptune"], 
                 Key["Moons"], 
                 Key["Galatea"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                RowBox[{
                 "3.745767282970243625`1.9995659225206872*^18", "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Neptune"], 
                 Key["Moons"], 
                 Key["Galatea"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"54.6806649168853893264`2", "\"mi\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Neptune"], 
                 Key["Moons"], 
                 Key["Galatea"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["14 total \:203a ", ""], 
                  Style[
                   Superscript["14 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Neptune"], 
                    Key["Moons"]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Neptune"], 
                 Key["Moons"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, "Moons"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, "Moons"}]], MenuEvaluator -> Automatic], 
                 Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All, "Moons"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All, "Moons"}]], MenuEvaluator -> Automatic]}}, 
             Alignment -> {Left, Baseline}, Background -> GrayLevel[0.98]], 
            SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{552., {248.1875, 253.8125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{552., {248.1875, 253.8125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.936866827935245*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"c0493922-a6d4-43c3-8b2e-9c4c0a4c3551"]
}, Open  ]],

Cell["\<\
Q1. Make a word cloud of the planets, with weights determined by their number \
of moons.\
\>", "CodeText",
 CellChangeTimes->{{3.933044981954609*^9, 3.9330449829879637`*^9}, {
   3.9330450176513767`*^9, 3.9330450320914183`*^9}, 3.933045639637404*^9, 
   3.9348735218505*^9, 3.934988504825323*^9, {3.9351667086353073`*^9, 
   3.935166715653953*^9}, {3.935566882426754*^9, 3.935566883715104*^9}, 
   3.935569314445806*^9, 3.9356747960130653`*^9, 3.935677720113924*^9, {
   3.935677758458049*^9, 3.935677760068716*^9}, 3.93576933496391*^9, 
   3.936257030940233*^9, 3.936860284463047*^9, 3.936863902596611*^9, 
   3.936866593448216*^9},ExpressionUUID->"884f091f-7369-499f-8995-\
ab333a48e82a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WordCloud", "[", 
  RowBox[{"Normal", "[", 
   RowBox[{"planets", "[", 
    RowBox[{"All", ",", "\"\<Moons\>\"", ",", "Length"}], "]"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9368666376637373`*^9, 3.936866694573888*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"3b155c64-b3f8-419c-a206-a2d085530ae6"],

Cell[BoxData[
 GraphicsBox[{InsetBox[
    StyleBox["\<\"Jupiter\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.3286384976525822],
     FontColor->RGBColor[0.368417, 0.506779, 0.709798]], {0, 0}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"Saturn\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.2996409831538249],
     FontColor->RGBColor[0.880722, 0.611041, 0.142051]], {-0.5, 50.5}, Center,
     Automatic], InsetBox[
    StyleBox["\<\"Uranus\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.15465341066003865`],
     FontColor->RGBColor[0.560181, 0.691569, 0.194885]], {27.5, -37.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"Neptune\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.1008008837337752],
     FontColor->RGBColor[0.922526, 0.385626, 0.209179]], {-0.5, -58.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"Earth\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.046948356807511735`],
     FontColor->RGBColor[0.772079, 0.431554, 0.102387]], {-4.5, 17.5}, Center,
     Automatic], InsetBox[
    StyleBox["\<\"Mars\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.051090858878762774`],
     FontColor->RGBColor[0.528488, 0.470624, 0.701351]], {-28.5, 17.5}, 
    Center, Automatic]},
  DefaultBaseStyle->{"Graphics", FontFamily -> "Source Sans Pro"},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic},
  PlotRange->{{-106., 107.}, {-73., 73.}}]], "Output",
 CellChangeTimes->{{3.936866652819488*^9, 3.9368666952152157`*^9}, 
   3.93686678716356*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"1d9d8aed-609e-4bd8-8274-487e78e71b23"]
}, Open  ]],

Cell["Q2. Make a bar chart of the number of moons for each planet.", \
"CodeText",
 CellChangeTimes->{{3.933044981954609*^9, 3.9330449829879637`*^9}, {
   3.9330450176513767`*^9, 3.933045056297317*^9}, 3.933045638646614*^9, 
   3.9348736144462852`*^9, 3.9349885599800987`*^9, {3.9351668334617157`*^9, 
   3.935166837241722*^9}, 3.935566955184834*^9, 3.9355694364400167`*^9, 
   3.935674904365602*^9, {3.9356777657295*^9, 3.935677768544527*^9}, 
   3.935769378150445*^9, 3.936257364671558*^9, 3.936860333801412*^9, {
   3.936863996442196*^9, 3.936864017060136*^9}, 
   3.93686671603896*^9},ExpressionUUID->"e5039219-650d-45c3-90b2-\
144bb22f0edf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{
   RowBox[{"planets", "[", 
    RowBox[{"All", ",", "\"\<Moons\>\"", ",", "Length"}], "]"}], ",", 
   RowBox[{"ChartLabels", "->", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.936864045666298*^9, 3.9368641210263853`*^9}, {
  3.936866725720343*^9, 3.936866740948357*^9}, {3.936866907099162*^9, 
  3.936866907969088*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"3674a0b2-df8f-47ad-b5f0-3a580da14918"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], 
    PointBox[{{0.39075018208302986`, 0.}, {8.451201747997086, 0.}}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.644], 
     Thickness[Small]}], 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.644], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867`, 0.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{24.429826526198717`, 77.92356386933332}, {143., 
            143.5}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0]& ,
         TagBoxNote->"0"],
        StyleBox["0", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.644], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{1.5487982520029133`, 0.}, {2.4512017479970867`, 0.},
              "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{83.15492852145604, 136.64866586459064`}, {143., 
            143.5}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0]& ,
         TagBoxNote->"0"],
        StyleBox["0", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.644], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{2.5487982520029133`, 0.}, {3.4512017479970867`, 1.},
              "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{141.88003051671333`, 195.37376785984796`}, {
            138.8105374869656, 143.5}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1]& ,
         TagBoxNote->"1"],
        StyleBox["1", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.644], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{3.5487982520029133`, 0.}, {4.451201747997087, 2.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{200.60513251197065`, 254.09886985510528`}, {
            134.62107497393117`, 143.5}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 2]& ,
         TagBoxNote->"2"],
        StyleBox["2", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.644], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{4.548798252002913, 0.}, {5.451201747997087, 69.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{259.330234507228, 
            312.8239718503626}, {-146.0729133993745, 143.5}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 69]& ,
         TagBoxNote->"69"],
        StyleBox["69", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[69, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.644], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{5.548798252002913, 0.}, {6.451201747997087, 62.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{318.0553365024853, 
            371.54907384561994`}, {-116.7466758081336, 143.5}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 62]& ,
         TagBoxNote->"62"],
        StyleBox["62", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[62, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.644], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{6.548798252002913, 0.}, {7.451201747997087, 27.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{376.78043849774264`, 430.27417584087726`}, {
            29.884512148070854`, 143.5}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 27]& ,
         TagBoxNote->"27"],
        StyleBox["27", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[27, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.644], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{7.548798252002913, 0.}, {8.451201747997086, 14.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{435.50554049299996`, 488.9992778361345}, {
            84.34752481751822, 143.5}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 14]& ,
         TagBoxNote->"14"],
        StyleBox["14", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[14, {}], "Tooltip"]& ]}}, {}, {}}, {}, {}, {}, {}, 
   StyleBox[
    StyleBox[{
      {Thickness[Tiny], 
       LineBox[{{0.39075018208302986`, 0.}, {8.612410779315367, 0.}}], 
       StyleBox[{}, "GraphicsLabel",
        StripOnInput->False]}, 
      StyleBox[{
        {Thickness[Tiny], 
         LineBox[{{0.5487982520029133, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {0.5487982520029133, 0.}]}],
          LineBox[{{8.451201747997086, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {8.451201747997086, 
            0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {
           LineBox[{{1.4512017479970867`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {1.4512017479970867`, 
              0.}]}], LineBox[{{1.5487982520029133`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {1.5487982520029133`, 
              0.}]}], LineBox[{{2.4512017479970867`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {2.4512017479970867`, 
              0.}]}], LineBox[{{2.5487982520029133`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {2.5487982520029133`, 
              0.}]}], LineBox[{{3.4512017479970867`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {3.4512017479970867`, 
              0.}]}], LineBox[{{3.5487982520029133`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {3.5487982520029133`, 
              0.}]}], 
           LineBox[{{4.451201747997087, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {4.451201747997087, 
              0.}]}], LineBox[{{4.548798252002913, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {4.548798252002913, 
              0.}]}], LineBox[{{5.451201747997087, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {5.451201747997087, 
              0.}]}], LineBox[{{5.548798252002913, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {5.548798252002913, 
              0.}]}], LineBox[{{6.451201747997087, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {6.451201747997087, 
              0.}]}], LineBox[{{6.548798252002913, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {6.548798252002913, 
              0.}]}], LineBox[{{7.451201747997087, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {7.451201747997087, 
              0.}]}], LineBox[{{7.548798252002913, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {7.548798252002913, 
              0.}]}]}, {}}}, 
        StyleBox[
         {Thickness[Tiny], 
          InsetBox["\<\"Mercury\"\>", Offset[{0, -2}, {1., 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], 
          InsetBox["\<\"Venus\"\>", Offset[{0, -2}, {2., 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], 
          InsetBox["\<\"Earth\"\>", Offset[{0, -2}, {3., 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], 
          InsetBox["\<\"Mars\"\>", Offset[{0, -2}, {4., 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], 
          InsetBox["\<\"Jupiter\"\>", Offset[{0, -2}, {5., 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], 
          InsetBox["\<\"Saturn\"\>", Offset[{0, -2}, {6., 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], 
          InsetBox["\<\"Uranus\"\>", Offset[{0, -2}, {7., 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], 
          InsetBox["\<\"Neptune\"\>", 
           Offset[{0, -2}, {7.999999999999999, 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}]}, "GraphicsLabel",
         StripOnInput->False]}, "GraphicsTicks",
       StripOnInput->False]},
     Antialiasing->False], "GraphicsAxes",
    StripOnInput->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.39075018208302986`, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSizeRaw->{960., 1440.},
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{{3.936864074855905*^9, 3.936864126035509*^9}, {
   3.936866732993607*^9, 3.936866741562828*^9}, 3.9368669088258123`*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"16285bcb-c7af-4595-a21b-83bfb69d0076"]
}, Open  ]],

Cell["\<\
Q3. Make a dataset of the masses of the planets, sorted by their number of \
moons.\
\>", "CodeText",
 CellChangeTimes->{{3.933044981954609*^9, 3.9330449829879637`*^9}, {
   3.9330450176513767`*^9, 3.9330450320914183`*^9}, 3.933045639637404*^9, 
   3.9348735218505*^9, 3.934988504825323*^9, {3.9351667086353073`*^9, 
   3.935166715653953*^9}, {3.935566882426754*^9, 3.935566883715104*^9}, 
   3.935569314445806*^9, 3.9356747960130653`*^9, 3.935677720113924*^9, {
   3.935677758458049*^9, 3.935677760068716*^9}, 3.93576933496391*^9, 
   3.935769469791367*^9, 3.93576950484225*^9, 3.9362575069782753`*^9, 
   3.9368606235179577`*^9, 3.936864135632309*^9, {3.936866754119474*^9, 
   3.93686675453997*^9}},ExpressionUUID->"23456585-1a1f-437a-b117-\
66bd5158c5f2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"planets", "[", 
  RowBox[{
   RowBox[{"SortBy", "[", 
    RowBox[{
     RowBox[{"Length", "[", "#Moons", "]"}], "&"}], "]"}], ",", 
   "\"\<Mass\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.933044985463201*^9, 3.933044986750958*^9}, {
   3.9348735468266973`*^9, 3.934873585530764*^9}, {3.9349885069148827`*^9, 
   3.934988512087387*^9}, {3.934988544652212*^9, 3.934988546813466*^9}, {
   3.935166731315803*^9, 3.935166756607051*^9}, {3.935166823735474*^9, 
   3.93516682641851*^9}, {3.9355668969093647`*^9, 3.935566924332152*^9}, {
   3.935569338405479*^9, 3.935569344343958*^9}, {3.935569392929907*^9, 
   3.935569422622797*^9}, {3.935674818954282*^9, 3.935674885096654*^9}, {
   3.93567772474367*^9, 3.935677749282537*^9}, {3.935769363121138*^9, 
   3.935769369300103*^9}, {3.9357695256036587`*^9, 3.9357695468955297`*^9}, {
   3.936257667386806*^9, 3.936257736738884*^9}, {3.936860638533786*^9, 
   3.93686069689256*^9}, {3.936860774450115*^9, 3.936860833223703*^9}, {
   3.9368641532872257`*^9, 3.93686418221288*^9}, {3.936866799175592*^9, 
   3.936866854494432*^9}, 3.9368669174862337`*^9},
 CellLabel->"In[24]:=",ExpressionUUID->"a442f6b8-0bf0-4d62-8439-2daf2cbe50bf"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "Mercury" -> Quantity[3.30104`6.*^23, "Kilograms"], "Venus" -> 
       Quantity[4.867320000000000000000001`6.*^24, "Kilograms"], "Earth" -> 
       Quantity[5.9721986`8.*^24, "Kilograms"], "Mars" -> 
       Quantity[6.41693`6.*^23, "Kilograms"], "Neptune" -> 
       Quantity[1.0241`6.*^26, "Kilograms"], "Uranus" -> 
       Quantity[8.68103`6.*^25, "Kilograms"], "Saturn" -> 
       Quantity[5.68319`6.*^26, "Kilograms"], "Jupiter" -> 
       Quantity[1.89813`6.*^27, "Kilograms"]|>, "AllowEmbedding" -> True, 
     "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[73.5], 
         TypeSystem`PackageScope`AtomShape[75]]], 8, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration[
        "Earth", "Jupiter", "Mars", "Mercury", "Neptune", "Saturn", "Uranus", 
         "Venus"]], 
       TypeSystem`Atom[
        Quantity[1, "Kilograms"]], 8], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[73.5], 
         TypeSystem`PackageScope`AtomShape[75]]], 8, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration[
        "Earth", "Jupiter", "Mars", "Mercury", "Neptune", "Saturn", "Uranus", 
         "Venus"]], 
       TypeSystem`Atom[
        Quantity[1, "Kilograms"]], 8], "Path" -> {}, "DisplayedRowCount" -> 8,
      "DisplayedColumnCount" -> 1, "DataRowCount" -> 8, "DataColumnCount" -> 
     1, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Mercury", 
                  Style[
                  "Mercury", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Mercury"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mercury"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"3.30104`6.*^23", "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mercury"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Venus", 
                  Style[
                  "Venus", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Venus"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Venus"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"4.867320000000000000000001`6.*^24", "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Venus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Earth", 
                  Style[
                  "Earth", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Earth"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Earth"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"5.9721986`8.*^24", "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Earth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Mars", 
                  Style[
                  "Mars", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Mars"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"6.41693`6.*^23", "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Neptune", 
                  Style[
                  "Neptune", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Neptune"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Neptune"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.0241`6.*^26", "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Neptune"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Uranus", 
                  Style[
                  "Uranus", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Uranus"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Uranus"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"8.68103`6.*^25", "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Uranus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Saturn", 
                  Style[
                  "Saturn", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Saturn"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"5.68319`6.*^26", "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Jupiter", 
                  Style[
                  "Jupiter", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Jupiter"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.89813`6.*^27", "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{199., {113.6875, 119.3125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{199., {113.6875, 119.3125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.9368607014690332`*^9, {3.936860805328773*^9, 3.9368608350223007`*^9}, {
   3.936864157506618*^9, 3.936864184785881*^9}, {3.936866800107325*^9, 
   3.936866854891285*^9}, 3.9368669181622*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"db42f723-744c-4ce5-a6ab-74164e4cca73"]
}, Open  ]],

Cell["\<\
Q4. Make a dataset of planets and the mass of each one\[CloseCurlyQuote]s \
most massive moon.\
\>", "CodeText",
 CellChangeTimes->{{3.933044981954609*^9, 3.9330449829879637`*^9}, {
   3.9330450176513767`*^9, 3.9330450320914183`*^9}, 3.933045639637404*^9, 
   3.9348735218505*^9, 3.934988504825323*^9, {3.9351667086353073`*^9, 
   3.935166715653953*^9}, {3.935566882426754*^9, 3.935566883715104*^9}, 
   3.935569314445806*^9, 3.9356747960130653`*^9, 3.935677720113924*^9, {
   3.935677758458049*^9, 3.935677760068716*^9}, 3.93576933496391*^9, 
   3.935769476185972*^9, 3.9357695624999533`*^9, 3.936257772635293*^9, 
   3.936860862302774*^9, 3.936864220588339*^9, {3.93686694466678*^9, 
   3.936866945006627*^9}},ExpressionUUID->"b3de28a9-180c-4b1b-b42b-\
8cf9b6079e85"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"planets", "[", 
  RowBox[{"All", ",", "\"\<Moons\>\"", ",", "Max", ",", "\"\<Mass\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.93686087628067*^9, 3.936860881331697*^9}, {
   3.936860950174176*^9, 3.936861067632256*^9}, 3.9368611307921553`*^9, {
   3.936864239796956*^9, 3.936864258734424*^9}, {3.936866965026724*^9, 
   3.9368669762358637`*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"ac45c90d-629b-46af-8dcf-4bcf0228b9ef"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "Mercury" -> DirectedInfinity[-1], "Venus" -> DirectedInfinity[-1], 
       "Earth" -> Quantity[
        7.3459006322855173653772`4.995678626217362*^22, "Kilograms"], "Mars" -> 
       Quantity[1.0724880884600402`3.9586073148417724*^16, "Kilograms"], 
       "Jupiter" -> 
       Quantity[1.48150100386563183602529`4.995678626217362*^23, "Kilograms"],
        "Saturn" -> 
       Quantity[1.34520841449162446435527`4.958607314841778*^23, "Kilograms"],
        "Uranus" -> 
       Quantity[3.525516166731593299572`3.9586073148417764*^21, "Kilograms"], 
       "Neptune" -> 
       Quantity[
        2.139432441341284348686`4.6989700043360205*^22, "Kilograms"]|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`DocumentShape[<|{"Mercury"} -> 
        TypeSystem`PackageScope`UnknownShape[False], {"Venus"} -> 
        TypeSystem`PackageScope`UnknownShape[False], {"Earth"} -> 
        TypeSystem`PackageScope`AtomShape[75], {"Mars"} -> 
        TypeSystem`PackageScope`AtomShape[75], {"Jupiter"} -> 
        TypeSystem`PackageScope`AtomShape[75], {"Saturn"} -> 
        TypeSystem`PackageScope`AtomShape[75], {"Uranus"} -> 
        TypeSystem`PackageScope`AtomShape[75], {"Neptune"} -> 
        TypeSystem`PackageScope`AtomShape[75]|>, 1], "InitialType" -> 
     TypeSystem`Struct[{
       "Mercury", "Venus", "Earth", "Mars", "Jupiter", "Saturn", "Uranus", 
        "Neptune"}, {TypeSystem`AnyType, TypeSystem`AnyType, 
        TypeSystem`Atom[
         Quantity[1, "Kilograms"]], 
        TypeSystem`Atom[
         Quantity[1, "Kilograms"]], 
        TypeSystem`Atom[
         Quantity[1, "Kilograms"]], 
        TypeSystem`Atom[
         Quantity[1, "Kilograms"]], 
        TypeSystem`Atom[
         Quantity[1, "Kilograms"]], 
        TypeSystem`Atom[
         Quantity[1, "Kilograms"]]}], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`DocumentShape[<|{"Mercury"} -> 
        TypeSystem`PackageScope`UnknownShape[False], {"Venus"} -> 
        TypeSystem`PackageScope`UnknownShape[False], {"Earth"} -> 
        TypeSystem`PackageScope`AtomShape[75], {"Mars"} -> 
        TypeSystem`PackageScope`AtomShape[75], {"Jupiter"} -> 
        TypeSystem`PackageScope`AtomShape[75], {"Saturn"} -> 
        TypeSystem`PackageScope`AtomShape[75], {"Uranus"} -> 
        TypeSystem`PackageScope`AtomShape[75], {"Neptune"} -> 
        TypeSystem`PackageScope`AtomShape[75]|>, 1], "Type" -> 
     TypeSystem`Struct[{
       "Mercury", "Venus", "Earth", "Mars", "Jupiter", "Saturn", "Uranus", 
        "Neptune"}, {TypeSystem`AnyType, TypeSystem`AnyType, 
        TypeSystem`Atom[
         Quantity[1, "Kilograms"]], 
        TypeSystem`Atom[
         Quantity[1, "Kilograms"]], 
        TypeSystem`Atom[
         Quantity[1, "Kilograms"]], 
        TypeSystem`Atom[
         Quantity[1, "Kilograms"]], 
        TypeSystem`Atom[
         Quantity[1, "Kilograms"]], 
        TypeSystem`Atom[
         Quantity[1, "Kilograms"]]}], "Path" -> {}, "DisplayedRowCount" -> 20,
      "DisplayedColumnCount" -> 10, "DataRowCount" -> 8, "DataColumnCount" -> 
     1, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Mercury", 
                  Style[
                  "Mercury", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Mercury"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mercury"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"-", "\[Infinity]"}], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mercury"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Venus", 
                  Style[
                  "Venus", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Venus"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Venus"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"-", "\[Infinity]"}], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Venus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Earth", 
                  Style[
                  "Earth", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Earth"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Earth"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                RowBox[{
                 "7.3459006322855173653772`4.995678626217362*^22", 
                  "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Earth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Mars", 
                  Style[
                  "Mars", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Mars"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                RowBox[{
                 "1.0724880884600402`3.9586073148417724*^16", "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Jupiter", 
                  Style[
                  "Jupiter", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Jupiter"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                RowBox[{
                 "1.48150100386563183602529`4.995678626217362*^23", 
                  "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Saturn", 
                  Style[
                  "Saturn", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Saturn"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                RowBox[{
                 "1.34520841449162446435527`4.958607314841778*^23", 
                  "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Uranus", 
                  Style[
                  "Uranus", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Uranus"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Uranus"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                RowBox[{
                 "3.525516166731593299572`3.9586073148417764*^21", 
                  "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Uranus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Neptune", 
                  Style[
                  "Neptune", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Neptune"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Neptune"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                RowBox[{
                 "2.139432441341284348686`4.6989700043360205*^22", 
                  "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Neptune"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{154., {113.6875, 119.3125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{154., {113.6875, 119.3125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.936860972879656*^9, {3.936861007815588*^9, 3.936861051572537*^9}, 
   3.936861131810215*^9, {3.936864251387177*^9, 3.936864260051466*^9}, 
   3.936866976720231*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"b3bb30de-8fe6-4412-aee6-dac9fd079020"]
}, Open  ]],

Cell["\<\
Q5. Make a dataset of masses of planets, where the planets are sorted by the \
largest mass of their moons.\
\>", "CodeText",
 CellChangeTimes->{{3.933044981954609*^9, 3.9330449829879637`*^9}, {
   3.9330450176513767`*^9, 3.9330450320914183`*^9}, 3.933045639637404*^9, 
   3.9348735218505*^9, 3.934988504825323*^9, {3.9351667086353073`*^9, 
   3.935166715653953*^9}, {3.935566882426754*^9, 3.935566883715104*^9}, 
   3.935569314445806*^9, 3.9356747960130653`*^9, 3.935677720113924*^9, {
   3.935677758458049*^9, 3.935677760068716*^9}, 3.93576933496391*^9, 
   3.935769477158299*^9, 3.935769670542923*^9, 3.936258228428328*^9, 
   3.936861171381878*^9, 3.936864275737718*^9, 
   3.9368670004466*^9},ExpressionUUID->"2e9deab5-d1f3-460a-ae7a-01b1a4efdafd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"planets", "[", 
  RowBox[{
   RowBox[{"SortBy", "[", 
    RowBox[{"planets", "[", 
     RowBox[{"All", ",", "\"\<Moons\>\"", ",", "Max", ",", "\"\<Mass\>\""}], 
     "]"}], "]"}], ",", "\"\<Mass\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.93686445648603*^9, 3.936864469425521*^9}, 
   3.936867026565954*^9, {3.936867058226144*^9, 3.936867102135579*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"cd8e4d79-46aa-42a3-94b2-18a37ef2d1f8"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "Mercury" -> Quantity[3.30104`6.*^23, "Kilograms"], "Mars" -> 
       Quantity[6.41693`6.*^23, "Kilograms"], "Venus" -> 
       Quantity[4.867320000000000000000001`6.*^24, "Kilograms"], "Earth" -> 
       Quantity[5.9721986`8.*^24, "Kilograms"], "Uranus" -> 
       Quantity[8.68103`6.*^25, "Kilograms"], "Neptune" -> 
       Quantity[1.0241`6.*^26, "Kilograms"], "Saturn" -> 
       Quantity[5.68319`6.*^26, "Kilograms"], "Jupiter" -> 
       Quantity[1.89813`6.*^27, "Kilograms"]|>, "AllowEmbedding" -> True, 
     "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[73.5], 
         TypeSystem`PackageScope`AtomShape[75]]], 8, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration[
        "Earth", "Jupiter", "Mars", "Mercury", "Neptune", "Saturn", "Uranus", 
         "Venus"]], 
       TypeSystem`Atom[
        Quantity[1, "Kilograms"]], 8], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[73.5], 
         TypeSystem`PackageScope`AtomShape[75]]], 8, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration[
        "Earth", "Jupiter", "Mars", "Mercury", "Neptune", "Saturn", "Uranus", 
         "Venus"]], 
       TypeSystem`Atom[
        Quantity[1, "Kilograms"]], 8], "Path" -> {}, "DisplayedRowCount" -> 8,
      "DisplayedColumnCount" -> 1, "DataRowCount" -> 8, "DataColumnCount" -> 
     1, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Mercury", 
                  Style[
                  "Mercury", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Mercury"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mercury"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"3.30104`6.*^23", "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mercury"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Mars", 
                  Style[
                  "Mars", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Mars"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"6.41693`6.*^23", "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Venus", 
                  Style[
                  "Venus", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Venus"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Venus"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"4.867320000000000000000001`6.*^24", "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Venus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Earth", 
                  Style[
                  "Earth", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Earth"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Earth"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"5.9721986`8.*^24", "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Earth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Uranus", 
                  Style[
                  "Uranus", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Uranus"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Uranus"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"8.68103`6.*^25", "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Uranus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Neptune", 
                  Style[
                  "Neptune", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Neptune"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Neptune"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.0241`6.*^26", "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Neptune"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Saturn", 
                  Style[
                  "Saturn", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Saturn"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"5.68319`6.*^26", "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Jupiter", 
                  Style[
                  "Jupiter", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Jupiter"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.89813`6.*^27", "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{199., {113.6875, 119.3125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{199., {113.6875, 119.3125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.936864460194001*^9, 3.936864476556712*^9}, 
   3.936867027309156*^9, 3.936867059796794*^9, 3.93686712513098*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"ebcb919c-c63d-4bf3-836e-3f0f69a64152"]
}, Open  ]],

Cell["\<\
Q6. Make a dataset of the median mass of all moons for each planet.\
\>", "CodeText",
 CellChangeTimes->{{3.933044981954609*^9, 3.9330449829879637`*^9}, {
   3.9330450176513767`*^9, 3.9330450320914183`*^9}, 3.933045639637404*^9, 
   3.9348735218505*^9, 3.934988504825323*^9, {3.9351667086353073`*^9, 
   3.935166715653953*^9}, {3.935566882426754*^9, 3.935566883715104*^9}, 
   3.935569314445806*^9, 3.9356747960130653`*^9, 3.935677720113924*^9, {
   3.935677758458049*^9, 3.935677760068716*^9}, 3.93576933496391*^9, 
   3.935769478765683*^9, 3.935769730864194*^9, 3.936258750674499*^9, {
   3.936861377004361*^9, 3.936861377838725*^9}, 3.93686448889429*^9, 
   3.936867157583432*^9},ExpressionUUID->"bfa531d0-8c77-4ec0-8090-\
6e1158c10607"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"planets", "[", 
  RowBox[{"All", ",", "\"\<Moons\>\"", ",", "Median", ",", "\"\<Mass\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQAWIQ3X1JT36D71vHm+wRYNqvJOqnTuBbR9Y/Bv9A9A63
WOlUIP3gNJMMiH5zT0QBRL9ijwLT/NJZinuA9LecySogmrHzuw6Izk/x1QXR
LZKybfVBbx3/LujqBNHrf/psbwDSWxi5d4DoMwdl94HoL28vHwTRVZ1xFluA
9CnxxQ4gWvXM9MVbgXQ318plIDr2QXLSIyBdNEszGURH8YTPANHW73tmgWjX
osZlIPpW2uJVIPrp7IiNIFrpst8mEO11aE38xeC3jgfOmKaB6PQVD2Z8D3nr
WLEkfDGI/igTugZEr3aYvBZEbzkrIvcTSJ8I7FAB0Yc93+f+AtLPFhjmgWgA
7R+okg==
  "],
 CellLabel->"In[31]:=",ExpressionUUID->"3b9abb45-1c92-4b08-b667-4a08eaa64764"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "Mercury" -> Missing["Indeterminate"], "Venus" -> 
       Missing["Indeterminate"], "Earth" -> 
       Quantity[7.3459006322855173653772`4.995678626217362*^22, "Kilograms"], 
       "Mars" -> Quantity[
        6.096610829762369`2.8853273743447083*^15, "Kilograms"], "Jupiter" -> 
       Quantity[1.94779898714453`1.9995659225206872*^14, "Kilograms"], 
       "Saturn" -> 
       Quantity[8.240688022534537`1.999565922520683*^15, "Kilograms"], 
       "Uranus" -> 
       Quantity[3.56597045338767194`2.995678626217367*^17, "Kilograms"], 
       "Neptune" -> 
       Quantity[3.745767282970243625`1.9995659225206872*^18, "Kilograms"]|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`DocumentShape[<|{"Mercury"} -> 
        TypeSystem`PackageScope`UnknownShape[False], {"Venus"} -> 
        TypeSystem`PackageScope`UnknownShape[False], {"Earth"} -> 
        TypeSystem`PackageScope`AtomShape[75], {"Mars"} -> 
        TypeSystem`PackageScope`AtomShape[75], {"Jupiter"} -> 
        TypeSystem`PackageScope`AtomShape[75], {"Saturn"} -> 
        TypeSystem`PackageScope`AtomShape[75], {"Uranus"} -> 
        TypeSystem`PackageScope`AtomShape[75], {"Neptune"} -> 
        TypeSystem`PackageScope`AtomShape[75]|>, 1], "InitialType" -> 
     TypeSystem`Struct[{
       "Mercury", "Venus", "Earth", "Mars", "Jupiter", "Saturn", "Uranus", 
        "Neptune"}, {TypeSystem`UnknownType, TypeSystem`UnknownType, 
        TypeSystem`Atom[
         Quantity[1, "Kilograms"]], 
        TypeSystem`Atom[
         Quantity[1, "Kilograms"]], 
        TypeSystem`Atom[
         Quantity[1, "Kilograms"]], 
        TypeSystem`Atom[
         Quantity[1, "Kilograms"]], 
        TypeSystem`Atom[
         Quantity[1, "Kilograms"]], 
        TypeSystem`Atom[
         Quantity[1, "Kilograms"]]}], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`DocumentShape[<|{"Mercury"} -> 
        TypeSystem`PackageScope`UnknownShape[False], {"Venus"} -> 
        TypeSystem`PackageScope`UnknownShape[False], {"Earth"} -> 
        TypeSystem`PackageScope`AtomShape[75], {"Mars"} -> 
        TypeSystem`PackageScope`AtomShape[75], {"Jupiter"} -> 
        TypeSystem`PackageScope`AtomShape[75], {"Saturn"} -> 
        TypeSystem`PackageScope`AtomShape[75], {"Uranus"} -> 
        TypeSystem`PackageScope`AtomShape[75], {"Neptune"} -> 
        TypeSystem`PackageScope`AtomShape[75]|>, 1], "Type" -> 
     TypeSystem`Struct[{
       "Mercury", "Venus", "Earth", "Mars", "Jupiter", "Saturn", "Uranus", 
        "Neptune"}, {TypeSystem`UnknownType, TypeSystem`UnknownType, 
        TypeSystem`Atom[
         Quantity[1, "Kilograms"]], 
        TypeSystem`Atom[
         Quantity[1, "Kilograms"]], 
        TypeSystem`Atom[
         Quantity[1, "Kilograms"]], 
        TypeSystem`Atom[
         Quantity[1, "Kilograms"]], 
        TypeSystem`Atom[
         Quantity[1, "Kilograms"]], 
        TypeSystem`Atom[
         Quantity[1, "Kilograms"]]}], "Path" -> {}, "DisplayedRowCount" -> 20,
      "DisplayedColumnCount" -> 10, "DataRowCount" -> 8, "DataColumnCount" -> 
     1, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Mercury", 
                  Style[
                  "Mercury", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Mercury"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mercury"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mercury"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Venus", 
                  Style[
                  "Venus", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Venus"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Venus"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Venus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Earth", 
                  Style[
                  "Earth", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Earth"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Earth"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                RowBox[{
                 "7.3459006322855173653772`4.995678626217362*^22", 
                  "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Earth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Mars", 
                  Style[
                  "Mars", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Mars"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                RowBox[{
                 "6.096610829762369`2.8853273743447083*^15", "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Jupiter", 
                  Style[
                  "Jupiter", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Jupiter"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                RowBox[{
                 "1.94779898714453`1.9995659225206872*^14", "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Saturn", 
                  Style[
                  "Saturn", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Saturn"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                RowBox[{
                 "8.240688022534537`1.999565922520683*^15", "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Uranus", 
                  Style[
                  "Uranus", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Uranus"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Uranus"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                RowBox[{
                 "3.56597045338767194`2.995678626217367*^17", "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Uranus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Neptune", 
                  Style[
                  "Neptune", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Neptune"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Neptune"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                RowBox[{
                 "3.745767282970243625`1.9995659225206872*^18", "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Neptune"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{154., {113.6875, 119.3125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{154., {113.6875, 119.3125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.936258856872315*^9, 3.936258866380672*^9}, 
   3.936861405471068*^9, 3.936861463344698*^9, {3.9368615404063168`*^9, 
   3.9368615514530354`*^9}, 3.93686450797407*^9, {3.936864539033133*^9, 
   3.936864550436268*^9}, 3.9368671860706882`*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"73a5528e-85a9-46c0-a8d5-14060260777f"]
}, Open  ]],

Cell["\<\
Q7. For each planet, make a list of moons larger in mass than 0.0001 Earth \
masses.\
\>", "CodeText",
 CellChangeTimes->{{3.933044981954609*^9, 3.9330449829879637`*^9}, {
   3.9330450176513767`*^9, 3.9330450320914183`*^9}, 3.933045639637404*^9, 
   3.9348735218505*^9, 3.934988504825323*^9, {3.9351667086353073`*^9, 
   3.935166715653953*^9}, {3.935566882426754*^9, 3.935566883715104*^9}, 
   3.935569314445806*^9, 3.9356747960130653`*^9, 3.935677720113924*^9, {
   3.935677758458049*^9, 3.935677760068716*^9}, 3.93576933496391*^9, 
   3.935769480823773*^9, 3.935770149629442*^9, 3.93625890579536*^9, 
   3.936861705636621*^9, 3.9368645684077263`*^9, 
   3.936867195958143*^9},ExpressionUUID->"b044dfc6-176e-4aa2-aec7-\
0c5f92e269df"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"planets", "[", 
  RowBox[{"All", ",", "\"\<Moons\>\"", ",", 
   RowBox[{
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{"#Mass", ">", 
       RowBox[{"Quantity", "[", 
        RowBox[{
         RowBox[{"1", "/", "10000"}], ",", "\"\<EarthMass\>\""}], "]"}]}], 
      "&"}], "]"}], "/*", "Keys"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.933044985463201*^9, 3.933044986750958*^9}, {
   3.9348735468266973`*^9, 3.934873585530764*^9}, {3.9349885069148827`*^9, 
   3.934988512087387*^9}, {3.934988544652212*^9, 3.934988546813466*^9}, {
   3.935166731315803*^9, 3.935166756607051*^9}, {3.935166823735474*^9, 
   3.93516682641851*^9}, {3.9355668969093647`*^9, 3.935566924332152*^9}, {
   3.935569338405479*^9, 3.935569344343958*^9}, {3.935569392929907*^9, 
   3.935569422622797*^9}, {3.935674818954282*^9, 3.935674885096654*^9}, {
   3.93567772474367*^9, 3.935677749282537*^9}, {3.935769363121138*^9, 
   3.935769369300103*^9}, {3.935770226363688*^9, 3.935770277716075*^9}, {
   3.936258932675879*^9, 3.9362589780485697`*^9}, 3.9362590621181097`*^9, {
   3.93686172057999*^9, 3.936861815037684*^9}, {3.936864574591065*^9, 
   3.9368646168195753`*^9}, 3.936867290511903*^9},
 CellLabel->"In[32]:=",ExpressionUUID->"9b73ec82-d99e-46d7-b8de-a9db4a37da97"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "Mercury" -> {}, "Venus" -> {}, "Earth" -> {"Moon"}, "Mars" -> {}, 
       "Jupiter" -> {"Callisto", "Europa", "Ganymede", "Io"}, 
       "Saturn" -> {"Dione", "Iapetus", "Rhea", "Tethys", "Titan"}, 
       "Uranus" -> {"Ariel", "Oberon", "Titania", "Umbriel"}, 
       "Neptune" -> {"Triton"}|>, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[73.5], 
         TypeSystem`PackageScope`UnknownShape[False]]], 8, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration[
        "Earth", "Jupiter", "Mars", "Mercury", "Neptune", "Saturn", "Uranus", 
         "Venus"]], 
       TypeSystem`Vector[
        TypeSystem`Atom[String], TypeSystem`AnyLength], 8], "Meta" -> <||>, 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[73.5], 
         TypeSystem`PackageScope`UnknownShape[False]]], 8, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration[
        "Earth", "Jupiter", "Mars", "Mercury", "Neptune", "Saturn", "Uranus", 
         "Venus"]], 
       TypeSystem`Vector[
        TypeSystem`Atom[String], TypeSystem`AnyLength], 8], "Path" -> {}, 
     "DisplayedRowCount" -> 8, "DisplayedColumnCount" -> 1, "DataRowCount" -> 
     8, "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Mercury", 
                  Style[
                  "Mercury", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Mercury"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mercury"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[{}, ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Venus", 
                  Style[
                  "Venus", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Venus"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Venus"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[{}, ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Earth", 
                  Style[
                  "Earth", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Earth"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Earth"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"Moon"}, ShowStringCharacters -> False], 
                  Style[
                   Style[{"Moon"}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Earth"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Earth"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Mars", 
                  Style[
                  "Mars", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Mars"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[{}, ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Jupiter", 
                  Style[
                  "Jupiter", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Jupiter"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"Callisto", "Europa", "Ganymede", "Io"}, 
                   ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"Callisto", "Europa", "Ganymede", "Io"}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Jupiter"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Saturn", 
                  Style[
                  "Saturn", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Saturn"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"Dione", "Iapetus", "Rhea", "Tethys", "Titan"}, 
                   ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"Dione", "Iapetus", "Rhea", "Tethys", "Titan"}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Saturn"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Uranus", 
                  Style[
                  "Uranus", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Uranus"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Uranus"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"Ariel", "Oberon", "Titania", "Umbriel"}, 
                   ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"Ariel", "Oberon", "Titania", "Umbriel"}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Uranus"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Uranus"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Neptune", 
                  Style[
                  "Neptune", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Neptune"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Neptune"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"Triton"}, ShowStringCharacters -> False], 
                  Style[
                   Style[{"Triton"}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Neptune"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Neptune"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{296., {113.6875, 119.3125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{296., {113.6875, 119.3125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.9362590661247463`*^9, {3.936861744368815*^9, 3.936861815573909*^9}, {
   3.936864608948485*^9, 3.936864617268914*^9}, 3.936867291821711*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"62407690-5126-4e42-bbb7-6ff3d51950c5"]
}, Open  ]],

Cell["\<\
Q8. Make a word cloud of countries in Central America, with the names of \
countries proportional to the lengths of the Wikipedia article about them.\
\>", "CodeText",
 CellChangeTimes->{{3.933044981954609*^9, 3.9330449829879637`*^9}, {
   3.9330450176513767`*^9, 3.9330450320914183`*^9}, 3.933045639637404*^9, 
   3.9348735218505*^9, 3.934988504825323*^9, {3.9351667086353073`*^9, 
   3.935166715653953*^9}, {3.935566882426754*^9, 3.935566883715104*^9}, 
   3.935569314445806*^9, 3.9356747960130653`*^9, 3.935677720113924*^9, {
   3.935677758458049*^9, 3.935677760068716*^9}, 3.93576933496391*^9, 
   3.9357694822038927`*^9, 3.9357703086358137`*^9, 3.936259494484939*^9, {
   3.936861845707225*^9, 3.936861847257862*^9}, 3.93686463177466*^9, 
   3.9368673037729177`*^9},ExpressionUUID->"efbcf4dc-c64e-4cfc-9030-\
f237d2f42761"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WordCloud", "[", 
  RowBox[{"Association", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"#", "->", 
      RowBox[{"StringLength", "[", 
       RowBox[{"WikipediaData", "[", "#", "]"}], "]"}]}], "&"}], "/@", 
    RowBox[{"CommonName", "[", 
     RowBox[{"EntityList", "[", 
      TemplateBox[{"\"Central America\"", 
        RowBox[{"EntityClass", "[", 
          RowBox[{"\"Country\"", ",", "\"CentralAmerica\""}], "]"}], 
        "\"EntityClass[\\\"Country\\\", \\\"CentralAmerica\\\"]\"", 
        "\"countries\""},
       "EntityClass"], "]"}], "]"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.933044985463201*^9, 3.933044986750958*^9}, {
   3.9348735468266973`*^9, 3.934873585530764*^9}, {3.9349885069148827`*^9, 
   3.934988512087387*^9}, {3.934988544652212*^9, 3.934988546813466*^9}, {
   3.935166731315803*^9, 3.935166756607051*^9}, {3.935166823735474*^9, 
   3.93516682641851*^9}, {3.9355668969093647`*^9, 3.935566924332152*^9}, {
   3.935569338405479*^9, 3.935569344343958*^9}, {3.935569392929907*^9, 
   3.935569422622797*^9}, {3.935674818954282*^9, 3.935674885096654*^9}, {
   3.93567772474367*^9, 3.935677749282537*^9}, {3.935769363121138*^9, 
   3.935769369300103*^9}, {3.9357703244196672`*^9, 3.935770412960704*^9}, 
   3.936259695100053*^9, {3.936861853058284*^9, 3.936861861577443*^9}, {
   3.9368619062417803`*^9, 3.936861996458783*^9}, 3.936864654842743*^9, {
   3.936867344428001*^9, 3.936867372150215*^9}, {3.936867428899379*^9, 
   3.936867607613203*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"418547b3-9636-48f3-8f38-4f26e78aa16e"],

Cell[BoxData[
 GraphicsBox[{InsetBox[
    StyleBox["\<\"Guatemala\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.22012578616352202`],
     FontColor->RGBColor[0.368417, 0.506779, 0.709798]], {0, 0}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"Nicaragua\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.17428702021236245`],
     FontColor->RGBColor[0.880722, 0.611041, 0.142051]], {-1.5, -46.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"El Salvador\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.1692635227902098],
     FontColor->RGBColor[0.560181, 0.691569, 0.194885]], {-5.5, 43.5}, Center,
     Automatic], InsetBox[
    StyleBox["\<\"Honduras\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.12003428489468713`],
     FontColor->RGBColor[0.528488, 0.470624, 0.701351]], {-0.5, 79.5}, Center,
     Automatic], InsetBox[
    StyleBox["\<\"Belize\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.1515957423828866],
     FontColor->RGBColor[0.922526, 0.385626, 0.209179]], {5.5, -88.5}, Center,
     Automatic], InsetBox[
    StyleBox["\<\"Panama\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.10888823798279015`],
     FontColor->RGBColor[0.772079, 0.431554, 0.102387]], {-0.5, 107.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"Costa Rica\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.031446540880503145`],
     FontColor->RGBColor[0.363898, 0.618501, 0.782349]], {11.5, 57.5}, Center,
     Automatic]},
  DefaultBaseStyle->{"Graphics", FontFamily -> "Source Sans Pro"},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic},
  PlotRange->{{-160., 158.}, {-109., 119.}}]], "Output",
 CellChangeTimes->{
  3.936259700489835*^9, {3.936861853713801*^9, 3.936861863006002*^9}, {
   3.936861978093296*^9, 3.9368619973421164`*^9}, 3.936864688667935*^9, {
   3.936867357502809*^9, 3.93686737304565*^9}, {3.936867472320346*^9, 
   3.936867616059231*^9}},
 CellLabel->"Out[44]=",ExpressionUUID->"d56a9fa0-05bd-4bfd-8eef-7895dccb754b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fireballs", "=", 
  RowBox[{
  "ResourceData", "[", "\"\<Fireballs and Bolides\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.936867638606904*^9, 3.936867638608076*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"c0b8b638-efed-4591-8e3d-02056595680c"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|"PeakBrightness" -> DateObject[{2009, 10, 8}, 
          TimeObject[{2, 57, 0.}, TimeZone -> "GMT"], TimeZone -> "GMT"], 
        "Coordinates" -> GeoPosition[{-4.2, 120.6}], "NearestCity" -> 
        Entity["City", {"Bone", "SulawesiSelatan", "Indonesia"}], "Altitude" -> 
        Quantity[19.1, "Kilometers"], "Velocity" -> 
        Quantity[19.2, "Kilometers"/"Seconds"], "VelocityXComponent" -> 
        Quantity[14, "Kilometers"/"Seconds"], "VelocityYComponent" -> 
        Quantity[-16, "Kilometers"/"Seconds"], "VelocityZComponent" -> 
        Quantity[-6, "Kilometers"/"Seconds"], "TotalRadiatedEnergy" -> 
        Quantity[20000, "Gigajoules"], "CalculatedTotalImpactEnergy" -> 
        Quantity[33, "MetricKilotons"]|>, <|
       "PeakBrightness" -> DateObject[{2009, 11, 21}, 
          TimeObject[{20, 53, 0.}, TimeZone -> "GMT"], TimeZone -> "GMT"], 
        "Coordinates" -> GeoPosition[{-22., 29.2}], "NearestCity" -> 
        Entity["City", {"Kobojango", "Bobonong", "Botswana"}], "Altitude" -> 
        Quantity[38, "Kilometers"], "Velocity" -> 
        Quantity[32.1, "Kilometers"/"Seconds"], "VelocityXComponent" -> 
        Quantity[3, "Kilometers"/"Seconds"], "VelocityYComponent" -> 
        Quantity[-17, "Kilometers"/"Seconds"], "VelocityZComponent" -> 
        Quantity[-27, "Kilometers"/"Seconds"], "TotalRadiatedEnergy" -> 
        Quantity[10000, "Gigajoules"], "CalculatedTotalImpactEnergy" -> 
        Quantity[18, "MetricKilotons"]|>, <|
       "PeakBrightness" -> DateObject[{2010, 12, 25}, 
          TimeObject[{23, 24, 0.}, TimeZone -> "GMT"], TimeZone -> "GMT"], 
        "Coordinates" -> GeoPosition[{38., 158.}], "NearestCity" -> 
        Entity["City", {"Kurilsk", "Sakhalin", "Russia"}], "Altitude" -> 
        Quantity[26, "Kilometers"], "Velocity" -> 
        Quantity[18.1, "Kilometers"/"Seconds"], "VelocityXComponent" -> 
        Quantity[18, "Kilometers"/"Seconds"], "VelocityYComponent" -> 
        Quantity[-2, "Kilometers"/"Seconds"], "VelocityZComponent" -> 
        Quantity[-4, "Kilometers"/"Seconds"], "TotalRadiatedEnergy" -> 
        Quantity[20000, "Gigajoules"], "CalculatedTotalImpactEnergy" -> 
        Quantity[33, "MetricKilotons"]|>, <|
       "PeakBrightness" -> DateObject[{2012, 4, 21}, 
          TimeObject[{16, 8, 23.}, TimeZone -> "GMT"], TimeZone -> "GMT"], 
        "Coordinates" -> GeoPosition[{-15.8, -174.8}], "NearestCity" -> 
        Entity["City", {"Hihifo", "Niuas", "Tonga"}], "Altitude" -> 
        Missing["NotAvailable"], "Velocity" -> Missing["NotAvailable"], 
        "VelocityXComponent" -> Missing["NotAvailable"], "VelocityYComponent" -> 
        Missing["NotAvailable"], "VelocityZComponent" -> 
        Missing["NotAvailable"], "TotalRadiatedEnergy" -> 
        Quantity[143, "Gigajoules"], "CalculatedTotalImpactEnergy" -> 
        Quantity[0.42, "MetricKilotons"]|>, <|
       "PeakBrightness" -> DateObject[{2012, 4, 23}, 
          TimeObject[{22, 1, 10.}, TimeZone -> "GMT"], TimeZone -> "GMT"], 
        "Coordinates" -> GeoPosition[{36.2, 107.4}], "NearestCity" -> 
        Entity["City", {"Pingliang", "Gansu", "China"}], "Altitude" -> 
        Quantity[25.2, "Kilometers"], "Velocity" -> Missing["NotAvailable"], 
        "VelocityXComponent" -> Missing["NotAvailable"], "VelocityYComponent" -> 
        Missing["NotAvailable"], "VelocityZComponent" -> 
        Missing["NotAvailable"], "TotalRadiatedEnergy" -> 
        Quantity[44, "Gigajoules"], "CalculatedTotalImpactEnergy" -> 
        Quantity[0.15, "MetricKilotons"]|>, <|
       "PeakBrightness" -> DateObject[{2012, 5, 4}, 
          TimeObject[{21, 54, 49.}, TimeZone -> "GMT"], TimeZone -> "GMT"], 
        "Coordinates" -> GeoPosition[{76.7, -10.6}], "NearestCity" -> 
        Entity["City", {"Illoqqortoormiut", "Sermersooq", "Greenland"}], 
        "Altitude" -> Missing["NotAvailable"], "Velocity" -> 
        Missing["NotAvailable"], "VelocityXComponent" -> 
        Missing["NotAvailable"], "VelocityYComponent" -> 
        Missing["NotAvailable"], "VelocityZComponent" -> 
        Missing["NotAvailable"], "TotalRadiatedEnergy" -> 
        Quantity[229, "Gigajoules"], "CalculatedTotalImpactEnergy" -> 
        Quantity[0.63, "MetricKilotons"]|>, <|
       "PeakBrightness" -> DateObject[{2012, 5, 15}, 
          TimeObject[{11, 4, 17.}, TimeZone -> "GMT"], TimeZone -> "GMT"], 
        "Coordinates" -> GeoPosition[{-61.8, -135.5}], "NearestCity" -> 
        Entity["City", {"Owenga", "ChathamIslands", "NewZealand"}], 
        "Altitude" -> Quantity[33.3, "Kilometers"], "Velocity" -> 
        Missing["NotAvailable"], "VelocityXComponent" -> 
        Quantity[-0.8, "Kilometers"/"Seconds"], "VelocityYComponent" -> 
        Quantity[1.1, "Kilometers"/"Seconds"], "VelocityZComponent" -> 
        Quantity[17, "Kilometers"/"Seconds"], "TotalRadiatedEnergy" -> 
        Quantity[132, "Gigajoules"], "CalculatedTotalImpactEnergy" -> 
        Quantity[0.39, "MetricKilotons"]|>, <|
       "PeakBrightness" -> DateObject[{2012, 5, 25}, 
          TimeObject[{11, 31, 24.}, TimeZone -> "GMT"], TimeZone -> "GMT"], 
        "Coordinates" -> GeoPosition[{-41.8, -36.2}], "NearestCity" -> 
        Entity["City", {"Grytviken", "FalklandIslands", "FalklandIslands"}], 
        "Altitude" -> Missing["NotAvailable"], "Velocity" -> 
        Missing["NotAvailable"], "VelocityXComponent" -> 
        Missing["NotAvailable"], "VelocityYComponent" -> 
        Missing["NotAvailable"], "VelocityZComponent" -> 
        Missing["NotAvailable"], "TotalRadiatedEnergy" -> 
        Quantity[60, "Gigajoules"], "CalculatedTotalImpactEnergy" -> 
        Quantity[0.19, "MetricKilotons"]|>, <|
       "PeakBrightness" -> DateObject[{2012, 7, 25}, 
          TimeObject[{7, 48, 20.}, TimeZone -> "GMT"], TimeZone -> "GMT"], 
        "Coordinates" -> GeoPosition[{36.4, 41.5}], "NearestCity" -> 
        Entity["City", {"Sinjar", "Nineveh", "Iraq"}], "Altitude" -> 
        Quantity[26.8, "Kilometers"], "Velocity" -> Missing["NotAvailable"], 
        "VelocityXComponent" -> Quantity[0.8, "Kilometers"/"Seconds"], 
        "VelocityYComponent" -> Quantity[2, "Kilometers"/"Seconds"], 
        "VelocityZComponent" -> Quantity[-18.4, "Kilometers"/"Seconds"], 
        "TotalRadiatedEnergy" -> Quantity[133, "Gigajoules"], 
        "CalculatedTotalImpactEnergy" -> Quantity[0.39, "MetricKilotons"]|>, <|
       "PeakBrightness" -> DateObject[{2012, 7, 27}, 
          TimeObject[{4, 19, 50.}, TimeZone -> "GMT"], TimeZone -> "GMT"], 
        "Coordinates" -> GeoPosition[{63.1, 172.3}], "NearestCity" -> 
        Entity["City", {"Anadyr", "Chukotka", "Russia"}], "Altitude" -> 
        Quantity[27.2, "Kilometers"], "Velocity" -> Missing["NotAvailable"], 
        "VelocityXComponent" -> Missing["NotAvailable"], "VelocityYComponent" -> 
        Missing["NotAvailable"], "VelocityZComponent" -> 
        Missing["NotAvailable"], "TotalRadiatedEnergy" -> 
        Quantity[34, "Gigajoules"], "CalculatedTotalImpactEnergy" -> 
        Quantity[0.12, "MetricKilotons"]|>, <|
       "PeakBrightness" -> DateObject[{2012, 8, 26}, 
          TimeObject[{14, 55, 47.}, TimeZone -> "GMT"], TimeZone -> "GMT"], 
        "Coordinates" -> GeoPosition[{11.8, 117.}], "NearestCity" -> 
        Entity["City", {"ElNido", "Palawan", "Philippines"}], "Altitude" -> 
        Quantity[36, "Kilometers"], "Velocity" -> Missing["NotAvailable"], 
        "VelocityXComponent" -> Quantity[5, "Kilometers"/"Seconds"], 
        "VelocityYComponent" -> Quantity[-11.6, "Kilometers"/"Seconds"], 
        "VelocityZComponent" -> Quantity[-0.7, "Kilometers"/"Seconds"], 
        "TotalRadiatedEnergy" -> Quantity[249, "Gigajoules"], 
        "CalculatedTotalImpactEnergy" -> Quantity[0.68, "MetricKilotons"]|>, <|
       "PeakBrightness" -> DateObject[{2012, 8, 27}, 
          TimeObject[{6, 57, 43.}, TimeZone -> "GMT"], TimeZone -> "GMT"], 
        "Coordinates" -> GeoPosition[{-18.3, 64.2}], "NearestCity" -> 
        Entity["City", {"QuatreCocos", "Flacq", "Mauritius"}], "Altitude" -> 
        Quantity[38.7, "Kilometers"], "Velocity" -> Missing["NotAvailable"], 
        "VelocityXComponent" -> Quantity[-8, "Kilometers"/"Seconds"], 
        "VelocityYComponent" -> Quantity[-23.7, "Kilometers"/"Seconds"], 
        "VelocityZComponent" -> Quantity[-14.5, "Kilometers"/"Seconds"], 
        "TotalRadiatedEnergy" -> Quantity[68, "Gigajoules"], 
        "CalculatedTotalImpactEnergy" -> Quantity[0.22, "MetricKilotons"]|>, <|
       "PeakBrightness" -> DateObject[{2012, 9, 10}, 
          TimeObject[{1, 3, 32.}, TimeZone -> "GMT"], TimeZone -> "GMT"], 
        "Coordinates" -> GeoPosition[{-69.8, -111.7}], "NearestCity" -> 
        Entity[
         "City", {
          "RotheraPermanentStationOfTheUK", "SectorClaimedByArgentinaChileUK",
            "Antarctica"}], "Altitude" -> Quantity[23.8, "Kilometers"], 
        "Velocity" -> Missing["NotAvailable"], "VelocityXComponent" -> 
        Quantity[-10.2, "Kilometers"/"Seconds"], "VelocityYComponent" -> 
        Quantity[-5.2, "Kilometers"/"Seconds"], "VelocityZComponent" -> 
        Quantity[12.4, "Kilometers"/"Seconds"], "TotalRadiatedEnergy" -> 
        Quantity[23, "Gigajoules"], "CalculatedTotalImpactEnergy" -> 
        Quantity[0.082, "MetricKilotons"]|>, <|
       "PeakBrightness" -> DateObject[{2012, 9, 11}, 
          TimeObject[{22, 7, 30.}, TimeZone -> "GMT"], TimeZone -> "GMT"], 
        "Coordinates" -> GeoPosition[{-18.9, 105.2}], "NearestCity" -> 
        Entity["City", {
          "TheSettlement", "ChristmasIsland", "ChristmasIsland"}], "Altitude" -> 
        Missing["NotAvailable"], "Velocity" -> Missing["NotAvailable"], 
        "VelocityXComponent" -> Missing["NotAvailable"], "VelocityYComponent" -> 
        Missing["NotAvailable"], "VelocityZComponent" -> 
        Missing["NotAvailable"], "TotalRadiatedEnergy" -> 
        Quantity[52, "Gigajoules"], "CalculatedTotalImpactEnergy" -> 
        Quantity[0.17, "MetricKilotons"]|>, <|
       "PeakBrightness" -> DateObject[{2012, 9, 18}, 
          TimeObject[{19, 34, 39.}, TimeZone -> "GMT"], TimeZone -> "GMT"], 
        "Coordinates" -> GeoPosition[{1.2, -52.2}], "NearestCity" -> 
        Entity["City", {"Mazagao", "Amapa", "Brazil"}], "Altitude" -> 
        Quantity[28.1, "Kilometers"], "Velocity" -> Missing["NotAvailable"], 
        "VelocityXComponent" -> Quantity[-1.9, "Kilometers"/"Seconds"], 
        "VelocityYComponent" -> Quantity[14.1, "Kilometers"/"Seconds"], 
        "VelocityZComponent" -> Quantity[-11.5, "Kilometers"/"Seconds"], 
        "TotalRadiatedEnergy" -> Quantity[244, "Gigajoules"], 
        "CalculatedTotalImpactEnergy" -> Quantity[0.67, "MetricKilotons"]|>, <|
       "PeakBrightness" -> DateObject[{2012, 9, 28}, 
          TimeObject[{5, 44, 12.}, TimeZone -> "GMT"], TimeZone -> "GMT"], 
        "Coordinates" -> GeoPosition[{-6.9, 73.7}], "NearestCity" -> 
        Entity["City", {"Feydhoo", "Siin", "Maldives"}], "Altitude" -> 
        Missing["NotAvailable"], "Velocity" -> Missing["NotAvailable"], 
        "VelocityXComponent" -> Missing["NotAvailable"], "VelocityYComponent" -> 
        Missing["NotAvailable"], "VelocityZComponent" -> 
        Missing["NotAvailable"], "TotalRadiatedEnergy" -> 
        Quantity[38, "Gigajoules"], "CalculatedTotalImpactEnergy" -> 
        Quantity[0.13, "MetricKilotons"]|>, <|
       "PeakBrightness" -> DateObject[{2012, 10, 2}, 
          TimeObject[{16, 38, 38.}, TimeZone -> "GMT"], TimeZone -> "GMT"], 
        "Coordinates" -> GeoPosition[{-8.1, -111.9}], "NearestCity" -> 
        Entity["City", {"Hangaroa", "Valparaiso", "Chile"}], "Altitude" -> 
        Quantity[35, "Kilometers"], "Velocity" -> Missing["NotAvailable"], 
        "VelocityXComponent" -> Quantity[1.4, "Kilometers"/"Seconds"], 
        "VelocityYComponent" -> Quantity[15.3, "Kilometers"/"Seconds"], 
        "VelocityZComponent" -> Quantity[1, "Kilometers"/"Seconds"], 
        "TotalRadiatedEnergy" -> Quantity[470, "Gigajoules"], 
        "CalculatedTotalImpactEnergy" -> Quantity[1.2, "MetricKilotons"]|>, <|
       "PeakBrightness" -> DateObject[{2012, 10, 3}, 
          TimeObject[{22, 50, 12.}, TimeZone -> "GMT"], TimeZone -> "GMT"], 
        "Coordinates" -> GeoPosition[{-41.5, -21.9}], "NearestCity" -> 
        Entity["City", {"Edinburgh", "TristanDaCunha", "SaintHelena"}], 
        "Altitude" -> Missing["NotAvailable"], "Velocity" -> 
        Missing["NotAvailable"], "VelocityXComponent" -> 
        Quantity[-2.4, "Kilometers"/"Seconds"], "VelocityYComponent" -> 
        Quantity[5.5, "Kilometers"/"Seconds"], "VelocityZComponent" -> 
        Quantity[15.9, "Kilometers"/"Seconds"], "TotalRadiatedEnergy" -> 
        Quantity[280, "Gigajoules"], "CalculatedTotalImpactEnergy" -> 
        Quantity[0.75, "MetricKilotons"]|>, <|
       "PeakBrightness" -> DateObject[{2012, 10, 9}, 
          TimeObject[{0, 54, 55.}, TimeZone -> "GMT"], TimeZone -> "GMT"], 
        "Coordinates" -> GeoPosition[{51.2, -84.6}], "NearestCity" -> 
        Entity["City", {"Hearst", "Ontario", "Canada"}], "Altitude" -> 
        Quantity[27.8, "Kilometers"], "Velocity" -> Missing["NotAvailable"], 
        "VelocityXComponent" -> Quantity[3.4, "Kilometers"/"Seconds"], 
        "VelocityYComponent" -> Quantity[12, "Kilometers"/"Seconds"], 
        "VelocityZComponent" -> Quantity[5.1, "Kilometers"/"Seconds"], 
        "TotalRadiatedEnergy" -> Quantity[210, "Gigajoules"], 
        "CalculatedTotalImpactEnergy" -> Quantity[0.58, "MetricKilotons"]|>, <|
       "PeakBrightness" -> DateObject[{2012, 10, 19}, 
          TimeObject[{16, 26, 22.}, TimeZone -> "GMT"], TimeZone -> "GMT"], 
        "Coordinates" -> GeoPosition[{-75.4, 49.6}], "NearestCity" -> 
        Entity["City", {
          "SyowaPermanentStationOfJapan", "SectorClaimedByNorway", 
           "Antarctica"}], "Altitude" -> Quantity[29.3, "Kilometers"], 
        "Velocity" -> Missing["NotAvailable"], "VelocityXComponent" -> 
        Quantity[-2.3, "Kilometers"/"Seconds"], "VelocityYComponent" -> 
        Quantity[-3.9, "Kilometers"/"Seconds"], "VelocityZComponent" -> 
        Quantity[12.4, "Kilometers"/"Seconds"], "TotalRadiatedEnergy" -> 
        Quantity[23, "Gigajoules"], "CalculatedTotalImpactEnergy" -> 
        Quantity[0.082, "MetricKilotons"]|>, <|
       "PeakBrightness" -> DateObject[{2012, 11, 20}, 
          TimeObject[{6, 25, 11.}, TimeZone -> "GMT"], TimeZone -> "GMT"], 
        "Coordinates" -> GeoPosition[{-8., -86.}], "NearestCity" -> 
        Entity["City", {"Paita", "Piura", "Peru"}], "Altitude" -> 
        Missing["NotAvailable"], "Velocity" -> Missing["NotAvailable"], 
        "VelocityXComponent" -> Missing["NotAvailable"], "VelocityYComponent" -> 
        Missing["NotAvailable"], "VelocityZComponent" -> 
        Missing["NotAvailable"], "TotalRadiatedEnergy" -> 
        Quantity[120, "Gigajoules"], "CalculatedTotalImpactEnergy" -> 
        Quantity[0.36, "MetricKilotons"]|>, <|
       "PeakBrightness" -> DateObject[{2012, 11, 20}, 
          TimeObject[{20, 37, 31.}, TimeZone -> "GMT"], TimeZone -> "GMT"], 
        "Coordinates" -> GeoPosition[{2.5, 29.6}], "NearestCity" -> 
        Entity["City", {"Watsa", "HautCongo", "DemocraticRepublicCongo"}], 
        "Altitude" -> Quantity[33.3, "Kilometers"], "Velocity" -> 
        Missing["NotAvailable"], "VelocityXComponent" -> 
        Quantity[-12.2, "Kilometers"/"Seconds"], "VelocityYComponent" -> 
        Quantity[-5.3, "Kilometers"/"Seconds"], "VelocityZComponent" -> 
        Quantity[5.3, "Kilometers"/"Seconds"], "TotalRadiatedEnergy" -> 
        Quantity[25, "Gigajoules"], "CalculatedTotalImpactEnergy" -> 
        Quantity[0.089, "MetricKilotons"]|>, <|
       "PeakBrightness" -> DateObject[{2012, 12, 30}, 
          TimeObject[{7, 25, 35.}, TimeZone -> "GMT"], TimeZone -> "GMT"], 
        "Coordinates" -> GeoPosition[{17.3, -83.6}], "NearestCity" -> 
        Entity["City", {"BarraPatuca", "GraciasADios", "Honduras"}], 
        "Altitude" -> Missing["NotAvailable"], "Velocity" -> 
        Missing["NotAvailable"], "VelocityXComponent" -> 
        Missing["NotAvailable"], "VelocityYComponent" -> 
        Missing["NotAvailable"], "VelocityZComponent" -> 
        Missing["NotAvailable"], "TotalRadiatedEnergy" -> 
        Quantity[198, "Gigajoules"], "CalculatedTotalImpactEnergy" -> 
        Quantity[0.55, "MetricKilotons"]|>, <|
       "PeakBrightness" -> DateObject[{2013, 1, 12}, 
          TimeObject[{3, 4, 21.}, TimeZone -> "GMT"], TimeZone -> "GMT"], 
        "Coordinates" -> GeoPosition[{-15.1, -155.6}], "NearestCity" -> 
        Entity["City", {"Maupiti", "IlesSousLeVent", "FrenchPolynesia"}], 
        "Altitude" -> Quantity[36.1, "Kilometers"], "Velocity" -> 
        Missing["NotAvailable"], "VelocityXComponent" -> 
        Missing["NotAvailable"], "VelocityYComponent" -> 
        Missing["NotAvailable"], "VelocityZComponent" -> 
        Missing["NotAvailable"], "TotalRadiatedEnergy" -> 
        Quantity[48, "Gigajoules"], "CalculatedTotalImpactEnergy" -> 
        Quantity[0.16, "MetricKilotons"]|>, <|
       "PeakBrightness" -> DateObject[{2013, 1, 25}, 
          TimeObject[{7, 40, 18.}, TimeZone -> "GMT"], TimeZone -> "GMT"], 
        "Coordinates" -> GeoPosition[{60.3, -64.6}], "NearestCity" -> 
        Entity["City", {"Iqaluit", "Nunavut", "Canada"}], "Altitude" -> 
        Missing["NotAvailable"], "Velocity" -> Missing["NotAvailable"], 
        "VelocityXComponent" -> Missing["NotAvailable"], "VelocityYComponent" -> 
        Missing["NotAvailable"], "VelocityZComponent" -> 
        Missing["NotAvailable"], "TotalRadiatedEnergy" -> 
        Quantity[3400, "Gigajoules"], "CalculatedTotalImpactEnergy" -> 
        Quantity[6.9, "MetricKilotons"]|>, <|
       "PeakBrightness" -> DateObject[{2013, 2, 7}, 
          TimeObject[{13, 12, 24.}, TimeZone -> "GMT"], TimeZone -> "GMT"], 
        "Coordinates" -> GeoPosition[{-18.8, -158.6}], "NearestCity" -> 
        Entity["City", {"Amuri", "CookIslands", "CookIslands"}], "Altitude" -> 
        Missing["NotAvailable"], "Velocity" -> Missing["NotAvailable"], 
        "VelocityXComponent" -> Missing["NotAvailable"], "VelocityYComponent" -> 
        Missing["NotAvailable"], "VelocityZComponent" -> 
        Missing["NotAvailable"], "TotalRadiatedEnergy" -> 
        Quantity[65, "Gigajoules"], "CalculatedTotalImpactEnergy" -> 
        Quantity[0.21, "MetricKilotons"]|>, <|
       "PeakBrightness" -> DateObject[{2013, 2, 15}, 
          TimeObject[{3, 20, 33.}, TimeZone -> "GMT"], TimeZone -> "GMT"], 
        "Coordinates" -> GeoPosition[{54.8, 61.1}], "NearestCity" -> 
        Entity["City", {"Pervomayskiy", "Chelyabinsk", "Russia"}], "Altitude" -> 
        Quantity[23.3, "Kilometers"], "Velocity" -> 
        Quantity[18.6, "Kilometers"/"Seconds"], "VelocityXComponent" -> 
        Quantity[12.8, "Kilometers"/"Seconds"], "VelocityYComponent" -> 
        Quantity[-13.3, "Kilometers"/"Seconds"], "VelocityZComponent" -> 
        Quantity[-2.4, "Kilometers"/"Seconds"], "TotalRadiatedEnergy" -> 
        Quantity[375000, "Gigajoules"], "CalculatedTotalImpactEnergy" -> 
        Quantity[440, "MetricKilotons"]|>, <|
       "PeakBrightness" -> DateObject[{2013, 2, 20}, 
          TimeObject[{13, 13, 7.}, TimeZone -> "GMT"], TimeZone -> "GMT"], 
        "Coordinates" -> GeoPosition[{-23., -38.8}], "NearestCity" -> 
        Entity["City", {"SaoJoaoDaBarra", "RioDeJaneiro", "Brazil"}], 
        "Altitude" -> Missing["NotAvailable"], "Velocity" -> 
        Missing["NotAvailable"], "VelocityXComponent" -> 
        Quantity[-11, "Kilometers"/"Seconds"], "VelocityYComponent" -> 
        Quantity[-8, "Kilometers"/"Seconds"], "VelocityZComponent" -> 
        Quantity[-1, "Kilometers"/"Seconds"], "TotalRadiatedEnergy" -> 
        Quantity[32, "Gigajoules"], "CalculatedTotalImpactEnergy" -> 
        Quantity[0.1, "MetricKilotons"]|>, <|
       "PeakBrightness" -> DateObject[{2013, 3, 12}, 
          TimeObject[{10, 32, 59.}, TimeZone -> "GMT"], TimeZone -> "GMT"], 
        "Coordinates" -> GeoPosition[{-32.7, 17.1}], "NearestCity" -> 
        Entity["City", {"Saldanha", "WesternCape", "SouthAfrica"}], 
        "Altitude" -> Quantity[26, "Kilometers"], "Velocity" -> 
        Missing["NotAvailable"], "VelocityXComponent" -> 
        Missing["NotAvailable"], "VelocityYComponent" -> 
        Missing["NotAvailable"], "VelocityZComponent" -> 
        Missing["NotAvailable"], "TotalRadiatedEnergy" -> 
        Quantity[29, "Gigajoules"], "CalculatedTotalImpactEnergy" -> 
        Quantity[0.1, "MetricKilotons"]|>, <|
       "PeakBrightness" -> DateObject[{2013, 4, 21}, 
          TimeObject[{6, 23, 12.}, TimeZone -> "GMT"], TimeZone -> "GMT"], 
        "Coordinates" -> GeoPosition[{-28.1, -64.6}], "NearestCity" -> 
        Entity["City", {
          "SantiagoDelEstero", "SantiagoDelEstero", "Argentina"}], "Altitude" -> 
        Quantity[40.7, "Kilometers"], "Velocity" -> Missing["NotAvailable"], 
        "VelocityXComponent" -> Quantity[5, "Kilometers"/"Seconds"], 
        "VelocityYComponent" -> Quantity[14, "Kilometers"/"Seconds"], 
        "VelocityZComponent" -> Quantity[1, "Kilometers"/"Seconds"], 
        "TotalRadiatedEnergy" -> Quantity[1070, "Gigajoules"], 
        "CalculatedTotalImpactEnergy" -> Quantity[2.5, "MetricKilotons"]|>, <|
       "PeakBrightness" -> DateObject[{2013, 4, 30}, 
          TimeObject[{8, 40, 38.}, TimeZone -> "GMT"], TimeZone -> "GMT"], 
        "Coordinates" -> GeoPosition[{35.5, -30.7}], "NearestCity" -> 
        Entity["City", {"RibeiraGrande", "Acores", "Portugal"}], "Altitude" -> 
        Quantity[21.2, "Kilometers"], "Velocity" -> Missing["NotAvailable"], 
        "VelocityXComponent" -> Quantity[1, "Kilometers"/"Seconds"], 
        "VelocityYComponent" -> Quantity[9, "Kilometers"/"Seconds"], 
        "VelocityZComponent" -> Quantity[-8, "Kilometers"/"Seconds"], 
        "TotalRadiatedEnergy" -> Quantity[5110, "Gigajoules"], 
        "CalculatedTotalImpactEnergy" -> Quantity[10, "MetricKilotons"]|>, <|
       "PeakBrightness" -> DateObject[{2013, 5, 14}, 
          TimeObject[{23, 20, 21.}, TimeZone -> "GMT"], TimeZone -> "GMT"], 
        "Coordinates" -> GeoPosition[{-3., 76.4}], "NearestCity" -> 
        Entity["City", {"Hulhudhoo", "Siin", "Maldives"}], "Altitude" -> 
        Missing["NotAvailable"], "Velocity" -> Missing["NotAvailable"], 
        "VelocityXComponent" -> Missing["NotAvailable"], "VelocityYComponent" -> 
        Missing["NotAvailable"], "VelocityZComponent" -> 
        Missing["NotAvailable"], "TotalRadiatedEnergy" -> 
        Quantity[20, "Gigajoules"], "CalculatedTotalImpactEnergy" -> 
        Quantity[0.073, "MetricKilotons"]|>, <|
       "PeakBrightness" -> DateObject[{2013, 6, 1}, 
          TimeObject[{22, 49, 48.}, TimeZone -> "GMT"], TimeZone -> "GMT"], 
        "Coordinates" -> GeoPosition[{-65.6, 138.4}], "NearestCity" -> 
        Entity["City", {
          "DumontDUrvillePermanentStationOfFrance", "SectorClaimedByFrance", 
           "Antarctica"}], "Altitude" -> Quantity[28.9, "Kilometers"], 
        "Velocity" -> Missing["NotAvailable"], "VelocityXComponent" -> 
        Missing["NotAvailable"], "VelocityYComponent" -> 
        Missing["NotAvailable"], "VelocityZComponent" -> 
        Missing["NotAvailable"], "TotalRadiatedEnergy" -> 
        Quantity[34, "Gigajoules"], "CalculatedTotalImpactEnergy" -> 
        Quantity[0.12, "MetricKilotons"]|>, <|
       "PeakBrightness" -> DateObject[{2013, 7, 26}, 
          TimeObject[{11, 32, 26.}, TimeZone -> "GMT"], TimeZone -> "GMT"], 
        "Coordinates" -> GeoPosition[{21., -178.5}], "NearestCity" -> 
        Entity["City", {"Fagalii", "Tuamasaga", "Samoa"}], "Altitude" -> 
        Quantity[37, "Kilometers"], "Velocity" -> Missing["NotAvailable"], 
        "VelocityXComponent" -> Missing["NotAvailable"], "VelocityYComponent" -> 
        Missing["NotAvailable"], "VelocityZComponent" -> 
        Missing["NotAvailable"], "TotalRadiatedEnergy" -> 
        Quantity[20, "Gigajoules"], "CalculatedTotalImpactEnergy" -> 
        Quantity[0.073, "MetricKilotons"]|>, <|
       "PeakBrightness" -> DateObject[{2013, 7, 27}, 
          TimeObject[{8, 30, 36.}, TimeZone -> "GMT"], TimeZone -> "GMT"], 
        "Coordinates" -> GeoPosition[{0.3, 156.2}], "NearestCity" -> 
        Entity["City", {"Nukuoro", "Pohnpei", "Micronesia"}], "Altitude" -> 
        Quantity[26.5, "Kilometers"], "Velocity" -> Missing["NotAvailable"], 
        "VelocityXComponent" -> Quantity[16, "Kilometers"/"Seconds"], 
        "VelocityYComponent" -> Quantity[14.9, "Kilometers"/"Seconds"], 
        "VelocityZComponent" -> Quantity[-3.3, "Kilometers"/"Seconds"], 
        "TotalRadiatedEnergy" -> Quantity[120, "Gigajoules"], 
        "CalculatedTotalImpactEnergy" -> Quantity[0.36, "MetricKilotons"]|>, <|
       "PeakBrightness" -> DateObject[{2013, 7, 30}, 
          TimeObject[{2, 36, 58.}, TimeZone -> "GMT"], TimeZone -> "GMT"], 
        "Coordinates" -> GeoPosition[{-50.2, 90.2}], "NearestCity" -> 
        Entity["City", {"PortAuxFrancais", "Kerguelen", "France"}], 
        "Altitude" -> Quantity[25.6, "Kilometers"], "Velocity" -> 
        Missing["NotAvailable"], "VelocityXComponent" -> 
        Quantity[15.9, "Kilometers"/"Seconds"], "VelocityYComponent" -> 
        Quantity[-8.6, "Kilometers"/"Seconds"], "VelocityZComponent" -> 
        Quantity[5.1, "Kilometers"/"Seconds"], "TotalRadiatedEnergy" -> 
        Quantity[390, "Gigajoules"], "CalculatedTotalImpactEnergy" -> 
        Quantity[1, "MetricKilotons"]|>, <|
       "PeakBrightness" -> DateObject[{2013, 7, 31}, 
          TimeObject[{3, 50, 14.}, TimeZone -> "GMT"], TimeZone -> "GMT"], 
        "Coordinates" -> GeoPosition[{-31.8, 137.1}], "NearestCity" -> 
        Entity["City", {"PortAugusta", "SouthAustralia", "Australia"}], 
        "Altitude" -> Quantity[29.1, "Kilometers"], "Velocity" -> 
        Missing["NotAvailable"], "VelocityXComponent" -> 
        Quantity[17.7, "Kilometers"/"Seconds"], "VelocityYComponent" -> 
        Quantity[-2.3, "Kilometers"/"Seconds"], "VelocityZComponent" -> 
        Quantity[-0.1, "Kilometers"/"Seconds"], "TotalRadiatedEnergy" -> 
        Quantity[69, "Gigajoules"], "CalculatedTotalImpactEnergy" -> 
        Quantity[0.22, "MetricKilotons"]|>, <|
       "PeakBrightness" -> DateObject[{2013, 8, 12}, 
          TimeObject[{18, 8, 2.}, TimeZone -> "GMT"], TimeZone -> "GMT"], 
        "Coordinates" -> GeoPosition[{-34.4, 118.2}], "NearestCity" -> 
        Entity["City", {"Albany", "WesternAustralia", "Australia"}], 
        "Altitude" -> Quantity[66.6, "Kilometers"], "Velocity" -> 
        Missing["NotAvailable"], "VelocityXComponent" -> 
        Missing["NotAvailable"], "VelocityYComponent" -> 
        Missing["NotAvailable"], "VelocityZComponent" -> 
        Missing["NotAvailable"], "TotalRadiatedEnergy" -> 
        Quantity[44, "Gigajoules"], "CalculatedTotalImpactEnergy" -> 
        Quantity[0.15, "MetricKilotons"]|>, <|
       "PeakBrightness" -> DateObject[{2013, 9, 24}, 
          TimeObject[{15, 31, 16.}, TimeZone -> "GMT"], TimeZone -> "GMT"], 
        "Coordinates" -> GeoPosition[{-10.3, -164.7}], "NearestCity" -> 
        Entity["City", {"Roto", "CookIslands", "CookIslands"}], "Altitude" -> 
        Quantity[40.7, "Kilometers"], "Velocity" -> Missing["NotAvailable"], 
        "VelocityXComponent" -> Missing["NotAvailable"], "VelocityYComponent" -> 
        Missing["NotAvailable"], "VelocityZComponent" -> 
        Missing["NotAvailable"], "TotalRadiatedEnergy" -> 
        Quantity[160, "Gigajoules"], "CalculatedTotalImpactEnergy" -> 
        Quantity[0.46, "MetricKilotons"]|>, <|
       "PeakBrightness" -> DateObject[{2013, 10, 12}, 
          TimeObject[{16, 6, 45.}, TimeZone -> "GMT"], TimeZone -> "GMT"], 
        "Coordinates" -> GeoPosition[{-19.1, -25.}], "NearestCity" -> 
        Entity["City", {"Vitoria", "EspiritoSanto", "Brazil"}], "Altitude" -> 
        Quantity[22.2, "Kilometers"], "Velocity" -> Missing["NotAvailable"], 
        "VelocityXComponent" -> Quantity[-8, "Kilometers"/"Seconds"], 
        "VelocityYComponent" -> Quantity[8.4, "Kilometers"/"Seconds"], 
        "VelocityZComponent" -> Quantity[-5.5, "Kilometers"/"Seconds"], 
        "TotalRadiatedEnergy" -> Quantity[1610, "Gigajoules"], 
        "CalculatedTotalImpactEnergy" -> Quantity[3.5, "MetricKilotons"]|>, <|
       "PeakBrightness" -> DateObject[{2013, 11, 21}, 
          TimeObject[{1, 50, 35.}, TimeZone -> "GMT"], TimeZone -> "GMT"], 
        "Coordinates" -> GeoPosition[{44.7, 35.3}], "NearestCity" -> 
        Entity["City", {"Ordzhonikidze", "Crimea", "Ukraine"}], "Altitude" -> 
        Quantity[59.3, "Kilometers"], "Velocity" -> Missing["NotAvailable"], 
        "VelocityXComponent" -> Quantity[-5, "Kilometers"/"Seconds"], 
        "VelocityYComponent" -> Quantity[-11, "Kilometers"/"Seconds"], 
        "VelocityZComponent" -> Quantity[-2.7, "Kilometers"/"Seconds"], 
        "TotalRadiatedEnergy" -> Quantity[75, "Gigajoules"], 
        "CalculatedTotalImpactEnergy" -> Quantity[0.23, "MetricKilotons"]|>, <|
       "PeakBrightness" -> DateObject[{2013, 12, 8}, 
          TimeObject[{3, 10, 9.}, TimeZone -> "GMT"], TimeZone -> "GMT"], 
        "Coordinates" -> GeoPosition[{32.8, -165.1}], "NearestCity" -> 
        Entity["City", {"Princeville", "Hawaii", "UnitedStates"}], "Altitude" -> 
        Quantity[23.5, "Kilometers"], "Velocity" -> Missing["NotAvailable"], 
        "VelocityXComponent" -> Quantity[2.3, "Kilometers"/"Seconds"], 
        "VelocityYComponent" -> Quantity[2.5, "Kilometers"/"Seconds"], 
        "VelocityZComponent" -> Quantity[-11.3, "Kilometers"/"Seconds"], 
        "TotalRadiatedEnergy" -> Quantity[64, "Gigajoules"], 
        "CalculatedTotalImpactEnergy" -> Quantity[0.2, "MetricKilotons"]|>, <|
       "PeakBrightness" -> DateObject[{2013, 12, 23}, 
          TimeObject[{8, 30, 57.}, TimeZone -> "GMT"], TimeZone -> "GMT"], 
        "Coordinates" -> GeoPosition[{39.5, 2.}], "NearestCity" -> 
        Entity["City", {"Andraitx", "Balears", "Spain"}], "Altitude" -> 
        Quantity[34.3, "Kilometers"], "Velocity" -> Missing["NotAvailable"], 
        "VelocityXComponent" -> Quantity[-1.1, "Kilometers"/"Seconds"], 
        "VelocityYComponent" -> Quantity[11.4, "Kilometers"/"Seconds"], 
        "VelocityZComponent" -> Quantity[-9.9, "Kilometers"/"Seconds"], 
        "TotalRadiatedEnergy" -> Quantity[147, "Gigajoules"], 
        "CalculatedTotalImpactEnergy" -> Quantity[0.43, "MetricKilotons"]|>, <|
       "PeakBrightness" -> DateObject[{2014, 1, 8}, 
          TimeObject[{17, 5, 34.}, TimeZone -> "GMT"], TimeZone -> "GMT"], 
        "Coordinates" -> GeoPosition[{-1.3, 147.6}], "NearestCity" -> 
        Entity["City", {"Lorengau", "Manus", "PapuaNewGuinea"}], "Altitude" -> 
        Quantity[18.7, "Kilometers"], "Velocity" -> Missing["NotAvailable"], 
        "VelocityXComponent" -> Quantity[-3.4, "Kilometers"/"Seconds"], 
        "VelocityYComponent" -> Quantity[-43.5, "Kilometers"/"Seconds"], 
        "VelocityZComponent" -> Quantity[-10.3, "Kilometers"/"Seconds"], 
        "TotalRadiatedEnergy" -> Quantity[31, "Gigajoules"], 
        "CalculatedTotalImpactEnergy" -> Quantity[0.11, "MetricKilotons"]|>, <|
       "PeakBrightness" -> DateObject[{2014, 1, 12}, 
          TimeObject[{16, 0, 48.}, TimeZone -> "GMT"], TimeZone -> "GMT"], 
        "Coordinates" -> GeoPosition[{2.9, 64.4}], "NearestCity" -> 
        Entity["City", {"Mandhoo", "AlifDhaal", "Maldives"}], "Altitude" -> 
        Quantity[37, "Kilometers"], "Velocity" -> Missing["NotAvailable"], 
        "VelocityXComponent" -> Quantity[-5.2, "Kilometers"/"Seconds"], 
        "VelocityYComponent" -> Quantity[-15.1, "Kilometers"/"Seconds"], 
        "VelocityZComponent" -> Quantity[2.6, "Kilometers"/"Seconds"], 
        "TotalRadiatedEnergy" -> Quantity[78, "Gigajoules"], 
        "CalculatedTotalImpactEnergy" -> Quantity[0.24, "MetricKilotons"]|>, <|
       "PeakBrightness" -> DateObject[{2014, 1, 15}, 
          TimeObject[{2, 46, 19.}, TimeZone -> "GMT"], TimeZone -> "GMT"], 
        "Coordinates" -> GeoPosition[{-18.5, 141.8}], "NearestCity" -> 
        Entity["City", {"Normanton", "Queensland", "Australia"}], "Altitude" -> 
        Quantity[29.6, "Kilometers"], "Velocity" -> Missing["NotAvailable"], 
        "VelocityXComponent" -> Missing["NotAvailable"], "VelocityYComponent" -> 
        Missing["NotAvailable"], "VelocityZComponent" -> 
        Missing["NotAvailable"], "TotalRadiatedEnergy" -> 
        Quantity[140, "Gigajoules"], "CalculatedTotalImpactEnergy" -> 
        Quantity[0.41, "MetricKilotons"]|>, <|
       "PeakBrightness" -> DateObject[{2014, 2, 13}, 
          TimeObject[{6, 47, 42.}, TimeZone -> "GMT"], TimeZone -> "GMT"], 
        "Coordinates" -> GeoPosition[{13.3, -110.7}], "NearestCity" -> 
        Entity["City", {"SanPatricio", "Jalisco", "Mexico"}], "Altitude" -> 
        Quantity[25, "Kilometers"], "Velocity" -> Missing["NotAvailable"], 
        "VelocityXComponent" -> Missing["NotAvailable"], "VelocityYComponent" -> 
        Missing["NotAvailable"], "VelocityZComponent" -> 
        Missing["NotAvailable"], "TotalRadiatedEnergy" -> 
        Quantity[630, "Gigajoules"], "CalculatedTotalImpactEnergy" -> 
        Quantity[1.5, "MetricKilotons"]|>, <|
       "PeakBrightness" -> DateObject[{2014, 2, 18}, 
          TimeObject[{12, 50, 44.}, TimeZone -> "GMT"], TimeZone -> "GMT"], 
        "Coordinates" -> GeoPosition[{-32.8, -61.5}], "NearestCity" -> 
        Entity["City", {"CapitanBermudez", "SantaFe", "Argentina"}], 
        "Altitude" -> Missing["NotAvailable"], "Velocity" -> 
        Missing["NotAvailable"], "VelocityXComponent" -> 
        Missing["NotAvailable"], "VelocityYComponent" -> 
        Missing["NotAvailable"], "VelocityZComponent" -> 
        Missing["NotAvailable"], "TotalRadiatedEnergy" -> 
        Quantity[26, "Gigajoules"], "CalculatedTotalImpactEnergy" -> 
        Quantity[0.092, "MetricKilotons"]|>, <|
       "PeakBrightness" -> DateObject[{2014, 3, 3}, 
          TimeObject[{15, 0, 21.}, TimeZone -> "GMT"], TimeZone -> "GMT"], 
        "Coordinates" -> GeoPosition[{-29., -94.9}], "NearestCity" -> 
        Entity["City", {"Hangaroa", "Valparaiso", "Chile"}], "Altitude" -> 
        Missing["NotAvailable"], "Velocity" -> Missing["NotAvailable"], 
        "VelocityXComponent" -> Missing["NotAvailable"], "VelocityYComponent" -> 
        Missing["NotAvailable"], "VelocityZComponent" -> 
        Missing["NotAvailable"], "TotalRadiatedEnergy" -> 
        Quantity[94, "Gigajoules"], "CalculatedTotalImpactEnergy" -> 
        Quantity[0.29, "MetricKilotons"]|>, <|
       "PeakBrightness" -> DateObject[{2014, 3, 18}, 
          TimeObject[{11, 2, 37.}, TimeZone -> "GMT"], TimeZone -> "GMT"], 
        "Coordinates" -> GeoPosition[{0., -111.8}], "NearestCity" -> 
        Entity["City", {"LazaroCardenas", "Michoacan", "Mexico"}], "Altitude" -> 
        Quantity[30.5, "Kilometers"], "Velocity" -> Missing["NotAvailable"], 
        "VelocityXComponent" -> Missing["NotAvailable"], "VelocityYComponent" -> 
        Missing["NotAvailable"], "VelocityZComponent" -> 
        Missing["NotAvailable"], "TotalRadiatedEnergy" -> 
        Quantity[540, "Gigajoules"], "CalculatedTotalImpactEnergy" -> 
        Quantity[1.3, "MetricKilotons"]|>, <|
       "PeakBrightness" -> DateObject[{2014, 3, 29}, 
          TimeObject[{13, 45, 41.}, TimeZone -> "GMT"], TimeZone -> "GMT"], 
        "Coordinates" -> GeoPosition[{-28.7, 121.5}], "NearestCity" -> 
        Entity["City", {
          "KalgoorlieBoulder", "WesternAustralia", "Australia"}], "Altitude" -> 
        Quantity[30.7, "Kilometers"], "Velocity" -> Missing["NotAvailable"], 
        "VelocityXComponent" -> Quantity[10, "Kilometers"/"Seconds"], 
        "VelocityYComponent" -> Quantity[-12.7, "Kilometers"/"Seconds"], 
        "VelocityZComponent" -> Quantity[2.2, "Kilometers"/"Seconds"], 
        "TotalRadiatedEnergy" -> Quantity[39, "Gigajoules"], 
        "CalculatedTotalImpactEnergy" -> Quantity[0.13, "MetricKilotons"]|>, <|
       "PeakBrightness" -> DateObject[{2014, 5, 8}, 
          TimeObject[{19, 42, 37.}, TimeZone -> "GMT"], TimeZone -> "GMT"], 
        "Coordinates" -> GeoPosition[{-36.9, 87.3}], "NearestCity" -> 
        Entity["City", {"MartinDeVivies", "Amsterdam", "France"}], "Altitude" -> 
        Quantity[35.4, "Kilometers"], "Velocity" -> Missing["NotAvailable"], 
        "VelocityXComponent" -> Quantity[-2, "Kilometers"/"Seconds"], 
        "VelocityYComponent" -> Quantity[-16.1, "Kilometers"/"Seconds"], 
        "VelocityZComponent" -> Quantity[9.9, "Kilometers"/"Seconds"], 
        "TotalRadiatedEnergy" -> Quantity[1050, "Gigajoules"], 
        "CalculatedTotalImpactEnergy" -> Quantity[2.4, "MetricKilotons"]|>, <|
       "PeakBrightness" -> DateObject[{2014, 5, 16}, 
          TimeObject[{12, 42, 48.}, TimeZone -> "GMT"], TimeZone -> "GMT"], 
        "Coordinates" -> GeoPosition[{-44.2, -176.2}], "NearestCity" -> 
        Entity["City", {"Owenga", "ChathamIslands", "NewZealand"}], 
        "Altitude" -> Quantity[44, "Kilometers"], "Velocity" -> 
        Missing["NotAvailable"], "VelocityXComponent" -> 
        Quantity[14.4, "Kilometers"/"Seconds"], "VelocityYComponent" -> 
        Quantity[4.6, "Kilometers"/"Seconds"], "VelocityZComponent" -> 
        Quantity[6.5, "Kilometers"/"Seconds"], "TotalRadiatedEnergy" -> 
        Quantity[309, "Gigajoules"], "CalculatedTotalImpactEnergy" -> 
        Quantity[0.82, "MetricKilotons"]|>, <|
       "PeakBrightness" -> DateObject[{2014, 5, 16}, 
          TimeObject[{20, 6, 28.}, TimeZone -> "GMT"], TimeZone -> "GMT"], 
        "Coordinates" -> GeoPosition[{-39.4, -95.9}], "NearestCity" -> 
        Entity["City", {"Hangaroa", "Valparaiso", "Chile"}], "Altitude" -> 
        Quantity[30.8, "Kilometers"], "Velocity" -> 
        Quantity[18, "Kilometers"/"Seconds"], "VelocityXComponent" -> 
        Quantity[2.9, "Kilometers"/"Seconds"], "VelocityYComponent" -> 
        Quantity[13.4, "Kilometers"/"Seconds"], "VelocityZComponent" -> 
        Quantity[-12.5, "Kilometers"/"Seconds"], "TotalRadiatedEnergy" -> 
        Quantity[136, "Gigajoules"], "CalculatedTotalImpactEnergy" -> 
        Quantity[0.4, "MetricKilotons"]|>, <|
       "PeakBrightness" -> DateObject[{2014, 5, 29}, 
          TimeObject[{1, 12, 36.}, TimeZone -> "GMT"], TimeZone -> "GMT"], 
        "Coordinates" -> GeoPosition[{21.9, -131.1}], "NearestCity" -> 
        Entity["City", {"Lompoc", "California", "UnitedStates"}], "Altitude" -> 
        Quantity[28.7, "Kilometers"], "Velocity" -> Missing["NotAvailable"], 
        "VelocityXComponent" -> Missing["NotAvailable"], "VelocityYComponent" -> 
        Missing["NotAvailable"], "VelocityZComponent" -> 
        Missing["NotAvailable"], "TotalRadiatedEnergy" -> 
        Quantity[58, "Gigajoules"], "CalculatedTotalImpactEnergy" -> 
        Quantity[0.19, "MetricKilotons"]|>, <|
       "PeakBrightness" -> DateObject[{2014, 6, 26}, 
          TimeObject[{5, 54, 41.}, TimeZone -> "GMT"], TimeZone -> "GMT"], 
        "Coordinates" -> GeoPosition[{-71.5, 93.4}], "NearestCity" -> 
        Entity["City", {"Mirnyy", "SectorClaimedByAustralia", "Antarctica"}], 
        "Altitude" -> Quantity[28.5, "Kilometers"], "Velocity" -> 
        Missing["NotAvailable"], "VelocityXComponent" -> 
        Quantity[7, "Kilometers"/"Seconds"], "VelocityYComponent" -> 
        Quantity[2.9, "Kilometers"/"Seconds"], "VelocityZComponent" -> 
        Quantity[8.3, "Kilometers"/"Seconds"], "TotalRadiatedEnergy" -> 
        Quantity[61, "Gigajoules"], "CalculatedTotalImpactEnergy" -> 
        Quantity[0.2, "MetricKilotons"]|>, <|
       "PeakBrightness" -> DateObject[{2014, 6, 28}, 
          TimeObject[{2, 40, 7.}, TimeZone -> "GMT"], TimeZone -> "GMT"], 
        "Coordinates" -> GeoPosition[{18.9, 141.2}], "NearestCity" -> 
        Entity["City", {
          "Settlement", "NorthernIslands", "NorthernMarianaIslands"}], 
        "Altitude" -> Quantity[26.3, "Kilometers"], "Velocity" -> 
        Quantity[12.4, "Kilometers"/"Seconds"], "VelocityXComponent" -> 
        Quantity[12, "Kilometers"/"Seconds"], "VelocityYComponent" -> 
        Quantity[3.5, "Kilometers"/"Seconds"], "VelocityZComponent" -> 
        Quantity[-10.5, "Kilometers"/"Seconds"], "TotalRadiatedEnergy" -> 
        Quantity[245, "Gigajoules"], "CalculatedTotalImpactEnergy" -> 
        Quantity[0.67, "MetricKilotons"]|>, <|
       "PeakBrightness" -> DateObject[{2014, 7, 29}, 
          TimeObject[{3, 7, 43.}, TimeZone -> "GMT"], TimeZone -> "GMT"], 
        "Coordinates" -> GeoPosition[{-33.9, -115.9}], "NearestCity" -> 
        Entity["City", {"Hangaroa", "Valparaiso", "Chile"}], "Altitude" -> 
        Missing["NotAvailable"], "Velocity" -> Missing["NotAvailable"], 
        "VelocityXComponent" -> Missing["NotAvailable"], "VelocityYComponent" -> 
        Missing["NotAvailable"], "VelocityZComponent" -> 
        Missing["NotAvailable"], "TotalRadiatedEnergy" -> 
        Quantity[53, "Gigajoules"], "CalculatedTotalImpactEnergy" -> 
        Quantity[0.17, "MetricKilotons"]|>, <|
       "PeakBrightness" -> DateObject[{2014, 7, 29}, 
          TimeObject[{7, 38, 7.}, TimeZone -> "GMT"], TimeZone -> "GMT"], 
        "Coordinates" -> GeoPosition[{-49.2, -172.2}], "NearestCity" -> 
        Entity["City", {"Owenga", "ChathamIslands", "NewZealand"}], 
        "Altitude" -> Missing["NotAvailable"], "Velocity" -> 
        Missing["NotAvailable"], "VelocityXComponent" -> 
        Missing["NotAvailable"], "VelocityYComponent" -> 
        Missing["NotAvailable"], "VelocityZComponent" -> 
        Missing["NotAvailable"], "TotalRadiatedEnergy" -> 
        Quantity[73, "Gigajoules"], "CalculatedTotalImpactEnergy" -> 
        Quantity[0.23, "MetricKilotons"]|>, <|
       "PeakBrightness" -> DateObject[{2014, 8, 23}, 
          TimeObject[{6, 29, 41.}, TimeZone -> "GMT"], TimeZone -> "GMT"], 
        "Coordinates" -> GeoPosition[{-61.7, 132.6}], "NearestCity" -> 
        Entity["City", {
          "DumontDUrvillePermanentStationOfFrance", "SectorClaimedByFrance", 
           "Antarctica"}], "Altitude" -> Quantity[22.2, "Kilometers"], 
        "Velocity" -> Quantity[16.2, "Kilometers"/"Seconds"], 
        "VelocityXComponent" -> Quantity[-2.3, "Kilometers"/"Seconds"], 
        "VelocityYComponent" -> Quantity[5.7, "Kilometers"/"Seconds"], 
        "VelocityZComponent" -> Quantity[16.5, "Kilometers"/"Seconds"], 
        "TotalRadiatedEnergy" -> Quantity[3820, "Gigajoules"], 
        "CalculatedTotalImpactEnergy" -> Quantity[7.6, "MetricKilotons"]|>, <|
       "PeakBrightness" -> DateObject[{2014, 8, 28}, 
          TimeObject[{3, 7, 45.}, TimeZone -> "GMT"], TimeZone -> "GMT"], 
        "Coordinates" -> GeoPosition[{3.2, -45.4}], "NearestCity" -> 
        Entity["City", {"Salinopolis", "Para", "Brazil"}], "Altitude" -> 
        Missing["NotAvailable"], "Velocity" -> Missing["NotAvailable"], 
        "VelocityXComponent" -> Missing["NotAvailable"], "VelocityYComponent" -> 
        Missing["NotAvailable"], "VelocityZComponent" -> 
        Missing["NotAvailable"], "TotalRadiatedEnergy" -> 
        Quantity[34, "Gigajoules"], "CalculatedTotalImpactEnergy" -> 
        Quantity[0.12, "MetricKilotons"]|>, <|
       "PeakBrightness" -> DateObject[{2014, 8, 29}, 
          TimeObject[{23, 15, 39.}, TimeZone -> "GMT"], TimeZone -> "GMT"], 
        "Coordinates" -> GeoPosition[{-6.2, -49.9}], "NearestCity" -> 
        Entity["City", {"Parauapebas", "Para", "Brazil"}], "Altitude" -> 
        Missing["NotAvailable"], "Velocity" -> Missing["NotAvailable"], 
        "VelocityXComponent" -> Missing["NotAvailable"], "VelocityYComponent" -> 
        Missing["NotAvailable"], "VelocityZComponent" -> 
        Missing["NotAvailable"], "TotalRadiatedEnergy" -> 
        Quantity[26, "Gigajoules"], "CalculatedTotalImpactEnergy" -> 
        Quantity[0.092, "MetricKilotons"]|>, <|
       "PeakBrightness" -> DateObject[{2014, 9, 5}, 
          TimeObject[{21, 37, 26.}, TimeZone -> "GMT"], TimeZone -> "GMT"], 
        "Coordinates" -> GeoPosition[{22.7, -150.}], "NearestCity" -> 
        Entity["City", {"HawaiianBeaches", "Hawaii", "UnitedStates"}], 
        "Altitude" -> Missing["NotAvailable"], "Velocity" -> 
        Missing["NotAvailable"], "VelocityXComponent" -> 
        Missing["NotAvailable"], "VelocityYComponent" -> 
        Missing["NotAvailable"], "VelocityZComponent" -> 
        Missing["NotAvailable"], "TotalRadiatedEnergy" -> 
        Quantity[35, "Gigajoules"], "CalculatedTotalImpactEnergy" -> 
        Quantity[0.12, "MetricKilotons"]|>, <|
       "PeakBrightness" -> DateObject[{2014, 9, 9}, 
          TimeObject[{18, 55, 46.}, TimeZone -> "GMT"], TimeZone -> "GMT"], 
        "Coordinates" -> GeoPosition[{3.2, 137.2}], "NearestCity" -> 
        Entity["City", {"Biak", "Papua", "Indonesia"}], "Altitude" -> 
        Quantity[32.5, "Kilometers"], "Velocity" -> Missing["NotAvailable"], 
        "VelocityXComponent" -> Missing["NotAvailable"], "VelocityYComponent" -> 
        Missing["NotAvailable"], "VelocityZComponent" -> 
        Missing["NotAvailable"], "TotalRadiatedEnergy" -> 
        Quantity[28, "Gigajoules"], "CalculatedTotalImpactEnergy" -> 
        Quantity[0.098, "MetricKilotons"]|>, <|
       "PeakBrightness" -> DateObject[{2014, 10, 6}, 
          TimeObject[{20, 2, 15.}, TimeZone -> "GMT"], TimeZone -> "GMT"], 
        "Coordinates" -> GeoPosition[{-43.7, 85.7}], "NearestCity" -> 
        Entity["City", {"MartinDeVivies", "Amsterdam", "France"}], "Altitude" -> 
        Missing["NotAvailable"], "Velocity" -> Missing["NotAvailable"], 
        "VelocityXComponent" -> Missing["NotAvailable"], "VelocityYComponent" -> 
        Missing["NotAvailable"], "VelocityZComponent" -> 
        Missing["NotAvailable"], "TotalRadiatedEnergy" -> 
        Quantity[39, "Gigajoules"], "CalculatedTotalImpactEnergy" -> 
        Quantity[0.13, "MetricKilotons"]|>, <|
       "PeakBrightness" -> DateObject[{2014, 10, 14}, 
          TimeObject[{10, 25, 3.}, TimeZone -> "GMT"], TimeZone -> "GMT"], 
        "Coordinates" -> GeoPosition[{-2., 119.2}], "NearestCity" -> 
        Entity["City", {"Rantepao", "SulawesiSelatan", "Indonesia"}], 
        "Altitude" -> Quantity[27.2, "Kilometers"], "Velocity" -> 
        Missing["NotAvailable"], "VelocityXComponent" -> 
        Quantity[15, "Kilometers"/"Seconds"], "VelocityYComponent" -> 
        Quantity[-6.9, "Kilometers"/"Seconds"], "VelocityZComponent" -> 
        Quantity[-3.5, "Kilometers"/"Seconds"], "TotalRadiatedEnergy" -> 
        Quantity[29, "Gigajoules"], "CalculatedTotalImpactEnergy" -> 
        Quantity[0.1, "MetricKilotons"]|>, <|
       "PeakBrightness" -> DateObject[{2014, 10, 17}, 
          TimeObject[{14, 7, 36.}, TimeZone -> "GMT"], TimeZone -> "GMT"], 
        "Coordinates" -> GeoPosition[{-4.6, -66.3}], "NearestCity" -> 
        Entity["City", {"Carauari", "Amazonas", "Brazil"}], "Altitude" -> 
        Quantity[39, "Kilometers"], "Velocity" -> Missing["NotAvailable"], 
        "VelocityXComponent" -> Missing["NotAvailable"], "VelocityYComponent" -> 
        Missing["NotAvailable"], "VelocityZComponent" -> 
        Missing["NotAvailable"], "TotalRadiatedEnergy" -> 
        Quantity[72, "Gigajoules"], "CalculatedTotalImpactEnergy" -> 
        Quantity[0.23, "MetricKilotons"]|>, <|
       "PeakBrightness" -> DateObject[{2014, 10, 21}, 
          TimeObject[{18, 55, 37.}, TimeZone -> "GMT"], TimeZone -> "GMT"], 
        "Coordinates" -> GeoPosition[{22.2, -132.9}], "NearestCity" -> 
        Entity["City", {"Lompoc", "California", "UnitedStates"}], "Altitude" -> 
        Missing["NotAvailable"], "Velocity" -> Missing["NotAvailable"], 
        "VelocityXComponent" -> Missing["NotAvailable"], "VelocityYComponent" -> 
        Missing["NotAvailable"], "VelocityZComponent" -> 
        Missing["NotAvailable"], "TotalRadiatedEnergy" -> 
        Quantity[34, "Gigajoules"], "CalculatedTotalImpactEnergy" -> 
        Quantity[0.12, "MetricKilotons"]|>, <|
       "PeakBrightness" -> DateObject[{2014, 11, 4}, 
          TimeObject[{20, 13, 30.}, TimeZone -> "GMT"], TimeZone -> "GMT"], 
        "Coordinates" -> GeoPosition[{43.1, 115.8}], "NearestCity" -> 
        Entity["City", {"Xilinhot", "Neimenggu", "China"}], "Altitude" -> 
        Quantity[22.2, "Kilometers"], "Velocity" -> Missing["NotAvailable"], 
        "VelocityXComponent" -> Quantity[-7.2, "Kilometers"/"Seconds"], 
        "VelocityYComponent" -> Quantity[-12.1, "Kilometers"/"Seconds"], 
        "VelocityZComponent" -> Quantity[-7.7, "Kilometers"/"Seconds"], 
        "TotalRadiatedEnergy" -> Quantity[156, "Gigajoules"], 
        "CalculatedTotalImpactEnergy" -> Quantity[0.45, "MetricKilotons"]|>, <|
       "PeakBrightness" -> DateObject[{2014, 11, 26}, 
          TimeObject[{17, 40, 16.}, TimeZone -> "GMT"], TimeZone -> "GMT"], 
        "Coordinates" -> GeoPosition[{-68.2, -24.}], "NearestCity" -> 
        Entity["City", {
          "NeumayerPermanentStationOfGermany", "SectorClaimedByNorway", 
           "Antarctica"}], "Altitude" -> Quantity[37, "Kilometers"], 
        "Velocity" -> Missing["NotAvailable"], "VelocityXComponent" -> 
        Quantity[-7, "Kilometers"/"Seconds"], "VelocityYComponent" -> 
        Quantity[16.1, "Kilometers"/"Seconds"], "VelocityZComponent" -> 
        Quantity[9.4, "Kilometers"/"Seconds"], "TotalRadiatedEnergy" -> 
        Quantity[105, "Gigajoules"], "CalculatedTotalImpactEnergy" -> 
        Quantity[0.32, "MetricKilotons"]|>, <|
       "PeakBrightness" -> DateObject[{2014, 11, 26}, 
          TimeObject[{23, 16, 51.}, TimeZone -> "GMT"], TimeZone -> "GMT"], 
        "Coordinates" -> GeoPosition[{-69.5, -179.7}], "NearestCity" -> 
        Entity["City", {
          "ScottPermanentStationOfNewZealand", "SectorClaimedByNewZealand", 
           "Antarctica"}], "Altitude" -> Quantity[23.3, "Kilometers"], 
        "Velocity" -> Missing["NotAvailable"], "VelocityXComponent" -> 
        Quantity[21.3, "Kilometers"/"Seconds"], "VelocityYComponent" -> 
        Quantity[2.2, "Kilometers"/"Seconds"], "VelocityZComponent" -> 
        Quantity[13.4, "Kilometers"/"Seconds"], "TotalRadiatedEnergy" -> 
        Quantity[118, "Gigajoules"], "CalculatedTotalImpactEnergy" -> 
        Quantity[0.35, "MetricKilotons"]|>, <|
       "PeakBrightness" -> DateObject[{2014, 11, 27}, 
          TimeObject[{12, 12, 52.}, TimeZone -> "GMT"], TimeZone -> "GMT"], 
        "Coordinates" -> GeoPosition[{-18.8, -73.4}], "NearestCity" -> 
        Entity["City", {"Mollendo", "Arequipa", "Peru"}], "Altitude" -> 
        Quantity[38, "Kilometers"], "Velocity" -> Missing["NotAvailable"], 
        "VelocityXComponent" -> Missing["NotAvailable"], "VelocityYComponent" -> 
        Missing["NotAvailable"], "VelocityZComponent" -> 
        Missing["NotAvailable"], "TotalRadiatedEnergy" -> 
        Quantity[55, "Gigajoules"], "CalculatedTotalImpactEnergy" -> 
        Quantity[0.18, "MetricKilotons"]|>, <|
       "PeakBrightness" -> DateObject[{2014, 11, 28}, 
          TimeObject[{11, 47, 18.}, TimeZone -> "GMT"], TimeZone -> "GMT"], 
        "Coordinates" -> GeoPosition[{-45.8, -172.7}], "NearestCity" -> 
        Entity["City", {"Owenga", "ChathamIslands", "NewZealand"}], 
        "Altitude" -> Quantity[26.1, "Kilometers"], "Velocity" -> 
        Missing["NotAvailable"], "VelocityXComponent" -> 
        Quantity[0.4, "Kilometers"/"Seconds"], "VelocityYComponent" -> 
        Quantity[-1.4, "Kilometers"/"Seconds"], "VelocityZComponent" -> 
        Quantity[13.3, "Kilometers"/"Seconds"], "TotalRadiatedEnergy" -> 
        Quantity[700, "Gigajoules"], "CalculatedTotalImpactEnergy" -> 
        Quantity[1.7, "MetricKilotons"]|>, <|
       "PeakBrightness" -> DateObject[{2014, 12, 9}, 
          TimeObject[{21, 19, 18.}, TimeZone -> "GMT"], TimeZone -> "GMT"], 
        "Coordinates" -> GeoPosition[{76.6, 96.3}], "NearestCity" -> 
        Entity["City", {"Khatanga", "Krasnoyarsk", "Russia"}], "Altitude" -> 
        Quantity[26.3, "Kilometers"], "Velocity" -> Missing["NotAvailable"], 
        "VelocityXComponent" -> Missing["NotAvailable"], "VelocityYComponent" -> 
        Missing["NotAvailable"], "VelocityZComponent" -> 
        Missing["NotAvailable"], "TotalRadiatedEnergy" -> 
        Quantity[78, "Gigajoules"], "CalculatedTotalImpactEnergy" -> 
        Quantity[0.24, "MetricKilotons"]|>, <|
       "PeakBrightness" -> DateObject[{2014, 12, 12}, 
          TimeObject[{6, 48, 11.}, TimeZone -> "GMT"], TimeZone -> "GMT"], 
        "Coordinates" -> GeoPosition[{33.5, 144.9}], "NearestCity" -> 
        Entity["City", {"Choshi", "Chiba", "Japan"}], "Altitude" -> 
        Quantity[26.3, "Kilometers"], "Velocity" -> Missing["NotAvailable"], 
        "VelocityXComponent" -> Quantity[11.5, "Kilometers"/"Seconds"], 
        "VelocityYComponent" -> Quantity[-2.8, "Kilometers"/"Seconds"], 
        "VelocityZComponent" -> Quantity[-2.2, "Kilometers"/"Seconds"], 
        "TotalRadiatedEnergy" -> Quantity[33, "Gigajoules"], 
        "CalculatedTotalImpactEnergy" -> Quantity[0.11, "MetricKilotons"]|>, <|
       "PeakBrightness" -> DateObject[{2014, 12, 13}, 
          TimeObject[{2, 53, 52.}, TimeZone -> "GMT"], TimeZone -> "GMT"], 
        "Coordinates" -> GeoPosition[{86.7, -162.1}], "NearestCity" -> 
        Entity["City", {"Barrow", "Alaska", "UnitedStates"}], "Altitude" -> 
        Quantity[30.7, "Kilometers"], "Velocity" -> Missing["NotAvailable"], 
        "VelocityXComponent" -> Quantity[15.3, "Kilometers"/"Seconds"], 
        "VelocityYComponent" -> Quantity[-13.3, "Kilometers"/"Seconds"], 
        "VelocityZComponent" -> Quantity[-7.8, "Kilometers"/"Seconds"], 
        "TotalRadiatedEnergy" -> Quantity[44, "Gigajoules"], 
        "CalculatedTotalImpactEnergy" -> Quantity[0.15, "MetricKilotons"]|>, <|
       "PeakBrightness" -> DateObject[{2015, 1, 2}, 
          TimeObject[{13, 39, 19.}, TimeZone -> "GMT"], TimeZone -> "GMT"], 
        "Coordinates" -> GeoPosition[{-31.1, 140.}], "NearestCity" -> 
        Entity["City", {"BrokenHill", "NewSouthWales", "Australia"}], 
        "Altitude" -> Quantity[38.1, "Kilometers"], "Velocity" -> 
        Missing["NotAvailable"], "VelocityXComponent" -> 
        Quantity[4.5, "Kilometers"/"Seconds"], "VelocityYComponent" -> 
        Quantity[-14.4, "Kilometers"/"Seconds"], "VelocityZComponent" -> 
        Quantity[-10, "Kilometers"/"Seconds"], "TotalRadiatedEnergy" -> 
        Quantity[20, "Gigajoules"], "CalculatedTotalImpactEnergy" -> 
        Quantity[0.073, "MetricKilotons"]|>, <|
       "PeakBrightness" -> DateObject[{2015, 1, 7}, 
          TimeObject[{1, 5, 59.}, TimeZone -> "GMT"], TimeZone -> "GMT"], 
        "Coordinates" -> GeoPosition[{45.7, 26.9}], "NearestCity" -> 
        Entity["City", {"AndreiasuDeJos", "Vrancea", "Romania"}], "Altitude" -> 
        Quantity[45.5, "Kilometers"], "Velocity" -> Missing["NotAvailable"], 
        "VelocityXComponent" -> Quantity[-35.4, "Kilometers"/"Seconds"], 
        "VelocityYComponent" -> Quantity[1.8, "Kilometers"/"Seconds"], 
        "VelocityZComponent" -> Quantity[-4.4, "Kilometers"/"Seconds"], 
        "TotalRadiatedEnergy" -> Quantity[136, "Gigajoules"], 
        "CalculatedTotalImpactEnergy" -> Quantity[0.4, "MetricKilotons"]|>, <|
       "PeakBrightness" -> DateObject[{2015, 1, 9}, 
          TimeObject[{10, 41, 11.}, TimeZone -> "GMT"], TimeZone -> "GMT"], 
        "Coordinates" -> GeoPosition[{2., 28.8}], "NearestCity" -> 
        Entity["City", {"Wamba", "HautCongo", "DemocraticRepublicCongo"}], 
        "Altitude" -> Quantity[36, "Kilometers"], "Velocity" -> 
        Missing["NotAvailable"], "VelocityXComponent" -> 
        Quantity[-10.7, "Kilometers"/"Seconds"], "VelocityYComponent" -> 
        Quantity[-7.6, "Kilometers"/"Seconds"], "VelocityZComponent" -> 
        Quantity[11.6, "Kilometers"/"Seconds"], "TotalRadiatedEnergy" -> 
        Quantity[139, "Gigajoules"], "CalculatedTotalImpactEnergy" -> 
        Quantity[0.41, "MetricKilotons"]|>, <|
       "PeakBrightness" -> DateObject[{2015, 1, 9}, 
          TimeObject[{17, 31, 47.}, TimeZone -> "GMT"], TimeZone -> "GMT"], 
        "Coordinates" -> GeoPosition[{-23.3, -49.2}], "NearestCity" -> 
        Entity["City", {"Itai", "SaoPaulo", "Brazil"}], "Altitude" -> 
        Missing["NotAvailable"], "Velocity" -> Missing["NotAvailable"], 
        "VelocityXComponent" -> Missing["NotAvailable"], "VelocityYComponent" -> 
        Missing["NotAvailable"], "VelocityZComponent" -> 
        Missing["NotAvailable"], "TotalRadiatedEnergy" -> 
        Quantity[22, "Gigajoules"], "CalculatedTotalImpactEnergy" -> 
        Quantity[0.079, "MetricKilotons"]|>, <|
       "PeakBrightness" -> DateObject[{2015, 2, 17}, 
          TimeObject[{13, 19, 50.}, TimeZone -> "GMT"], TimeZone -> "GMT"], 
        "Coordinates" -> GeoPosition[{-8., -11.2}], "NearestCity" -> 
        Entity["City", {"Georgetown", "Ascension", "SaintHelena"}], 
        "Altitude" -> Quantity[39, "Kilometers"], "Velocity" -> 
        Missing["NotAvailable"], "VelocityXComponent" -> 
        Quantity[-28.2, "Kilometers"/"Seconds"], "VelocityYComponent" -> 
        Quantity[3.4, "Kilometers"/"Seconds"], "VelocityZComponent" -> 
        Quantity[4.6, "Kilometers"/"Seconds"], "TotalRadiatedEnergy" -> 
        Quantity[33, "Gigajoules"], "CalculatedTotalImpactEnergy" -> 
        Quantity[0.11, "MetricKilotons"]|>, <|
       "PeakBrightness" -> DateObject[{2015, 2, 25}, 
          TimeObject[{10, 53, 24.}, TimeZone -> "GMT"], TimeZone -> "GMT"], 
        "Coordinates" -> GeoPosition[{12.4, -122.4}], "NearestCity" -> 
        Entity["City", {"CaboSanLucas", "BajaCaliforniaSur", "Mexico"}], 
        "Altitude" -> Quantity[42, "Kilometers"], "Velocity" -> 
        Missing["NotAvailable"], "VelocityXComponent" -> 
        Missing["NotAvailable"], "VelocityYComponent" -> 
        Missing["NotAvailable"], "VelocityZComponent" -> 
        Missing["NotAvailable"], "TotalRadiatedEnergy" -> 
        Quantity[58, "Gigajoules"], "CalculatedTotalImpactEnergy" -> 
        Quantity[0.19, "MetricKilotons"]|>, <|
       "PeakBrightness" -> DateObject[{2015, 2, 26}, 
          TimeObject[{22, 6, 24.}, TimeZone -> "GMT"], TimeZone -> "GMT"], 
        "Coordinates" -> GeoPosition[{68., -149.}], "NearestCity" -> 
        Entity["City", {"Wiseman", "Alaska", "UnitedStates"}], "Altitude" -> 
        Quantity[33.7, "Kilometers"], "Velocity" -> Missing["NotAvailable"], 
        "VelocityXComponent" -> Quantity[5.6, "Kilometers"/"Seconds"], 
        "VelocityYComponent" -> Quantity[-2.3, "Kilometers"/"Seconds"], 
        "VelocityZComponent" -> Quantity[-20.2, "Kilometers"/"Seconds"], 
        "TotalRadiatedEnergy" -> Quantity[188, "Gigajoules"], 
        "CalculatedTotalImpactEnergy" -> Quantity[0.53, "MetricKilotons"]|>, <|
       "PeakBrightness" -> DateObject[{2015, 3, 4}, 
          TimeObject[{4, 30, 5.}, TimeZone -> "GMT"], TimeZone -> "GMT"], 
        "Coordinates" -> GeoPosition[{-15.9, 88.1}], "NearestCity" -> 
        Entity["City", {
          "WestIsland", "CocosKeelingIslands", "CocosKeelingIslands"}], 
        "Altitude" -> Quantity[39.8, "Kilometers"], "Velocity" -> 
        Missing["NotAvailable"], "VelocityXComponent" -> 
        Quantity[7.8, "Kilometers"/"Seconds"], "VelocityYComponent" -> 
        Quantity[-16, "Kilometers"/"Seconds"], "VelocityZComponent" -> 
        Quantity[-2.5, "Kilometers"/"Seconds"], "TotalRadiatedEnergy" -> 
        Quantity[55, "Gigajoules"], "CalculatedTotalImpactEnergy" -> 
        Quantity[0.18, "MetricKilotons"]|>, <|
       "PeakBrightness" -> DateObject[{2015, 3, 8}, 
          TimeObject[{4, 26, 28.}, TimeZone -> "GMT"], TimeZone -> "GMT"], 
        "Coordinates" -> GeoPosition[{-39.1, -118.6}], "NearestCity" -> 
        Entity["City", {"Hangaroa", "Valparaiso", "Chile"}], "Altitude" -> 
        Missing["NotAvailable"], "Velocity" -> Missing["NotAvailable"], 
        "VelocityXComponent" -> Missing["NotAvailable"], "VelocityYComponent" -> 
        Missing["NotAvailable"], "VelocityZComponent" -> 
        Missing["NotAvailable"], "TotalRadiatedEnergy" -> 
        Quantity[20, "Gigajoules"], "CalculatedTotalImpactEnergy" -> 
        Quantity[0.073, "MetricKilotons"]|>, <|
       "PeakBrightness" -> DateObject[{2015, 3, 11}, 
          TimeObject[{6, 18, 59.}, TimeZone -> "GMT"], TimeZone -> "GMT"], 
        "Coordinates" -> GeoPosition[{8., 119.1}], "NearestCity" -> 
        Entity["City", {"CagayanDeTawiTawi", "TawiTawi", "Philippines"}], 
        "Altitude" -> Quantity[35.2, "Kilometers"], "Velocity" -> 
        Missing["NotAvailable"], "VelocityXComponent" -> 
        Quantity[5.5, "Kilometers"/"Seconds"], "VelocityYComponent" -> 
        Quantity[-10.5, "Kilometers"/"Seconds"], "VelocityZComponent" -> 
        Quantity[-16, "Kilometers"/"Seconds"], "TotalRadiatedEnergy" -> 
        Quantity[72, "Gigajoules"], "CalculatedTotalImpactEnergy" -> 
        Quantity[0.23, "MetricKilotons"]|>, <|
       "PeakBrightness" -> DateObject[{2015, 3, 18}, 
          TimeObject[{0, 4, 50.}, TimeZone -> "GMT"], TimeZone -> "GMT"], 
        "Coordinates" -> GeoPosition[{-5.4, 159.3}], "NearestCity" -> 
        Entity["City", {"Buala", "Isabel", "SolomonIslands"}], "Altitude" -> 
        Quantity[50, "Kilometers"], "Velocity" -> Missing["NotAvailable"], 
        "VelocityXComponent" -> Missing["NotAvailable"], "VelocityYComponent" -> 
        Missing["NotAvailable"], "VelocityZComponent" -> 
        Missing["NotAvailable"], "TotalRadiatedEnergy" -> 
        Quantity[121, "Gigajoules"], "CalculatedTotalImpactEnergy" -> 
        Quantity[0.36, "MetricKilotons"]|>, <|
       "PeakBrightness" -> DateObject[{2015, 3, 30}, 
          TimeObject[{21, 33, 52.}, TimeZone -> "GMT"], TimeZone -> "GMT"], 
        "Coordinates" -> GeoPosition[{-36.1, -5.5}], "NearestCity" -> 
        Entity["City", {"GoughIsland", "TristanDaCunha", "SaintHelena"}], 
        "Altitude" -> Quantity[33.1, "Kilometers"], "Velocity" -> 
        Missing["NotAvailable"], "VelocityXComponent" -> 
        Quantity[-13.7, "Kilometers"/"Seconds"], "VelocityYComponent" -> 
        Quantity[-1.7, "Kilometers"/"Seconds"], "VelocityZComponent" -> 
        Quantity[0.8, "Kilometers"/"Seconds"], "TotalRadiatedEnergy" -> 
        Quantity[64, "Gigajoules"], "CalculatedTotalImpactEnergy" -> 
        Quantity[0.2, "MetricKilotons"]|>, <|
       "PeakBrightness" -> DateObject[{2015, 4, 3}, 
          TimeObject[{1, 39, 38.}, TimeZone -> "GMT"], TimeZone -> "GMT"], 
        "Coordinates" -> GeoPosition[{8.4, -157.9}], "NearestCity" -> 
        Entity["City", {"Washington", "Teraina", "Kiribati"}], "Altitude" -> 
        Missing["NotAvailable"], "Velocity" -> Missing["NotAvailable"], 
        "VelocityXComponent" -> Missing["NotAvailable"], "VelocityYComponent" -> 
        Missing["NotAvailable"], "VelocityZComponent" -> 
        Missing["NotAvailable"], "TotalRadiatedEnergy" -> 
        Quantity[42, "Gigajoules"], "CalculatedTotalImpactEnergy" -> 
        Quantity[0.14, "MetricKilotons"]|>, <|
       "PeakBrightness" -> DateObject[{2015, 4, 8}, 
          TimeObject[{4, 6, 31.}, TimeZone -> "GMT"], TimeZone -> "GMT"], 
        "Coordinates" -> GeoPosition[{-25.5, 51.5}], "NearestCity" -> 
        Entity["City", {"Taolanaro", "Toliary", "Madagascar"}], "Altitude" -> 
        Quantity[36.3, "Kilometers"], "Velocity" -> Missing["NotAvailable"], 
        "VelocityXComponent" -> Quantity[8, "Kilometers"/"Seconds"], 
        "VelocityYComponent" -> Quantity[-15.6, "Kilometers"/"Seconds"], 
        "VelocityZComponent" -> Quantity[-7.9, "Kilometers"/"Seconds"], 
        "TotalRadiatedEnergy" -> Quantity[173, "Gigajoules"], 
        "CalculatedTotalImpactEnergy" -> Quantity[0.49, "MetricKilotons"]|>, <|
       "PeakBrightness" -> DateObject[{2015, 4, 21}, 
          TimeObject[{1, 42, 51.}, TimeZone -> "GMT"], TimeZone -> "GMT"], 
        "Coordinates" -> GeoPosition[{37.7, -39.6}], "NearestCity" -> 
        Entity["City", {"RibeiraGrande", "Acores", "Portugal"}], "Altitude" -> 
        Quantity[37.4, "Kilometers"], "Velocity" -> Missing["NotAvailable"], 
        "VelocityXComponent" -> Quantity[-15.3, "Kilometers"/"Seconds"], 
        "VelocityYComponent" -> Quantity[12.8, "Kilometers"/"Seconds"], 
        "VelocityZComponent" -> Quantity[7.4, "Kilometers"/"Seconds"], 
        "TotalRadiatedEnergy" -> Quantity[88, "Gigajoules"], 
        "CalculatedTotalImpactEnergy" -> Quantity[0.27, "MetricKilotons"]|>, <|
       "PeakBrightness" -> DateObject[{2015, 4, 30}, 
          TimeObject[{10, 21, 1.}, TimeZone -> "GMT"], TimeZone -> "GMT"], 
        "Coordinates" -> GeoPosition[{-48.7, 139.1}], "NearestCity" -> 
        Entity["City", {"Queenstown", "Tasmania", "Australia"}], "Altitude" -> 
        Quantity[26.7, "Kilometers"], "Velocity" -> Missing["NotAvailable"], 
        "VelocityXComponent" -> Quantity[12.2, "Kilometers"/"Seconds"], 
        "VelocityYComponent" -> Quantity[-4.2, "Kilometers"/"Seconds"], 
        "VelocityZComponent" -> Quantity[0.9, "Kilometers"/"Seconds"], 
        "TotalRadiatedEnergy" -> Quantity[105, "Gigajoules"], 
        "CalculatedTotalImpactEnergy" -> Quantity[0.32, "MetricKilotons"]|>}, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "PeakBrightness"} -> 
        1, {All, "Coordinates"} -> 1, {All, "NearestCity"} -> 
        1, {All, "Altitude"} -> 1, {All, "Velocity"} -> 
        1, {All, "VelocityXComponent"} -> 1, {All, "VelocityYComponent"} -> 
        1, {All, "VelocityZComponent"} -> 1, {All, "TotalRadiatedEnergy"} -> 
        1, {All, "CalculatedTotalImpactEnergy"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "PeakBrightness" -> TypeSystem`PackageScope`AtomShape[75], 
            "Coordinates" -> TypeSystem`PackageScope`AtomShape[106], 
            "NearestCity" -> TypeSystem`PackageScope`AtomShape[90], 
            "Altitude" -> TypeSystem`PackageScope`AtomShape[75], "Velocity" -> 
            TypeSystem`PackageScope`AtomShape[75], "VelocityXComponent" -> 
            TypeSystem`PackageScope`AtomShape[75], "VelocityYComponent" -> 
            TypeSystem`PackageScope`AtomShape[75], "VelocityZComponent" -> 
            TypeSystem`PackageScope`AtomShape[75], "TotalRadiatedEnergy" -> 
            TypeSystem`PackageScope`AtomShape[75], 
            "CalculatedTotalImpactEnergy" -> 
            TypeSystem`PackageScope`AtomShape[75]|>], 
          DirectedInfinity[1], 10, {All}]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "PeakBrightness", "Coordinates", "NearestCity", "Altitude", 
         "Velocity", "VelocityXComponent", "VelocityYComponent", 
         "VelocityZComponent", "TotalRadiatedEnergy", 
         "CalculatedTotalImpactEnergy"}, {
         TypeSystem`Atom[DateObject], 
         TypeSystem`Atom[GeoPosition], 
         TypeSystem`Atom[
          Entity["City"]], 
         TypeSystem`Atom[
          Quantity[1, "Kilometers"]], 
         TypeSystem`Atom[
          Quantity[1, "Kilometers"/"Seconds"]], 
         TypeSystem`Atom[
          Quantity[1, "Kilometers"/"Seconds"]], 
         TypeSystem`Atom[
          Quantity[1, "Kilometers"/"Seconds"]], 
         TypeSystem`Atom[
          Quantity[1, "Kilometers"/"Seconds"]], 
         TypeSystem`Atom[
          Quantity[1, "Gigajoules"]], 
         TypeSystem`Atom[
          Quantity[1, "MetricKilotons"]]}], 92], 
     "Meta" -> <|"ID" -> 57595609277248|>, "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "PeakBrightness"} -> 
        1, {All, "Coordinates"} -> 1, {All, "NearestCity"} -> 
        1, {All, "Altitude"} -> 1, {All, "Velocity"} -> 
        1, {All, "VelocityXComponent"} -> 1, {All, "VelocityYComponent"} -> 
        1, {All, "VelocityZComponent"} -> 1, {All, "TotalRadiatedEnergy"} -> 
        1, {All, "CalculatedTotalImpactEnergy"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "PeakBrightness" -> TypeSystem`PackageScope`AtomShape[75], 
            "Coordinates" -> TypeSystem`PackageScope`AtomShape[106], 
            "NearestCity" -> TypeSystem`PackageScope`AtomShape[90], 
            "Altitude" -> TypeSystem`PackageScope`AtomShape[75], "Velocity" -> 
            TypeSystem`PackageScope`AtomShape[75], "VelocityXComponent" -> 
            TypeSystem`PackageScope`AtomShape[75], "VelocityYComponent" -> 
            TypeSystem`PackageScope`AtomShape[75], "VelocityZComponent" -> 
            TypeSystem`PackageScope`AtomShape[75], "TotalRadiatedEnergy" -> 
            TypeSystem`PackageScope`AtomShape[75], 
            "CalculatedTotalImpactEnergy" -> 
            TypeSystem`PackageScope`AtomShape[75]|>], 
          DirectedInfinity[1], 10, {All}]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "PeakBrightness", "Coordinates", "NearestCity", "Altitude", 
         "Velocity", "VelocityXComponent", "VelocityYComponent", 
         "VelocityZComponent", "TotalRadiatedEnergy", 
         "CalculatedTotalImpactEnergy"}, {
         TypeSystem`Atom[DateObject], 
         TypeSystem`Atom[GeoPosition], 
         TypeSystem`Atom[
          Entity["City"]], 
         TypeSystem`Atom[
          Quantity[1, "Kilometers"]], 
         TypeSystem`Atom[
          Quantity[1, "Kilometers"/"Seconds"]], 
         TypeSystem`Atom[
          Quantity[1, "Kilometers"/"Seconds"]], 
         TypeSystem`Atom[
          Quantity[1, "Kilometers"/"Seconds"]], 
         TypeSystem`Atom[
          Quantity[1, "Kilometers"/"Seconds"]], 
         TypeSystem`Atom[
          Quantity[1, "Gigajoules"]], 
         TypeSystem`Atom[
          Quantity[1, "MetricKilotons"]]}], 92], "Path" -> {}, 
     "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 10, "DataRowCount" -> 
     92, "DataColumnCount" -> 10, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["PeakBrightness", 
                  Style[
                  "PeakBrightness", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "PeakBrightness"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "PeakBrightness"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Coordinates", 
                  Style[
                  "Coordinates", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Coordinates"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Coordinates"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["NearestCity", 
                  Style[
                  "NearestCity", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "NearestCity"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "NearestCity"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Altitude", 
                  Style[
                  "Altitude", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Altitude"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Altitude"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Velocity", 
                  Style[
                  "Velocity", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Velocity"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Velocity"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["VelocityXComponent", 
                  Style[
                  "VelocityXComponent", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "VelocityXComponent"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "VelocityXComponent"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["VelocityYComponent", 
                  Style[
                  "VelocityYComponent", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "VelocityYComponent"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "VelocityYComponent"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["VelocityZComponent", 
                  Style[
                  "VelocityZComponent", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "VelocityZComponent"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "VelocityZComponent"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["TotalRadiatedEnergy", 
                  Style[
                  "TotalRadiatedEnergy", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "TotalRadiatedEnergy"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "TotalRadiatedEnergy"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["CalculatedTotalImpactEnergy", 
                  Style[
                  "CalculatedTotalImpactEnergy", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "CalculatedTotalImpactEnergy"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "CalculatedTotalImpactEnergy"}, "ColumnHeader", True], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Thu 8 Oct 2009 02:57:00\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["PeakBrightness"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"4.2\[Degree]S 120.6\[Degree]E\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Coordinates"]}, "Item", False], "Mouse"], 
              ImageSize -> {{106, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Bone\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["NearestCity"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"19.1`", "\"km\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Altitude"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"19.2`", 
                  
                  RowBox[{
                   "\"km\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"s\""}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Velocity"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"14", 
                  
                  RowBox[{
                   "\"km\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"s\""}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["VelocityXComponent"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"-16", 
                  
                  RowBox[{
                   "\"km\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"s\""}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["VelocityYComponent"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"-6", 
                  
                  RowBox[{
                   "\"km\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"s\""}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["VelocityZComponent"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"20000", "\"GJ\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["TotalRadiatedEnergy"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"33", "\"kt\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["CalculatedTotalImpactEnergy"]}, "Item", False], 
               "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Sat 21 Nov 2009 20:53:00\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["PeakBrightness"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"22.0\[Degree]S 29.2\[Degree]E\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Coordinates"]}, "Item", False], "Mouse"], 
              ImageSize -> {{106, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Kobojango\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["NearestCity"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"38", "\"km\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Altitude"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"32.1`", 
                  
                  RowBox[{
                   "\"km\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"s\""}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Velocity"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"3", 
                  
                  RowBox[{
                   "\"km\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"s\""}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["VelocityXComponent"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"-17", 
                  
                  RowBox[{
                   "\"km\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"s\""}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["VelocityYComponent"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"-27", 
                  RowBox[{
                   "\"km\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"s\""}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["VelocityZComponent"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"10000", "\"GJ\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["TotalRadiatedEnergy"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"18", "\"kt\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["CalculatedTotalImpactEnergy"]}, "Item", False], 
               "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Sat 25 Dec 2010 23:24:00\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["PeakBrightness"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"38.0\[Degree]N 158.0\[Degree]E\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Coordinates"]}, "Item", False], "Mouse"], 
              ImageSize -> {{106, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Kurilsk\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["NearestCity"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"26", "\"km\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Altitude"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"18.1`", 
                  
                  RowBox[{
                   "\"km\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"s\""}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Velocity"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"18", 
                  
                  RowBox[{
                   "\"km\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"s\""}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["VelocityXComponent"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"-2", 
                  
                  RowBox[{
                   "\"km\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"s\""}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["VelocityYComponent"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"-4", 
                  
                  RowBox[{
                   "\"km\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"s\""}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["VelocityZComponent"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"20000", "\"GJ\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["TotalRadiatedEnergy"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"33", "\"kt\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["CalculatedTotalImpactEnergy"]}, "Item", False], 
               "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Sat 21 Apr 2012 16:08:23\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["PeakBrightness"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"15.8\[Degree]S 174.8\[Degree]W\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Coordinates"]}, "Item", False], "Mouse"], 
              ImageSize -> {{106, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Hihifo\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["NearestCity"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Altitude"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Velocity"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["VelocityXComponent"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["VelocityYComponent"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["VelocityZComponent"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"143", "\"GJ\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["TotalRadiatedEnergy"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"0.42`", "\"kt\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["CalculatedTotalImpactEnergy"]}, "Item", False], 
               "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Mon 23 Apr 2012 22:01:10\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["PeakBrightness"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"36.2\[Degree]N 107.4\[Degree]E\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Coordinates"]}, "Item", False], "Mouse"], 
              ImageSize -> {{106, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Pingliang\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["NearestCity"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"25.2`", "\"km\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Altitude"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Velocity"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["VelocityXComponent"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["VelocityYComponent"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["VelocityZComponent"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"44", "\"GJ\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["TotalRadiatedEnergy"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"0.15`", "\"kt\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["CalculatedTotalImpactEnergy"]}, "Item", False], 
               "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Fri 4 May 2012 21:54:49\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["PeakBrightness"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"76.7\[Degree]N 10.6\[Degree]W\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Coordinates"]}, "Item", False], "Mouse"], 
              ImageSize -> {{106, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Illoqqortoormiut\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["NearestCity"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Altitude"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Velocity"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["VelocityXComponent"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["VelocityYComponent"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["VelocityZComponent"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"229", "\"GJ\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["TotalRadiatedEnergy"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"0.63`", "\"kt\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["CalculatedTotalImpactEnergy"]}, "Item", False], 
               "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Tue 15 May 2012 11:04:17\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["PeakBrightness"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"61.8\[Degree]S 135.5\[Degree]W\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Coordinates"]}, "Item", False], "Mouse"], 
              ImageSize -> {{106, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Owenga\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["NearestCity"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"33.3`", "\"km\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Altitude"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Velocity"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"-0.8`", 
                  
                  RowBox[{
                   "\"km\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"s\""}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["VelocityXComponent"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.1`", 
                  
                  RowBox[{
                   "\"km\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"s\""}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["VelocityYComponent"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"17", 
                  
                  RowBox[{
                   "\"km\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"s\""}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["VelocityZComponent"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"132", "\"GJ\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["TotalRadiatedEnergy"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"0.39`", "\"kt\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["CalculatedTotalImpactEnergy"]}, "Item", False], 
               "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Fri 25 May 2012 11:31:24\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["PeakBrightness"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"41.8\[Degree]S 36.2\[Degree]W\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Coordinates"]}, "Item", False], "Mouse"], 
              ImageSize -> {{106, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Grytviken\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["NearestCity"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Altitude"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Velocity"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["VelocityXComponent"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["VelocityYComponent"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["VelocityZComponent"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"60", "\"GJ\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["TotalRadiatedEnergy"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"0.19`", "\"kt\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["CalculatedTotalImpactEnergy"]}, "Item", False], 
               "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Wed 25 Jul 2012 07:48:20\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["PeakBrightness"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"36.4\[Degree]N 41.5\[Degree]E\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Coordinates"]}, "Item", False], "Mouse"], 
              ImageSize -> {{106, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Sinjar\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["NearestCity"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"26.8`", "\"km\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Altitude"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Velocity"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"0.8`", 
                  
                  RowBox[{
                   "\"km\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"s\""}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["VelocityXComponent"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"2", 
                  
                  RowBox[{
                   "\"km\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"s\""}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["VelocityYComponent"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"-18.4`", 
                  
                  RowBox[{
                   "\"km\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"s\""}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["VelocityZComponent"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"133", "\"GJ\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["TotalRadiatedEnergy"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"0.39`", "\"kt\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["CalculatedTotalImpactEnergy"]}, "Item", False], 
               "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Fri 27 Jul 2012 04:19:50\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["PeakBrightness"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"63.1\[Degree]N 172.3\[Degree]E\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Coordinates"]}, "Item", False], "Mouse"], 
              ImageSize -> {{106, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Anadyr\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["NearestCity"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"27.2`", "\"km\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Altitude"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Velocity"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["VelocityXComponent"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["VelocityYComponent"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["VelocityZComponent"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"34", "\"GJ\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["TotalRadiatedEnergy"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"0.12`", "\"kt\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["CalculatedTotalImpactEnergy"]}, "Item", False], 
               "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Sun 26 Aug 2012 14:55:47\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["PeakBrightness"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"11.8\[Degree]N 117.0\[Degree]E\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Coordinates"]}, "Item", False], "Mouse"], 
              ImageSize -> {{106, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"El Nido\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["NearestCity"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"36", "\"km\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Altitude"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Velocity"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"5", 
                  
                  RowBox[{
                   "\"km\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"s\""}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["VelocityXComponent"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"-11.6`", 
                  
                  RowBox[{
                   "\"km\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"s\""}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["VelocityYComponent"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"-0.7`", 
                  
                  RowBox[{
                   "\"km\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"s\""}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["VelocityZComponent"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"249", "\"GJ\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["TotalRadiatedEnergy"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"0.68`", "\"kt\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["CalculatedTotalImpactEnergy"]}, "Item", False], 
               "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Mon 27 Aug 2012 06:57:43\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["PeakBrightness"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"18.3\[Degree]S 64.2\[Degree]E\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Coordinates"]}, "Item", False], "Mouse"], 
              ImageSize -> {{106, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Quatre Cocos\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["NearestCity"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"38.7`", "\"km\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Altitude"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Velocity"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"-8", 
                  
                  RowBox[{
                   "\"km\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"s\""}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["VelocityXComponent"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"-23.7`", 
                  
                  RowBox[{
                   "\"km\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"s\""}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["VelocityYComponent"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"-14.5`", 
                  
                  RowBox[{
                   "\"km\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"s\""}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["VelocityZComponent"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"68", "\"GJ\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["TotalRadiatedEnergy"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"0.22`", "\"kt\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["CalculatedTotalImpactEnergy"]}, "Item", False], 
               "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Mon 10 Sep 2012 01:03:32\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["PeakBrightness"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"69.8\[Degree]S 111.7\[Degree]W\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Coordinates"]}, "Item", False], "Mouse"], 
              ImageSize -> {{106, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Rothera \[Hyphen] permanent station of the UK\""], 
               
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["NearestCity"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"23.8`", "\"km\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Altitude"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Velocity"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"-10.2`", 
                  
                  RowBox[{
                   "\"km\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"s\""}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["VelocityXComponent"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"-5.2`", 
                  
                  RowBox[{
                   "\"km\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"s\""}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["VelocityYComponent"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"12.4`", 
                  
                  RowBox[{
                   "\"km\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"s\""}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["VelocityZComponent"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"23", "\"GJ\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["TotalRadiatedEnergy"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"0.082`", "\"kt\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["CalculatedTotalImpactEnergy"]}, "Item", False], 
               "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Tue 11 Sep 2012 22:07:30\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["PeakBrightness"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"18.9\[Degree]S 105.2\[Degree]E\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Coordinates"]}, "Item", False], "Mouse"], 
              ImageSize -> {{106, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"The Settlement\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["NearestCity"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Altitude"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Velocity"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["VelocityXComponent"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["VelocityYComponent"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["VelocityZComponent"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"52", "\"GJ\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["TotalRadiatedEnergy"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"0.17`", "\"kt\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["CalculatedTotalImpactEnergy"]}, "Item", False], 
               "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Tue 18 Sep 2012 19:34:39\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["PeakBrightness"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"1.2\[Degree]N 52.2\[Degree]W\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Coordinates"]}, "Item", False], "Mouse"], 
              ImageSize -> {{106, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Mazag\[ATilde]o\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["NearestCity"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"28.1`", "\"km\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Altitude"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Velocity"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"-1.9`", 
                  
                  RowBox[{
                   "\"km\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"s\""}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["VelocityXComponent"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"14.1`", 
                  
                  RowBox[{
                   "\"km\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"s\""}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["VelocityYComponent"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"-11.5`", 
                  
                  RowBox[{
                   "\"km\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"s\""}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["VelocityZComponent"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"244", "\"GJ\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["TotalRadiatedEnergy"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"0.67`", "\"kt\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["CalculatedTotalImpactEnergy"]}, "Item", False], 
               "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Fri 28 Sep 2012 05:44:12\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["PeakBrightness"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"6.9\[Degree]S 73.7\[Degree]E\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Coordinates"]}, "Item", False], "Mouse"], 
              ImageSize -> {{106, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Feydhoo\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["NearestCity"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Altitude"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Velocity"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["VelocityXComponent"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["VelocityYComponent"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["VelocityZComponent"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"38", "\"GJ\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["TotalRadiatedEnergy"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"0.13`", "\"kt\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["CalculatedTotalImpactEnergy"]}, "Item", False], 
               "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Tue 2 Oct 2012 16:38:38\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["PeakBrightness"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"8.1\[Degree]S 111.9\[Degree]W\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Coordinates"]}, "Item", False], "Mouse"], 
              ImageSize -> {{106, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Hanga Roa\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["NearestCity"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"35", "\"km\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Altitude"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Velocity"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.4`", 
                  
                  RowBox[{
                   "\"km\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"s\""}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["VelocityXComponent"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"15.3`", 
                  
                  RowBox[{
                   "\"km\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"s\""}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["VelocityYComponent"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1", 
                  
                  RowBox[{
                   "\"km\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"s\""}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["VelocityZComponent"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"470", "\"GJ\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["TotalRadiatedEnergy"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.2`", "\"kt\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["CalculatedTotalImpactEnergy"]}, "Item", False], 
               "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Wed 3 Oct 2012 22:50:12\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["PeakBrightness"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"41.5\[Degree]S 21.9\[Degree]W\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Coordinates"]}, "Item", False], "Mouse"], 
              ImageSize -> {{106, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Edinburgh\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["NearestCity"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Altitude"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Velocity"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"-2.4`", 
                  
                  RowBox[{
                   "\"km\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"s\""}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["VelocityXComponent"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"5.5`", 
                  
                  RowBox[{
                   "\"km\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"s\""}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["VelocityYComponent"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"15.9`", 
                  
                  RowBox[{
                   "\"km\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"s\""}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["VelocityZComponent"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"280", "\"GJ\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["TotalRadiatedEnergy"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"0.75`", "\"kt\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["CalculatedTotalImpactEnergy"]}, "Item", False], 
               "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Tue 9 Oct 2012 00:54:55\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["PeakBrightness"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"51.2\[Degree]N 84.6\[Degree]W\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Coordinates"]}, "Item", False], "Mouse"], 
              ImageSize -> {{106, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Hearst\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["NearestCity"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"27.8`", "\"km\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Altitude"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Velocity"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"3.4`", 
                  
                  RowBox[{
                   "\"km\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"s\""}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["VelocityXComponent"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"12", 
                  
                  RowBox[{
                   "\"km\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"s\""}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["VelocityYComponent"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"5.1`", 
                  
                  RowBox[{
                   "\"km\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"s\""}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["VelocityZComponent"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"210", "\"GJ\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["TotalRadiatedEnergy"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"0.58`", "\"kt\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["CalculatedTotalImpactEnergy"]}, "Item", False], 
               "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Fri 19 Oct 2012 16:26:22\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["PeakBrightness"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"75.4\[Degree]S 49.6\[Degree]E\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Coordinates"]}, "Item", False], "Mouse"], 
              ImageSize -> {{106, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Syowa \[Hyphen] permanent station of Japan\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["NearestCity"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"29.3`", "\"km\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Altitude"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Velocity"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"-2.3`", 
                  
                  RowBox[{
                   "\"km\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"s\""}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["VelocityXComponent"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"-3.9`", 
                  
                  RowBox[{
                   "\"km\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"s\""}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["VelocityYComponent"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"12.4`", 
                  
                  RowBox[{
                   "\"km\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"s\""}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["VelocityZComponent"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"23", "\"GJ\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["TotalRadiatedEnergy"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"0.082`", "\"kt\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["CalculatedTotalImpactEnergy"]}, "Item", False], 
               "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 92, 1], {1, 92 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 92, 1], {1, 92 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[92, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[92, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 92, 1], {1, 92 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 92, 1], {1, 92 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{895., {299.6875, 305.3125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{895., {299.6875, 305.3125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.936867643058528*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"1f7eb8cd-4c98-4b6d-81ed-9fdd909f23bc"]
}, Open  ]],

Cell["\<\
Q9. Find a dataset of the 5 largest observed altitudes in the Fireballs & \
Bolides dataset.\
\>", "CodeText",
 CellChangeTimes->{{3.933044981954609*^9, 3.9330449829879637`*^9}, {
   3.9330450176513767`*^9, 3.9330450320914183`*^9}, 3.933045639637404*^9, 
   3.9348735218505*^9, 3.934988504825323*^9, {3.9351667086353073`*^9, 
   3.935166715653953*^9}, {3.935566882426754*^9, 3.935566883715104*^9}, 
   3.935569314445806*^9, 3.9356747960130653`*^9, 3.935677720113924*^9, {
   3.935677758458049*^9, 3.935677760068716*^9}, 3.93576933496391*^9, 
   3.9357694822038927`*^9, 3.9357703086358137`*^9, 3.936259494484939*^9, {
   3.936861845707225*^9, 3.936861847257862*^9}, 3.93686463177466*^9, {
   3.936864668693864*^9, 3.936864688472411*^9}, 3.9368676266584044`*^9, {
   3.9368676945280857`*^9, 
   3.936867724495195*^9}},ExpressionUUID->"314ea4e1-6d30-4567-8ef8-\
726c01f2fdd8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fireballs", "[", 
  RowBox[{"Max", ",", "\"\<Altitude\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.936867659772084*^9, 3.936867677477187*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"d5436d34-fbe0-42ce-9acf-8b0bc5990c3a"],

Cell[BoxData[
 TemplateBox[{"66.6`", "\"km\"", "kilometers", "\"Kilometers\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.936867678071908*^9},
 CellLabel->"Out[47]=",ExpressionUUID->"3f3c4f7f-328c-425c-a259-ffe63a18508e"]
}, Open  ]],

Cell["\<\
Q10. Find a dataset of the 5 largest observed altitudes in the Fireballs & \
Bolides dataset.\
\>", "CodeText",
 CellChangeTimes->{{3.933044981954609*^9, 3.9330449829879637`*^9}, {
   3.9330450176513767`*^9, 3.9330450320914183`*^9}, 3.933045639637404*^9, 
   3.9348735218505*^9, 3.934988504825323*^9, {3.9351667086353073`*^9, 
   3.935166715653953*^9}, {3.935566882426754*^9, 3.935566883715104*^9}, 
   3.935569314445806*^9, 3.9356747960130653`*^9, 3.935677720113924*^9, {
   3.935677758458049*^9, 3.935677760068716*^9}, 3.93576933496391*^9, 
   3.9357694822038927`*^9, 3.9357703086358137`*^9, 3.936259494484939*^9, {
   3.936861845707225*^9, 3.936861847257862*^9}, 3.93686463177466*^9, {
   3.936864668693864*^9, 3.936864688472411*^9}, 3.9368676266584044`*^9, {
   3.9368676945280857`*^9, 
   3.936867707833789*^9}},ExpressionUUID->"7dd442ac-b03b-4b8e-ad5c-\
71dd03a5efe9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fireballs", "[", 
  RowBox[{
   RowBox[{"TakeLargest", "[", "5", "]"}], ",", "\"\<Altitude\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.936867659772084*^9, 3.936867677477187*^9}, {
  3.9368677300126553`*^9, 3.936867799869665*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"fe4b8eb8-a617-48b3-9886-be456e607ce3"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {
       Quantity[66.6, "Kilometers"], 
       Quantity[59.3, "Kilometers"], 
       Quantity[50, "Kilometers"], 
       Quantity[45.5, "Kilometers"], 
       Quantity[44, "Kilometers"]}, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`AtomShape[75]], 5, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Atom[
        Quantity[1, "Kilometers"]], 5], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`AtomShape[75]], 5, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Vector[
       TypeSystem`Atom[
        Quantity[1, "Kilometers"]], 5], "Path" -> {}, "DisplayedRowCount" -> 
     5, "DisplayedColumnCount" -> 1, "DataRowCount" -> 5, "DataColumnCount" -> 
     1, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"66.6`", "\"km\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"59.3`", "\"km\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"50", "\"km\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"45.5`", "\"km\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"44", "\"km\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[
               TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{84., {73.1875, 78.8125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{84., {73.1875, 78.8125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.936867678071908*^9, {3.936867745516103*^9, 3.936867801120371*^9}},
 CellLabel->"Out[52]=",ExpressionUUID->"e156117e-15d8-43d8-a8e4-5ef70a05240f"]
}, Open  ]],

Cell["\<\
Q11. Make a histogram of the differences in successive peak brightness times \
in the Fireballs & Bolides dataset.\
\>", "CodeText",
 CellChangeTimes->{{3.933044981954609*^9, 3.9330449829879637`*^9}, {
   3.9330450176513767`*^9, 3.9330450320914183`*^9}, 3.933045639637404*^9, 
   3.9348735218505*^9, 3.934988504825323*^9, {3.9351667086353073`*^9, 
   3.935166715653953*^9}, {3.935566882426754*^9, 3.935566883715104*^9}, 
   3.935569314445806*^9, 3.9356747960130653`*^9, 3.935677720113924*^9, {
   3.935677758458049*^9, 3.935677760068716*^9}, 3.93576933496391*^9, 
   3.9357694822038927`*^9, 3.9357703086358137`*^9, 3.936259494484939*^9, {
   3.936861845707225*^9, 3.936861847257862*^9}, 3.93686463177466*^9, {
   3.936864668693864*^9, 3.936864688472411*^9}, 3.9368676266584044`*^9, {
   3.9368676991482477`*^9, 3.9368676993150043`*^9}, 
   3.936867811515023*^9},ExpressionUUID->"df1c421d-41fe-4f5f-b811-\
a6c53f8a7e70"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{"Differences", "[", 
   RowBox[{"Normal", "[", 
    RowBox[{
     RowBox[{"ResourceData", "[", "\"\<Fireballs and Bolides\>\"", "]"}], "[", 
     RowBox[{"All", ",", "\"\<PeakBrightness\>\""}], "]"}], "]"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.936867659772084*^9, 3.936867677477187*^9}, 
   3.93686786108762*^9},
 CellLabel->"In[53]:=",ExpressionUUID->"2cd31054-31d5-4478-b072-d15b84e26889"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.609], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.609], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0., 0}, {10., 47.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{21.760477131705365`, 
           54.51432899368275}, {-103.93815945002, 94.49999999999999}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 47]& ,
        TagBoxNote->"47"],
       StyleBox["47", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[47, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{10., 0}, {20., 24.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{54.01432899368275, 
           86.76818085566015}, {-7.074804825542131, 94.49999999999999}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 24]& ,
        TagBoxNote->"24"],
       StyleBox["24", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[24, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{20., 0}, {30., 6.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{86.26818085566015, 119.02203271763753`}, {
           68.73129879361446, 94.49999999999999}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 6]& ,
        TagBoxNote->"6"],
       StyleBox["6", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[6, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{30., 0}, {40., 7.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{118.52203271763753`, 151.2758845796149}, {
           64.5198485925502, 94.49999999999999}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 7]& ,
        TagBoxNote->"7"],
       StyleBox["7", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[7, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{40., 0}, {50., 3.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{150.7758845796149, 183.5297364415923}, {
           81.36564939680721, 94.49999999999999}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{50., 0}, {60., 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{183.0297364415923, 215.78358830356967`}, {
           89.78854979893573, 94.49999999999999}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{60., 0}, {70., 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{215.28358830356967`, 248.03744016554708`}, {
           89.78854979893573, 94.49999999999999}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{390., 0}, {400., 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{1279.6606997488234`, 1312.4145516108008`}, {
           89.78854979893573, 94.49999999999999}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{480., 0}, {490., 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{1569.9453665066198`, 1602.6992183685973`}, {
           89.78854979893573, 94.49999999999999}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], 
       "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-2.05, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{0, 102.5}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.936867678071908*^9, 3.936867861680787*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"f13b1487-ff19-46bc-bd78-8a74f821584e"]
}, Open  ]],

Cell["\<\
Q12. Plot the nearest cities for the first 10 entries in the Fireballs & \
Bolides dataset, labeling each city.\
\>", "CodeText",
 CellChangeTimes->{{3.933044981954609*^9, 3.9330449829879637`*^9}, {
   3.9330450176513767`*^9, 3.9330450320914183`*^9}, 3.933045639637404*^9, 
   3.9348735218505*^9, 3.934988504825323*^9, {3.9351667086353073`*^9, 
   3.935166715653953*^9}, {3.935566882426754*^9, 3.935566883715104*^9}, 
   3.935569314445806*^9, 3.9356747960130653`*^9, 3.935677720113924*^9, {
   3.935677758458049*^9, 3.935677760068716*^9}, 3.93576933496391*^9, 
   3.9357694822038927`*^9, 3.9357703086358137`*^9, 3.936259494484939*^9, {
   3.936861845707225*^9, 3.936861847257862*^9}, 3.93686463177466*^9, {
   3.936864668693864*^9, 3.936864688472411*^9}, 3.9368676266584044`*^9, {
   3.936867700260333*^9, 3.936867700382028*^9}, {3.936867873378923*^9, 
   3.9368678737629757`*^9}},ExpressionUUID->"c5e94318-caa9-4c92-ae7c-\
6bda2987be24"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GeoListPlot", "[", 
  RowBox[{
   RowBox[{"fireballs", "[", 
    RowBox[{
     RowBox[{"1", ";;", "10"}], ",", "\"\<NearestCity\>\""}], "]"}], ",", 
   RowBox[{"GeoLabels", "->", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.936867659772084*^9, 3.936867677477187*^9}, {
  3.9368678943068*^9, 3.9368679059915133`*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"95e834fb-6228-4154-87ed-59eff22f9c4d"],

Cell[BoxData[
 GraphicsBox[{{
    TagBox[
     {Texture[
       GraphicsBox[
        TagBox[
         RasterBox[CompressedData["
1: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
          "], {{0, 256.}, {513., 0}}, {0, 255}, ColorFunction -> RGBColor], 
         BoxForm`ImageTag[
         "Byte", ColorSpace -> "RGB", Interleaving -> False, 
          MetaInformation -> <|
           "Exif" -> <|
             "Software" -> 
              "Created with the Wolfram Language: www.wolfram.com"|>, 
            "GeoMetaInformation" -> <|
             "GeoModel" -> "ITRF00", 
              "LonLatBox" -> {{-105.13399999999999`, 254.866}, {-90., 90}}, 
              "PlotRange" -> {{-105.46875, 255.234375}, {-90., 90.}}, 
              "Projection" -> "Equirectangular", "Software" -> 
              "Created with the Wolfram Language: www.wolfram.com", 
              "TileSources" -> {"Wolfram", "OSM"}|>|>], Selectable -> False], 
        DefaultBaseStyle -> "ImageGraphics", ImageSizeRaw -> {513., 256.}, 
        PlotRange -> {{0, 513.}, {0, 256.}}]], 
      PolygonBox[{{-105.13399999999999`, -90.}, {-105.13399999999999`, 90.}, {
       254.86600000000004`, 90.}, {
       254.86600000000004`, -90.}, {-105.13399999999999`, -90.}},
       VertexTextureCoordinates->{{0.000928048516352642, 0.}, {
        0.000928048516352642, 1.}, {0.9989787307775613, 1.}, {
        0.9989787307775613, 0.}, {0.000928048516352642, 0.}}]},
     Annotation[#, "GeoBackground", "WolframGeoGraphics"]& ], 
    TagBox[
     TagBox[
      TooltipBox[
       {Opacity[0], RectangleBox[Scaled[{0.8, 0}], Scaled[{1, 0.2}]]},
       TagBox[
        GridBox[{{
           StyleBox["\"Geo data sources\"", Bold, StripOnInput -> False]}, {
           
           TemplateBox[{
            "\"Wolfram Knowledgebase\"", "\" (\"", 
             "\"https://www.wolfram.com/\"", "\")\""}, "RowDefault"]}, {
           
           TemplateBox[{
            "\"\[Copyright] OpenStreetMap contributors\"", "\" (\"", 
             "\"https://www.openstreetmap.org/copyright\"", "\")\""}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
      Annotation[#, 
       Column[{
         Style["Geo data sources", Bold], 
         Row[{
          "Wolfram Knowledgebase", " (", "https://www.wolfram.com/", ")"}], 
         Row[{
          "\[Copyright] OpenStreetMap contributors", " (", 
           "https://www.openstreetmap.org/copyright", ")"}]}], "Tooltip"]& ],
     Annotation[#, "Metadata", "WolframGeoGraphics"]& ], {{
      {RGBColor[0.790588, 0.201176, 0.], PointSize[Large], Opacity[1], 
       EdgeForm[{Opacity[0.4], Thickness[Tiny]}], FaceForm[{RGBColor[
       1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
        GraphicsBox[
         {RGBColor[0.790588, 0.201176, 0.], Thickness[Large], Opacity[1], 
          EdgeForm[None], DiskBox[{0, 0}]}], {120.32000000000002, -4.54}, 
        Automatic, Offset[6.272]], InsetBox[
        GraphicsBox[
         {RGBColor[0.790588, 0.201176, 0.], Thickness[Large], Opacity[1], 
          EdgeForm[None], DiskBox[{0, 0}]}], {28.780000000000005, -21.82}, 
        Automatic, Offset[6.272]], InsetBox[
        GraphicsBox[
         {RGBColor[0.790588, 0.201176, 0.], Thickness[Large], Opacity[1], 
          EdgeForm[None], DiskBox[{0, 0}]}], {147.88, 45.230000000000004}, 
        Automatic, Offset[6.272]], InsetBox[
        GraphicsBox[
         {RGBColor[0.790588, 0.201176, 0.], Thickness[Large], Opacity[1], 
          EdgeForm[None], DiskBox[{0, 0}]}], {186.24, -15.970000000000002}, 
        Automatic, Offset[6.272]], InsetBox[
        GraphicsBox[
         {RGBColor[0.790588, 0.201176, 0.], Thickness[Large], Opacity[1], 
          EdgeForm[None], DiskBox[{0, 0}]}], {106.68, 35.53}, Automatic, 
        Offset[6.272]], InsetBox[
        GraphicsBox[
         {RGBColor[0.790588, 0.201176, 0.], Thickness[Large], Opacity[1], 
          EdgeForm[None], DiskBox[{0, 0}]}], {-21.97, 70.48}, Automatic, 
        Offset[6.272]], InsetBox[
        GraphicsBox[
         {RGBColor[0.790588, 0.201176, 0.], Thickness[Large], Opacity[1], 
          EdgeForm[None], DiskBox[{0, 0}]}], {183.639, -44.027}, Automatic, 
        Offset[6.272]], InsetBox[
        GraphicsBox[
         {RGBColor[0.790588, 0.201176, 0.], Thickness[Large], Opacity[1], 
          EdgeForm[None], DiskBox[{0, 0}]}], {-36.508, -54.2815}, Automatic, 
        Offset[6.272]], InsetBox[
        GraphicsBox[
         {RGBColor[0.790588, 0.201176, 0.], Thickness[Large], Opacity[1], 
          EdgeForm[None], DiskBox[{0, 0}]}], {41.86, 36.32}, Automatic, 
        Offset[6.272]], InsetBox[
        GraphicsBox[
         {RGBColor[0.790588, 0.201176, 0.], Thickness[Large], Opacity[1], 
          EdgeForm[None], DiskBox[{0, 0}]}], {177.48, 64.75}, Automatic, 
        Offset[6.272]]}, {GraphicsGroupBox[{
         {EdgeForm[None], FaceForm[Opacity[0]], 
          PolygonBox[{
           Offset[{46., 15.000000000000005`}, {177.48, 64.75}], 
            Offset[{46., 5.329070518200751*^-15}, {177.48, 64.75}], 
            Offset[{0., -5.329070518200751*^-15}, {177.48, 64.75}], 
            Offset[{0., 14.999999999999995`}, {177.48, 64.75}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"Anadyr\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineColor->GrayLevel[0],
           LineOpacity->1,
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           GraphicsColor->GrayLevel[0],
           Opacity->1,
           FontWeight->Bold,
           FontColor->GrayLevel[0],
           FontOpacity->1], Offset[{23., 7.5}, {177.48, 64.75}], NCache[
          ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
           ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
         {EdgeForm[None], FaceForm[Opacity[0]], 
          PolygonBox[{
           Offset[{46., 15.000000000000005`}, {537.48, 64.75}], 
            Offset[{46., 5.329070518200751*^-15}, {537.48, 64.75}], 
            Offset[{0., -5.329070518200751*^-15}, {537.48, 64.75}], 
            Offset[{0., 14.999999999999995`}, {537.48, 64.75}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"Anadyr\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineColor->GrayLevel[0],
           LineOpacity->1,
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           GraphicsColor->GrayLevel[0],
           Opacity->1,
           FontWeight->Bold,
           FontColor->GrayLevel[0],
           FontOpacity->1], Offset[{23., 7.5}, {537.48, 64.75}], NCache[
          ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
           ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
         {EdgeForm[None], FaceForm[Opacity[0]], 
          PolygonBox[{
           Offset[{38., 15.000000000000004`}, {41.86, 36.32}], 
            Offset[{38., 4.440892098500626*^-15}, {41.86, 36.32}], 
            Offset[{0., -4.440892098500626*^-15}, {41.86, 36.32}], 
            Offset[{0., 14.999999999999996`}, {41.86, 36.32}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"Sinjar\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineColor->GrayLevel[0],
           LineOpacity->1,
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           GraphicsColor->GrayLevel[0],
           Opacity->1,
           FontWeight->Bold,
           FontColor->GrayLevel[0],
           FontOpacity->1], Offset[{19., 7.5}, {41.86, 36.32}], NCache[
          ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
           ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
         {EdgeForm[None], FaceForm[Opacity[0]], 
          PolygonBox[{
           Offset[{38., 15.000000000000004`}, {401.86, 36.32}], 
            Offset[{38., 4.440892098500626*^-15}, {401.86, 36.32}], 
            Offset[{0., -4.440892098500626*^-15}, {401.86, 36.32}], 
            Offset[{0., 14.999999999999996`}, {401.86, 36.32}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"Sinjar\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineColor->GrayLevel[0],
           LineOpacity->1,
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           GraphicsColor->GrayLevel[0],
           Opacity->1,
           FontWeight->Bold,
           FontColor->GrayLevel[0],
           FontOpacity->1], Offset[{19., 7.5}, {401.86, 36.32}], NCache[
          ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
           ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
         {EdgeForm[None], FaceForm[Opacity[0]], 
          PolygonBox[{
           Offset[{30., 15.000000000000007`}, {-36.508, -54.2815}], 
            Offset[{30., 7.105427357601002*^-15}, {-36.508, -54.2815}], 
            Offset[{-30., -7.105427357601002*^-15}, {-36.508, -54.2815}], 
            Offset[{-30., 14.999999999999993`}, {-36.508, -54.2815}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"Grytviken\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineColor->GrayLevel[0],
           LineOpacity->1,
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           GraphicsColor->GrayLevel[0],
           Opacity->1,
           FontWeight->Bold,
           FontColor->GrayLevel[0],
           FontOpacity->1], Offset[{0., 7.5}, {-36.508, -54.2815}], NCache[
          ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
           ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
         {EdgeForm[None], FaceForm[Opacity[0]], 
          PolygonBox[{
           Offset[{30., 15.000000000000007`}, {323.492, -54.2815}], 
            Offset[{30., 7.105427357601002*^-15}, {323.492, -54.2815}], 
            Offset[{-30., -7.105427357601002*^-15}, {323.492, -54.2815}], 
            Offset[{-30., 14.999999999999993`}, {323.492, -54.2815}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"Grytviken\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineColor->GrayLevel[0],
           LineOpacity->1,
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           GraphicsColor->GrayLevel[0],
           Opacity->1,
           FontWeight->Bold,
           FontColor->GrayLevel[0],
           FontOpacity->1], Offset[{0., 7.5}, {323.492, -54.2815}], NCache[
          ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
           ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
         {EdgeForm[None], FaceForm[Opacity[0]], 
          PolygonBox[{
           Offset[{98., 15.00000000000001}, {-21.97, 70.48}], 
            Offset[{98., 1.0658141036401503`*^-14}, {-21.97, 70.48}], 
            Offset[{0., -1.0658141036401503`*^-14}, {-21.97, 70.48}], 
            Offset[{0., 14.99999999999999}, {-21.97, 70.48}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"Illoqqortoormiut\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineColor->GrayLevel[0],
           LineOpacity->1,
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           GraphicsColor->GrayLevel[0],
           Opacity->1,
           FontWeight->Bold,
           FontColor->GrayLevel[0],
           FontOpacity->1], Offset[{49., 7.5}, {-21.97, 70.48}], NCache[
          ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
           ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
         {EdgeForm[None], FaceForm[Opacity[0]], 
          PolygonBox[{
           Offset[{98., 15.00000000000001}, {338.03, 70.48}], 
            Offset[{98., 1.0658141036401503`*^-14}, {338.03, 70.48}], 
            Offset[{0., -1.0658141036401503`*^-14}, {338.03, 70.48}], 
            Offset[{0., 14.99999999999999}, {338.03, 70.48}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"Illoqqortoormiut\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineColor->GrayLevel[0],
           LineOpacity->1,
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           GraphicsColor->GrayLevel[0],
           Opacity->1,
           FontWeight->Bold,
           FontColor->GrayLevel[0],
           FontOpacity->1], Offset[{49., 7.5}, {338.03, 70.48}], NCache[
          ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
           ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
         {EdgeForm[None], FaceForm[Opacity[0]], 
          PolygonBox[{
           Offset[{58., 15.000000000000007`}, {106.68, 35.53}], 
            Offset[{58., 6.217248937900877*^-15}, {106.68, 35.53}], 
            Offset[{0., -6.217248937900877*^-15}, {106.68, 35.53}], 
            Offset[{0., 14.999999999999993`}, {106.68, 35.53}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"Pingliang\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineColor->GrayLevel[0],
           LineOpacity->1,
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           GraphicsColor->GrayLevel[0],
           Opacity->1,
           FontWeight->Bold,
           FontColor->GrayLevel[0],
           FontOpacity->1], Offset[{29., 7.5}, {106.68, 35.53}], NCache[
          ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
           ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
         {EdgeForm[None], FaceForm[Opacity[0]], 
          PolygonBox[{
           Offset[{58., 15.000000000000007`}, {466.67999999999995`, 35.53}], 
            Offset[{58., 6.217248937900877*^-15}, {466.67999999999995`, 
             35.53}], 
            Offset[{0., -6.217248937900877*^-15}, {466.67999999999995`, 
             35.53}], 
            Offset[{0., 14.999999999999993`}, {466.67999999999995`, 
             35.53}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"Pingliang\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineColor->GrayLevel[0],
           LineOpacity->1,
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           GraphicsColor->GrayLevel[0],
           Opacity->1,
           FontWeight->Bold,
           FontColor->GrayLevel[0],
           FontOpacity->1], Offset[{29., 7.5}, {466.67999999999995, 35.53}], 
          NCache[ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
           ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
         {EdgeForm[None], FaceForm[Opacity[0]], 
          PolygonBox[{
           Offset[{45., 13.000000000000005`}, {147.88, 45.230000000000004`}], 
            Offset[{45., 5.329070518200751*^-15}, {147.88, 
             45.230000000000004`}], 
            Offset[{0., -5.329070518200751*^-15}, {147.88, 
             45.230000000000004`}], 
            Offset[{0., 12.999999999999995`}, {147.88, 
             45.230000000000004`}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"Kurilsk\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineColor->GrayLevel[0],
           LineOpacity->1,
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           GraphicsColor->GrayLevel[0],
           Opacity->1,
           FontWeight->Bold,
           FontColor->GrayLevel[0],
           FontOpacity->1], Offset[{22.5, 6.5}, {147.88, 45.230000000000004}],
           NCache[ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
           ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
         {EdgeForm[None], FaceForm[Opacity[0]], 
          PolygonBox[{
           Offset[{45., 13.000000000000005`}, {507.87999999999994`, 
             45.230000000000004`}], 
            Offset[{45., 5.329070518200751*^-15}, {507.87999999999994`, 
             45.230000000000004`}], 
            Offset[{0., -5.329070518200751*^-15}, {507.87999999999994`, 
             45.230000000000004`}], 
            Offset[{0., 12.999999999999995`}, {507.87999999999994`, 
             45.230000000000004`}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"Kurilsk\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineColor->GrayLevel[0],
           LineOpacity->1,
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           GraphicsColor->GrayLevel[0],
           Opacity->1,
           FontWeight->Bold,
           FontColor->GrayLevel[0],
           FontOpacity->1], 
          Offset[{22.5, 6.5}, {507.87999999999994, 45.230000000000004}], 
          NCache[ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
           ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
         {EdgeForm[None], FaceForm[Opacity[0]], 
          PolygonBox[{
           Offset[{65., 15.000000000000007`}, {28.780000000000005`, -21.82}], 
            Offset[{65., 7.105427357601002*^-15}, {
             28.780000000000005`, -21.82}], 
            Offset[{0., -7.105427357601002*^-15}, {
             28.780000000000005`, -21.82}], 
            Offset[{0., 14.999999999999993`}, {
             28.780000000000005`, -21.82}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"Kobojango\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineColor->GrayLevel[0],
           LineOpacity->1,
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           GraphicsColor->GrayLevel[0],
           Opacity->1,
           FontWeight->Bold,
           FontColor->GrayLevel[0],
           FontOpacity->1], Offset[{32.5, 7.5}, {28.780000000000005, -21.82}],
           NCache[ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
           ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
         {EdgeForm[None], FaceForm[Opacity[0]], 
          PolygonBox[{
           Offset[{65., 15.000000000000007`}, {388.78, -21.82}], 
            Offset[{65., 7.105427357601002*^-15}, {388.78, -21.82}], 
            Offset[{0., -7.105427357601002*^-15}, {388.78, -21.82}], 
            Offset[{0., 14.999999999999993`}, {388.78, -21.82}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"Kobojango\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineColor->GrayLevel[0],
           LineOpacity->1,
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           GraphicsColor->GrayLevel[0],
           Opacity->1,
           FontWeight->Bold,
           FontColor->GrayLevel[0],
           FontOpacity->1], Offset[{32.5, 7.5}, {388.78, -21.82}], NCache[
          ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
           ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
         {EdgeForm[None], FaceForm[Opacity[0]], 
          PolygonBox[{
           Offset[{34., 13.000000000000004`}, {120.32000000000002`, -4.54}], 
            Offset[{34., 3.552713678800501*^-15}, {
             120.32000000000002`, -4.54}], 
            Offset[{0., -3.552713678800501*^-15}, {
             120.32000000000002`, -4.54}], 
            Offset[{0., 12.999999999999996`}, {
             120.32000000000002`, -4.54}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"Bone\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineColor->GrayLevel[0],
           LineOpacity->1,
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           GraphicsColor->GrayLevel[0],
           Opacity->1,
           FontWeight->Bold,
           FontColor->GrayLevel[0],
           FontOpacity->1], Offset[{17., 6.5}, {120.32000000000002, -4.54}], 
          NCache[ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
           ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
         {EdgeForm[None], FaceForm[Opacity[0]], 
          PolygonBox[{
           Offset[{34., 13.000000000000004`}, {480.32000000000005`, -4.54}], 
            Offset[{34., 3.552713678800501*^-15}, {
             480.32000000000005`, -4.54}], 
            Offset[{0., -3.552713678800501*^-15}, {
             480.32000000000005`, -4.54}], 
            Offset[{0., 12.999999999999996`}, {
             480.32000000000005`, -4.54}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"Bone\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineColor->GrayLevel[0],
           LineOpacity->1,
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           GraphicsColor->GrayLevel[0],
           Opacity->1,
           FontWeight->Bold,
           FontColor->GrayLevel[0],
           FontOpacity->1], Offset[{17., 6.5}, {480.32000000000005, -4.54}], 
          NCache[ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
           ImageScaled[{0.5, 0.5}]]]}]}}, 
     TagBox[{},
      Annotation[#, "GeoGridLines", "WolframGeoGraphics"]& ]}}, 
   TagBox[{},
    Annotation[#, "GeoScaleBar", "WolframGeoGraphics"]& ]},
  CoordinatesToolOptions:>{
   "DisplayFunction" -> (
     GeoGraphics`GeoGridPositionDisplay[#, "Equirectangular", "ITRF00"]& ), 
    "CopiedValueFunction" -> (
     GeoGraphics`GeoGridPositionCopiedValue[#, "Equirectangular", 
      "ITRF00"]& )},
  DefaultBaseStyle->"GeoGraphics",
  Method->{"VectorMapRemoveLabels" -> True, "OriginalInput" -> HoldForm[
      GeoGraphics[{
        GeoStyling[], {
         Directive[
          Opacity[1], 
          RGBColor[0.790588, 0.201176, 0.], 
          EdgeForm[
           Directive[
            Thickness[Tiny], 
            Opacity[0.4]]], 
          PointSize[Large], 
          FaceForm[{
            Opacity[0.5], 
            RGBColor[1., 0.607843, 0.]}]], {}, {}, 
         Directive[
          Opacity[1], 
          RGBColor[0.790588, 0.201176, 0.], 
          EdgeForm[
           Directive[
            Thickness[Tiny], 
            Opacity[0.4]]], 
          PointSize[Large], 
          FaceForm[{
            Opacity[0.5], 
            RGBColor[1., 0.607843, 0.]}]], {
          Inset[
           Graphics[{
             Directive[
              RGBColor[0.790588, 0.201176, 0.], 
              Opacity[1], 
              Thickness[Large]], 
             EdgeForm[], 
             Disk[{0, 0}]}], 
           GeoPosition[{-4.54, 120.32000000000001`}], Automatic, 
           Offset[6.272]], 
          Inset[
           Graphics[{
             Directive[
              RGBColor[0.790588, 0.201176, 0.], 
              Opacity[1], 
              Thickness[Large]], 
             EdgeForm[], 
             Disk[{0, 0}]}], 
           GeoPosition[{-21.82, 28.78}], Automatic, 
           Offset[6.272]], 
          Inset[
           Graphics[{
             Directive[
              RGBColor[0.790588, 0.201176, 0.], 
              Opacity[1], 
              Thickness[Large]], 
             EdgeForm[], 
             Disk[{0, 0}]}], 
           GeoPosition[{45.230000000000004`, 147.88}], Automatic, 
           Offset[6.272]], 
          Inset[
           Graphics[{
             Directive[
              RGBColor[0.790588, 0.201176, 0.], 
              Opacity[1], 
              Thickness[Large]], 
             EdgeForm[], 
             Disk[{0, 0}]}], 
           GeoPosition[{-15.97, -173.76}], Automatic, 
           Offset[6.272]], 
          Inset[
           Graphics[{
             Directive[
              RGBColor[0.790588, 0.201176, 0.], 
              Opacity[1], 
              Thickness[Large]], 
             EdgeForm[], 
             Disk[{0, 0}]}], 
           GeoPosition[{35.53, 106.68}], Automatic, 
           Offset[6.272]], 
          Inset[
           Graphics[{
             Directive[
              RGBColor[0.790588, 0.201176, 0.], 
              Opacity[1], 
              Thickness[Large]], 
             EdgeForm[], 
             Disk[{0, 0}]}], 
           GeoPosition[{70.48, -21.97}], Automatic, 
           Offset[6.272]], 
          Inset[
           Graphics[{
             Directive[
              RGBColor[0.790588, 0.201176, 0.], 
              Opacity[1], 
              Thickness[Large]], 
             EdgeForm[], 
             Disk[{0, 0}]}], 
           GeoPosition[{-44.027, -176.361}], Automatic, 
           Offset[6.272]], 
          Inset[
           Graphics[{
             Directive[
              RGBColor[0.790588, 0.201176, 0.], 
              Opacity[1], 
              Thickness[Large]], 
             EdgeForm[], 
             Disk[{0, 0}]}], 
           GeoPosition[{-54.2815, -36.508}], Automatic, 
           Offset[6.272]], 
          Inset[
           Graphics[{
             Directive[
              RGBColor[0.790588, 0.201176, 0.], 
              Opacity[1], 
              Thickness[Large]], 
             EdgeForm[], 
             Disk[{0, 0}]}], 
           GeoPosition[{36.32, 41.86}], Automatic, 
           Offset[6.272]], 
          Inset[
           Graphics[{
             Directive[
              RGBColor[0.790588, 0.201176, 0.], 
              Opacity[1], 
              Thickness[Large]], 
             EdgeForm[], 
             Disk[{0, 0}]}], 
           GeoPosition[{64.75, 177.48}], Automatic, 
           Offset[6.272]]}}, {{{}, {{
            GraphicsGroup[{{
               FaceForm[
                Directive[
                 Opacity[0]]], 
               EdgeForm[], 
               Polygon[{
                 Offset[{46., 15.000000000000005`}, 
                  GeoPosition[{64.75, 177.48}]], 
                 Offset[{46., 5.329070518200751*^-15}, 
                  GeoPosition[{64.75, 177.48}]], 
                 Offset[{0., -5.329070518200751*^-15}, 
                  GeoPosition[{64.75, 177.48}]], 
                 Offset[{0., 14.999999999999995`}, 
                  GeoPosition[{64.75, 177.48}]]}]}, {
               EdgeForm[], 
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.25]]}, {}, 
              Text[
               Style[
                Rotate["Anadyr", 0], {FontWeight -> Bold, 
                 GrayLevel[0], 
                 Opacity[1]}], 
               Offset[{23., 7.5}, 
                GeoPosition[{64.75, 177.48}]], {0, 0}]}], 
            GraphicsGroup[{{
               FaceForm[
                Directive[
                 Opacity[0]]], 
               EdgeForm[], 
               Polygon[{
                 Offset[{38., 15.000000000000004`}, 
                  GeoPosition[{36.32, 41.86}]], 
                 Offset[{38., 4.440892098500626*^-15}, 
                  GeoPosition[{36.32, 41.86}]], 
                 Offset[{0., -4.440892098500626*^-15}, 
                  GeoPosition[{36.32, 41.86}]], 
                 Offset[{0., 14.999999999999996`}, 
                  GeoPosition[{36.32, 41.86}]]}]}, {
               EdgeForm[], 
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.25]]}, {}, 
              Text[
               Style[
                Rotate["Sinjar", 0], {FontWeight -> Bold, 
                 GrayLevel[0], 
                 Opacity[1]}], 
               Offset[{19., 7.5}, 
                GeoPosition[{36.32, 41.86}]], {0, 0}]}], 
            GraphicsGroup[{{
               FaceForm[
                Directive[
                 Opacity[0]]], 
               EdgeForm[], 
               Polygon[{
                 Offset[{30., 15.000000000000007`}, 
                  GeoPosition[{-54.2815, -36.508}]], 
                 Offset[{30., 7.105427357601002*^-15}, 
                  GeoPosition[{-54.2815, -36.508}]], 
                 Offset[{-30., -7.105427357601002*^-15}, 
                  GeoPosition[{-54.2815, -36.508}]], 
                 Offset[{-30., 14.999999999999993`}, 
                  GeoPosition[{-54.2815, -36.508}]]}]}, {
               EdgeForm[], 
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.25]]}, {}, 
              Text[
               Style[
                Rotate["Grytviken", 0], {FontWeight -> Bold, 
                 GrayLevel[0], 
                 Opacity[1]}], 
               Offset[{0., 7.5}, 
                GeoPosition[{-54.2815, -36.508}]], {0, 0}]}], 
            GraphicsGroup[{{
               FaceForm[
                Directive[
                 Opacity[0]]], 
               EdgeForm[], 
               Polygon[{
                 Offset[{98., 15.00000000000001}, 
                  GeoPosition[{70.48, -21.97}]], 
                 Offset[{98., 1.0658141036401503`*^-14}, 
                  GeoPosition[{70.48, -21.97}]], 
                 Offset[{0., -1.0658141036401503`*^-14}, 
                  GeoPosition[{70.48, -21.97}]], 
                 Offset[{0., 14.99999999999999}, 
                  GeoPosition[{70.48, -21.97}]]}]}, {
               EdgeForm[], 
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.25]]}, {}, 
              Text[
               Style[
                Rotate["Illoqqortoormiut", 0], {FontWeight -> Bold, 
                 GrayLevel[0], 
                 Opacity[1]}], 
               Offset[{49., 7.5}, 
                GeoPosition[{70.48, -21.97}]], {0, 0}]}], 
            GraphicsGroup[{{
               FaceForm[
                Directive[
                 Opacity[0]]], 
               EdgeForm[], 
               Polygon[{
                 Offset[{58., 15.000000000000007`}, 
                  GeoPosition[{35.53, 106.68}]], 
                 Offset[{58., 6.217248937900877*^-15}, 
                  GeoPosition[{35.53, 106.68}]], 
                 Offset[{0., -6.217248937900877*^-15}, 
                  GeoPosition[{35.53, 106.68}]], 
                 Offset[{0., 14.999999999999993`}, 
                  GeoPosition[{35.53, 106.68}]]}]}, {
               EdgeForm[], 
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.25]]}, {}, 
              Text[
               Style[
                Rotate["Pingliang", 0], {FontWeight -> Bold, 
                 GrayLevel[0], 
                 Opacity[1]}], 
               Offset[{29., 7.5}, 
                GeoPosition[{35.53, 106.68}]], {0, 0}]}], 
            GraphicsGroup[{{
               FaceForm[
                Directive[
                 Opacity[0]]], 
               EdgeForm[], 
               Polygon[{
                 Offset[{45., 13.000000000000005`}, 
                  GeoPosition[{45.230000000000004`, 147.88}]], 
                 Offset[{45., 5.329070518200751*^-15}, 
                  GeoPosition[{45.230000000000004`, 147.88}]], 
                 Offset[{0., -5.329070518200751*^-15}, 
                  GeoPosition[{45.230000000000004`, 147.88}]], 
                 Offset[{0., 12.999999999999995`}, 
                  GeoPosition[{45.230000000000004`, 147.88}]]}]}, {
               EdgeForm[], 
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.25]]}, {}, 
              Text[
               Style[
                Rotate["Kurilsk", 0], {FontWeight -> Bold, 
                 GrayLevel[0], 
                 Opacity[1]}], 
               Offset[{22.5, 6.5}, 
                GeoPosition[{45.230000000000004`, 147.88}]], {0, 0}]}], 
            GraphicsGroup[{{
               FaceForm[
                Directive[
                 Opacity[0]]], 
               EdgeForm[], 
               Polygon[{
                 Offset[{65., 15.000000000000007`}, 
                  GeoPosition[{-21.82, 28.78}]], 
                 Offset[{65., 7.105427357601002*^-15}, 
                  GeoPosition[{-21.82, 28.78}]], 
                 Offset[{0., -7.105427357601002*^-15}, 
                  GeoPosition[{-21.82, 28.78}]], 
                 Offset[{0., 14.999999999999993`}, 
                  GeoPosition[{-21.82, 28.78}]]}]}, {
               EdgeForm[], 
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.25]]}, {}, 
              Text[
               Style[
                Rotate["Kobojango", 0], {FontWeight -> Bold, 
                 GrayLevel[0], 
                 Opacity[1]}], 
               Offset[{32.5, 7.5}, 
                GeoPosition[{-21.82, 28.78}]], {0, 0}]}], 
            GraphicsGroup[{{
               FaceForm[
                Directive[
                 Opacity[0]]], 
               EdgeForm[], 
               Polygon[{
                 Offset[{34., 13.000000000000004`}, 
                  GeoPosition[{-4.54, 120.32000000000001`}]], 
                 Offset[{34., 3.552713678800501*^-15}, 
                  GeoPosition[{-4.54, 120.32000000000001`}]], 
                 Offset[{0., -3.552713678800501*^-15}, 
                  GeoPosition[{-4.54, 120.32000000000001`}]], 
                 Offset[{0., 12.999999999999996`}, 
                  GeoPosition[{-4.54, 120.32000000000001`}]]}]}, {
               EdgeForm[], 
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.25]]}, {}, 
              Text[
               Style[
                Rotate["Bone", 0], {FontWeight -> Bold, 
                 GrayLevel[0], 
                 Opacity[1]}], 
               Offset[{17., 6.5}, 
                GeoPosition[{-4.54, 120.32000000000001`}]], {0, 
               0}]}]}}}, {}}}, {
       GeoBackground -> GeoStyling["GeoPlotMap"], 
        Method -> {"VectorMapRemoveLabels" -> True}}]], 
    "BasicGeoRange" -> {{-54.2815, 70.48}, {-36.50800000000002, 
     186.24000000000004`}}, "OriginalInput" -> HoldForm[
      GeoGraphics[{
        GeoStyling[], {
         Directive[
          Opacity[1], 
          RGBColor[0.790588, 0.201176, 0.], 
          EdgeForm[
           Directive[
            Thickness[Tiny], 
            Opacity[0.4]]], 
          PointSize[Large], 
          FaceForm[{
            Opacity[0.5], 
            RGBColor[1., 0.607843, 0.]}]], {}, {}, 
         Directive[
          Opacity[1], 
          RGBColor[0.790588, 0.201176, 0.], 
          EdgeForm[
           Directive[
            Thickness[Tiny], 
            Opacity[0.4]]], 
          PointSize[Large], 
          FaceForm[{
            Opacity[0.5], 
            RGBColor[1., 0.607843, 0.]}]], {
          Inset[
           Graphics[{
             Directive[
              RGBColor[0.790588, 0.201176, 0.], 
              Opacity[1], 
              Thickness[Large]], 
             EdgeForm[], 
             Disk[{0, 0}]}], 
           GeoPosition[{-4.54, 120.32000000000001`}], Automatic, 
           Offset[6.272]], 
          Inset[
           Graphics[{
             Directive[
              RGBColor[0.790588, 0.201176, 0.], 
              Opacity[1], 
              Thickness[Large]], 
             EdgeForm[], 
             Disk[{0, 0}]}], 
           GeoPosition[{-21.82, 28.78}], Automatic, 
           Offset[6.272]], 
          Inset[
           Graphics[{
             Directive[
              RGBColor[0.790588, 0.201176, 0.], 
              Opacity[1], 
              Thickness[Large]], 
             EdgeForm[], 
             Disk[{0, 0}]}], 
           GeoPosition[{45.230000000000004`, 147.88}], Automatic, 
           Offset[6.272]], 
          Inset[
           Graphics[{
             Directive[
              RGBColor[0.790588, 0.201176, 0.], 
              Opacity[1], 
              Thickness[Large]], 
             EdgeForm[], 
             Disk[{0, 0}]}], 
           GeoPosition[{-15.97, -173.76}], Automatic, 
           Offset[6.272]], 
          Inset[
           Graphics[{
             Directive[
              RGBColor[0.790588, 0.201176, 0.], 
              Opacity[1], 
              Thickness[Large]], 
             EdgeForm[], 
             Disk[{0, 0}]}], 
           GeoPosition[{35.53, 106.68}], Automatic, 
           Offset[6.272]], 
          Inset[
           Graphics[{
             Directive[
              RGBColor[0.790588, 0.201176, 0.], 
              Opacity[1], 
              Thickness[Large]], 
             EdgeForm[], 
             Disk[{0, 0}]}], 
           GeoPosition[{70.48, -21.97}], Automatic, 
           Offset[6.272]], 
          Inset[
           Graphics[{
             Directive[
              RGBColor[0.790588, 0.201176, 0.], 
              Opacity[1], 
              Thickness[Large]], 
             EdgeForm[], 
             Disk[{0, 0}]}], 
           GeoPosition[{-44.027, -176.361}], Automatic, 
           Offset[6.272]], 
          Inset[
           Graphics[{
             Directive[
              RGBColor[0.790588, 0.201176, 0.], 
              Opacity[1], 
              Thickness[Large]], 
             EdgeForm[], 
             Disk[{0, 0}]}], 
           GeoPosition[{-54.2815, -36.508}], Automatic, 
           Offset[6.272]], 
          Inset[
           Graphics[{
             Directive[
              RGBColor[0.790588, 0.201176, 0.], 
              Opacity[1], 
              Thickness[Large]], 
             EdgeForm[], 
             Disk[{0, 0}]}], 
           GeoPosition[{36.32, 41.86}], Automatic, 
           Offset[6.272]], 
          Inset[
           Graphics[{
             Directive[
              RGBColor[0.790588, 0.201176, 0.], 
              Opacity[1], 
              Thickness[Large]], 
             EdgeForm[], 
             Disk[{0, 0}]}], 
           GeoPosition[{64.75, 177.48}], Automatic, 
           Offset[6.272]]}}, {{{}, {{
            GraphicsGroup[{{
               FaceForm[
                Directive[
                 Opacity[0]]], 
               EdgeForm[], 
               Polygon[{
                 Offset[{46., 15.000000000000005`}, 
                  GeoPosition[{64.75, 177.48}]], 
                 Offset[{46., 5.329070518200751*^-15}, 
                  GeoPosition[{64.75, 177.48}]], 
                 Offset[{0., -5.329070518200751*^-15}, 
                  GeoPosition[{64.75, 177.48}]], 
                 Offset[{0., 14.999999999999995`}, 
                  GeoPosition[{64.75, 177.48}]]}]}, {
               EdgeForm[], 
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.25]]}, {}, 
              Text[
               Style[
                Rotate["Anadyr", 0], {FontWeight -> Bold, 
                 GrayLevel[0], 
                 Opacity[1]}], 
               Offset[{23., 7.5}, 
                GeoPosition[{64.75, 177.48}]], {0, 0}]}], 
            GraphicsGroup[{{
               FaceForm[
                Directive[
                 Opacity[0]]], 
               EdgeForm[], 
               Polygon[{
                 Offset[{38., 15.000000000000004`}, 
                  GeoPosition[{36.32, 41.86}]], 
                 Offset[{38., 4.440892098500626*^-15}, 
                  GeoPosition[{36.32, 41.86}]], 
                 Offset[{0., -4.440892098500626*^-15}, 
                  GeoPosition[{36.32, 41.86}]], 
                 Offset[{0., 14.999999999999996`}, 
                  GeoPosition[{36.32, 41.86}]]}]}, {
               EdgeForm[], 
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.25]]}, {}, 
              Text[
               Style[
                Rotate["Sinjar", 0], {FontWeight -> Bold, 
                 GrayLevel[0], 
                 Opacity[1]}], 
               Offset[{19., 7.5}, 
                GeoPosition[{36.32, 41.86}]], {0, 0}]}], 
            GraphicsGroup[{{
               FaceForm[
                Directive[
                 Opacity[0]]], 
               EdgeForm[], 
               Polygon[{
                 Offset[{30., 15.000000000000007`}, 
                  GeoPosition[{-54.2815, -36.508}]], 
                 Offset[{30., 7.105427357601002*^-15}, 
                  GeoPosition[{-54.2815, -36.508}]], 
                 Offset[{-30., -7.105427357601002*^-15}, 
                  GeoPosition[{-54.2815, -36.508}]], 
                 Offset[{-30., 14.999999999999993`}, 
                  GeoPosition[{-54.2815, -36.508}]]}]}, {
               EdgeForm[], 
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.25]]}, {}, 
              Text[
               Style[
                Rotate["Grytviken", 0], {FontWeight -> Bold, 
                 GrayLevel[0], 
                 Opacity[1]}], 
               Offset[{0., 7.5}, 
                GeoPosition[{-54.2815, -36.508}]], {0, 0}]}], 
            GraphicsGroup[{{
               FaceForm[
                Directive[
                 Opacity[0]]], 
               EdgeForm[], 
               Polygon[{
                 Offset[{98., 15.00000000000001}, 
                  GeoPosition[{70.48, -21.97}]], 
                 Offset[{98., 1.0658141036401503`*^-14}, 
                  GeoPosition[{70.48, -21.97}]], 
                 Offset[{0., -1.0658141036401503`*^-14}, 
                  GeoPosition[{70.48, -21.97}]], 
                 Offset[{0., 14.99999999999999}, 
                  GeoPosition[{70.48, -21.97}]]}]}, {
               EdgeForm[], 
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.25]]}, {}, 
              Text[
               Style[
                Rotate["Illoqqortoormiut", 0], {FontWeight -> Bold, 
                 GrayLevel[0], 
                 Opacity[1]}], 
               Offset[{49., 7.5}, 
                GeoPosition[{70.48, -21.97}]], {0, 0}]}], 
            GraphicsGroup[{{
               FaceForm[
                Directive[
                 Opacity[0]]], 
               EdgeForm[], 
               Polygon[{
                 Offset[{58., 15.000000000000007`}, 
                  GeoPosition[{35.53, 106.68}]], 
                 Offset[{58., 6.217248937900877*^-15}, 
                  GeoPosition[{35.53, 106.68}]], 
                 Offset[{0., -6.217248937900877*^-15}, 
                  GeoPosition[{35.53, 106.68}]], 
                 Offset[{0., 14.999999999999993`}, 
                  GeoPosition[{35.53, 106.68}]]}]}, {
               EdgeForm[], 
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.25]]}, {}, 
              Text[
               Style[
                Rotate["Pingliang", 0], {FontWeight -> Bold, 
                 GrayLevel[0], 
                 Opacity[1]}], 
               Offset[{29., 7.5}, 
                GeoPosition[{35.53, 106.68}]], {0, 0}]}], 
            GraphicsGroup[{{
               FaceForm[
                Directive[
                 Opacity[0]]], 
               EdgeForm[], 
               Polygon[{
                 Offset[{45., 13.000000000000005`}, 
                  GeoPosition[{45.230000000000004`, 147.88}]], 
                 Offset[{45., 5.329070518200751*^-15}, 
                  GeoPosition[{45.230000000000004`, 147.88}]], 
                 Offset[{0., -5.329070518200751*^-15}, 
                  GeoPosition[{45.230000000000004`, 147.88}]], 
                 Offset[{0., 12.999999999999995`}, 
                  GeoPosition[{45.230000000000004`, 147.88}]]}]}, {
               EdgeForm[], 
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.25]]}, {}, 
              Text[
               Style[
                Rotate["Kurilsk", 0], {FontWeight -> Bold, 
                 GrayLevel[0], 
                 Opacity[1]}], 
               Offset[{22.5, 6.5}, 
                GeoPosition[{45.230000000000004`, 147.88}]], {0, 0}]}], 
            GraphicsGroup[{{
               FaceForm[
                Directive[
                 Opacity[0]]], 
               EdgeForm[], 
               Polygon[{
                 Offset[{65., 15.000000000000007`}, 
                  GeoPosition[{-21.82, 28.78}]], 
                 Offset[{65., 7.105427357601002*^-15}, 
                  GeoPosition[{-21.82, 28.78}]], 
                 Offset[{0., -7.105427357601002*^-15}, 
                  GeoPosition[{-21.82, 28.78}]], 
                 Offset[{0., 14.999999999999993`}, 
                  GeoPosition[{-21.82, 28.78}]]}]}, {
               EdgeForm[], 
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.25]]}, {}, 
              Text[
               Style[
                Rotate["Kobojango", 0], {FontWeight -> Bold, 
                 GrayLevel[0], 
                 Opacity[1]}], 
               Offset[{32.5, 7.5}, 
                GeoPosition[{-21.82, 28.78}]], {0, 0}]}], 
            GraphicsGroup[{{
               FaceForm[
                Directive[
                 Opacity[0]]], 
               EdgeForm[], 
               Polygon[{
                 Offset[{34., 13.000000000000004`}, 
                  GeoPosition[{-4.54, 120.32000000000001`}]], 
                 Offset[{34., 3.552713678800501*^-15}, 
                  GeoPosition[{-4.54, 120.32000000000001`}]], 
                 Offset[{0., -3.552713678800501*^-15}, 
                  GeoPosition[{-4.54, 120.32000000000001`}]], 
                 Offset[{0., 12.999999999999996`}, 
                  GeoPosition[{-4.54, 120.32000000000001`}]]}]}, {
               EdgeForm[], 
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.25]]}, {}, 
              Text[
               Style[
                Rotate["Bone", 0], {FontWeight -> Bold, 
                 GrayLevel[0], 
                 Opacity[1]}], 
               Offset[{17., 6.5}, 
                GeoPosition[{-4.54, 120.32000000000001`}]], {0, 
               0}]}]}}}, {}}}, {
       GeoBackground -> GeoStyling["GeoPlotMap"], 
        Method -> {"VectorMapRemoveLabels" -> True}}]], 
    "BasicGeoRange" -> {{-90., 90}, {-105.13399999999999`, 254.866}}, 
    "GeoGraphicsOptions" -> {
     GeoBackground -> GeoStyling["StreetMapNoLabels"], GeoCenter -> 
      GeoPosition[{0., 74.86600000000001}], GeoGridLines -> None, 
      GeoGridLinesStyle -> GrayLevel[0.4, 0.3], 
      GeoGridRange -> {{-105.13399999999999`, 254.86600000000004`}, {-90., 
       90.}}, GeoGridRangePadding -> None, GeoModel -> "ITRF00", 
      GeoProjection -> "Equirectangular", 
      GeoRange -> {{-90., 90.}, {-105.13399999999999`, 254.866}}, 
      GeoRangePadding -> Full, GeoResolution -> Automatic, 
      GeoServer -> {Automatic}, GeoZoomLevel -> 1, 
      MetaInformation -> <|"GeoMetaInformation" -> <|"Attribution" -> Row[{
             Hyperlink["Wolfram Knowledgebase", "https://www.wolfram.com/"], 
             ", ", 
             Hyperlink[
             "\[Copyright] OpenStreetMap contributors", 
              "https://www.openstreetmap.org/copyright"]}], "GeoModel" -> 
          "ITRF00", 
          "LonLatBox" -> {{-105.13399999999999`, 254.866}, {-90., 90}}, 
          "PlotRange" -> {{-105.46875, 255.234375}, {-90., 90.}}, 
          "Projection" -> "Equirectangular", "Software" -> 
          "Created with the Wolfram Language: www.wolfram.com", 
          "TileSources" -> {"Wolfram", "OSM"}|>|>}},
  PlotRange->{{-105.13399999999999`, 254.86600000000004`}, {-90., 90.}},
  PlotRangeClipping->True,
  PlotRangePadding->None]], "Output",
 CellChangeTimes->{3.936867678071908*^9, 3.936867920670701*^9},
 CellLabel->"Out[54]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzkvXm43VV59705c+ZAmBQUnEEULda2VLS2DmCdWqsWx9YSbbVqhbbPo1Zb
8NXW1hb6tI+tbU0TMpIBwkwIYBEkJyfzHDJAIGefDGROTnIycF37XZ/7vr/r
t/bOAdvr/fP94+Tk7P0b1rrneX3wc3/2R5//yuf+7IvXfe7iq2/43Nf+6IvX
/enF7/2TG9JH7WfUam1vrtXOOP/iWkf6f6NWa/qncfzYgP1zBf/wwfPHB+yf
K/jn//cffNZ+tTdODg00TiRQ8Ve3/dtpnw2lz44ODjSOHR3gb3/AR+Mybjhy
ZKBx8PBAY//BgcbeAwONPennuf0DtY7G7v08eOfeemNH+qnvqdfaGv3p31GN
Z5+rN7btqje27qw3nhyoN9ZtrzfW99fT5wPc1Th4KL04vfBUesvHfJ3+awwf
2Vp41a59A42BvQONevpJD248s7ve2LLTH7Xm2XpjQz39vaOeFvHM7oHaSP5v
r9tY91euStcs35Z+P1NvbE7f7TlQd3LJ4OnO72N729Oyn07L7n/Ot9gGAGo9
dg3LDRjZ34Jnel4bXyRwAsbBQd+dLd8ekTbRlgA0kMCyI+2nvof3DCTwDNg+
lj5dbyzeWm88sbneeHxTvfFY+vnpk+zpv/zfjfXGIxvqjYfX96e/HlxXr41t
3L+23rhndb1x58p6Y97y/sasJf2N25b22+ePPllv9G71PQd8DB2HDg98xCH9
2/brTNsF0GDJ7B5Is6KfbfY3LlhXbzyQnnjfmv7Gnav8Dbf29jcmL/Lf6e+0
orSGRAqz0nfTFvvnUxb1t3FRQgh/zl3WnzbVb0gBgbxm5756Y99Bp60TgZA3
2LIm2HKeTsABKPek17LB+9Y4YLaC4HpFBOv6HbH8vXnAv2PTfL52O/S4+lmA
uOQpB+5PNvJZ2lxbY2GCZGfjofV1g9q9CZrzV9QbM/r6ay+xxZ/ZmLrYIXvP
6v7Gmu1G4EYhO/c5Ee9Km+D3DqPOgdicb+xYEPd7HOQfsl8jbK/s70CikJ3p
tqd3DrBOA/m9aY8JhLXz7fWjWUrjroTg+9f0295XP+tEwyt5RUKowQ+qOxU8
/9pgdogskYo9z3HR3piScMEzQdsv2mdnGX7uWNHfuD39zF7qcF64HrT322+I
7PblBhYjAYh0a1rz3nh/bPM3fJfX2K9RjVPBGnzLCrmSHUP2a7cPQNhGFYlQ
aq+wlfQ4pSRMP7S+v7FoS72x8hmXHkePVrt7jT2/yz6/e5UTHD9TnejaY6Oi
Uf66KggRXM6Lx/clYtg0kJaUlnX4iCOEpSZe6GDdbaZI2iUt7aVv9R2mT+EY
ZEH6SaDlX5etuvJt9u9olw9DA/n6o4F2RCCofHSTo3xmorCEmktsoV2GJRjt
sc114wIWx6N46qtj/0hgxNrDMGki3jsS4aYNvtce0W3Igm8Xpr3CRLztqYS0
JNXSigf28AhJIH4gloBBe2yIrZugSwrhdfbWDsMqmznil7ZxwRlceYYr3vRm
ZBXketequpEu7Lt1h8EhYcJ1DtwCm4IFyG3WUlgybbsNHL7R9tDJfw0UECB3
IIcNBq8KGADaQ0ccDlAwdJBueB/325O6+TMRI9QAjG8PMXL3Kpdsy552AO8/
lLFfcwD32MNhs8c314Ny6gZBREwSKGcgT2zDU0Pk8RusAfYtseELgxelLPjr
ZYXiRdEgekJk1t4SnADfIhukTUws1wdMscH3POKigAI4gbj4HBEF4BP6PyKW
DyimVyQY8+94AxQUIp0xJzHi/JX9SQL226vBIUT1kw1OYPxG/KBvE+GNtjeP
tLfuCeGHQDySmOnZ3QOQV+NQSLcN9UQlSQenha54xoWcUDXZV9bGUs5oTOcf
ZBUwNY6ORSKDIF/IFePkPHv7WOMAZDxIfCxJk4Xr+k1NsXjgitQBNkgeEHn4
sN3fXdhC4tex8RkaEL2Z4BLicSTrMroBPvNXuAQBZhKVLEHMeVEAhteCOgyA
Z3e7IIOOoHfgi5ZJW/y4CL23oqDpvvO0GGBxpr0emcitmEKIDnaMir8blLHj
Jx1FDyYILEhS+76ERtgO+ZiWntCeFp0QAOCRuWzhjthK2ka77bfdgD3F5WZa
VPr3DCOXWogTVsgd6/pdZEq9OUBfaUCAVvmOHwSd1CO0+dx+N+b4GzW6KdHy
isS50suoX1YHcHmf+AqI3JV28uhGvw5gQnGyQ/n/5h1O+8mQaoMA0m6wfVgC
ixsX4guRxjKgwvToX7Wtjsg7M+si6RUuwTqBYoZKk/iCUOGymo7ENiExI8ft
Tt1Inc/aw8dlYY7MgYb4P0gVX/J/kbuJgd78Xe1sx8K0PrAwQlKicVtiWyAB
le/eXzdIYG8m8k24TotK6NvvfxvkEXGYk22YOum7hRh1a1xSQY6J1dN36a9E
I4gAljm7wER6Z1exm+nBmJAX0gH7acFal+QIn4fSZ71bHFlwE4yLcXxmcBkE
APmyw7fZc8fatoDEnSt9WWgQngtZL9psEtet2N2uq0CRuO6CeC4YALPJDq3d
VNBvW+hEwAfXYsthA2DfQlRuECbki3TSB0aNU7MlNqo0bE1w8ffMMAxhbXgS
ii43CpkgsZNlVfuNECdT4l5ELlQN0EzUbnSXBXI6FRs7t5Dw4BeuwVIEeAk3
37FH1t4Q20OYgzmkAJSM2kc4JZ7MK8LRW5JWmqylZKlVYIFo2QVM4z5aPZyf
BNR0H6sK8wCHaGggjCDptK/wbxsb/sdgOLlL+4IGoUUQBPLRC8lZM9iAMGgQ
+2XuMrdWmzbWY7QGWT6xpd/oisuhu007zCZoj73BjNik7HdEIeTRnUmH1D5g
j+swDPBIdEWCpGE+XQq4EEc4C20ALgENYIMUXA6se1MpsTE2tDtEGhTe/5xT
OsyGzB/YY2IqPSvRaxurqF1sWnJvQEFug7kKg451FJKsZjmbMhr3hq+UfYd9
7qzyMqQW7AFr1P3FxiJAXFIsPX90gIVXhJiuvSGjrktG3vHKYk1XfkdUGBvn
HUgesJdkbhsoTF9jsEN2qF+wg9U2d3n9bxyXbwz5gSp7ZEO/8TeIQOrBapDE
KdfGtsENScmg8tgUAEpAqHUXiMZjTrxcu9aee649a2afsyMeP34YmGNVsBay
BNmEWuT3nGV10+asw2TXamd5kz3YzetMfrWZcOg2ksPvMd7Y7TQFoiGTNrzN
JCcgFpb8s+AjRBZExb2ISl6HxJje51u+L16N9k7S2YgP4xJQHDxc4fqoW/9t
oXtOhm3BJdAeqIYEVj/j9ln6PJmRbsMCURQBS8VlGwjJGW7b1ws35XiEgA5F
lIfL2CVAREYhr6a6errFUXpuNrNfEjISZGLaAHCWxjPWJV8PqYQJdf8ah06S
LhmZIBemxiP9tD8xCaSzg1dlU2N8J/l2dmDbvZt+Mx0AMw5lMjRtfwdC8fH/
jXWnImiRRYCGcH+NguRCs/FE6ZfamsYbJ8J5PAq5K/8VUAIPiAwZjrwCu0uf
qpsFEhbRlyT+K8+v5uGhcW4gHR7IwvNEGO88mhXjixG8WLbN9SePJ8KDrvzn
JrgnKF0YUEr2gSm2qQq8oPbazVnfOGDWaa0r1sS7WS68c0u4mwrQ4CuCIlR/
+qwrVDM7BYBPbHF9smNPBRUAF2IiG9Th65xd2Ep8lb+OXUfcLJxNoNNjMgmv
HAsCIgK/sAa+WsJZRygEs4HSfgHU/kMVp4Stdl2BxqEIP7gl7lywKaKDyAnk
w/b0+e6IyoHGB5OsSEz67w7uXw4ozVjiYLhrpUsNxF/ahwCLwIGjQdTkgJxp
1pUuUNCumIdcx2IUdNtzMHvZCiuOCIk8RCRMIUb9DIX3jWTnXp4DbRrxpI0g
MMESVjIkjlTBP4YkxoRpPy0UKqIaqZXYwHVl2Cxyi36hsGNORSTANMWo1i/S
X2dnPYLgGaqCo9AK8hAD2Kh0cf/5ITp6+3/QDGRojVUraIvgStCSZho84htc
aBiqC86Fi+seQ59bNBA0CgeCRrLiO4E2aCatszsoFCJGXBGs5qXiOUyS2R7T
TNtOy27jv23hnk2tXujxpnEFdWo1SApMYB6L7kjecrfDKUFHwYGjkK87q8lA
9Ig0a4Imd4ZrjbFwwAPmYdx0WFhs136POabfE2I75u/uc88cqgDDMNKsSkKE
VduRnQ2EYlKfgY1fCcsQhTpvmctulKb8Iyilo4gIIfegtyShp8vM7S0cuHBh
YVksA3gwLKkOBeCHXKHBmqhetE34gDWJM1nevOBlEZ7V42eEBMSrAd5Ihl17
B7IZwP4RbfJ80bs/S7vp24r+fnwzsEC/cx3gPi6zsqtxMiwhibYItXZEnJO9
w4vQFm8CDo9GbHNeGDvYusdMzPkj4dnnDjjMItQPjDtMCV5qG0GNAghuZ8GI
lic2u2EPM8Hqm3a4jsCwwPjHd8IKkHWg4Lqp9xDS7ADxgdUAvT+90zVo79Z+
k7iIKlANyucsqyId/JbxUhFQu4df+4ywHEVBQldmJZXsC6huzlKHOnvFnA5d
abDAdMZ/QkKkO2Zl6ZB4e3I4hsDSHTffNJYV2OoNsxPVDswtBrio/3XyV8PG
ZO3sR2EP/g/MpkacWNfJOphrYRMyAefadWggeBCeq4dZBCv0h0gh+QUPY3wj
vPiMpARK855wqecVME1baosYPysm9s7OsI6Qf0ADSN25svLCA/SdRdBIwW9b
fa9WPDpMpv7MRi0ZG3M8eTSrSvqsDeglWiaWdN8a/1qAEuMK+VM9xpp8mYyk
Ztb8eyeAq2J3JYcCCHkpyGAB6O7VeZlzJUR7K3woSsnvCEf8chHcjM2Fmz/e
3oZaB0VQCjtx4888cVuFbHIAdHck0SwIv6h/RMBXVCMOALIXZZN3oe/yHYUG
wkAQ3tC6i5K7CmutC/lLKAPI8m4MiXTPnsIl5R2B7p7YXcDa/nrOX/hrscmp
i30jhILg/zuWOwEBTjYPe2D5Qkw/3YRoxoKqZ2rhMdv9kb9e7EEEVbCBveaR
Da4W7zUZ6iJCqcAXeNTUFgyKgGYGFqdFZo3HRf6jfNS7lQuJR00PCe9Kua48
T46Wpb/s9mf99g8GZKe7bGrc6teMbAmKQ75229rytnZbkHTlqMIXAcfTCxCu
8dvs//bPFS/wwTcLeSlOse/vbf5e8uiFvi85rfz+i/H9nFvnNO7+6xsb8370
4zD3hrnnvlLNd1Qg9ijkZVrKI+sbj3zu6saSt5Dy8n/TY/OjRvycxyuADo3M
WlpFvDCeH1jjXqXkm9lVWWy3NxZ+6WO80d7aEe+eNWdB83se9fdcEZJGdgzv
wKeGDbC5VIOAPCAFAS0ndjFjrmX5ryq2rtd3xutZ0nCvf7NovtcjEGhuWIVX
ESrHpMERRuGhITDLEHworbTUNmgNA3KYZYDM1mU89uHLmpdxaQtJ89f/9aW9
yX6NcQwscQGBm7zm2X7LUKFtsEzljxCyenSj8Vrt9S8CCqhCa5jewoh5XR4U
qF0ea4B7sMOxwhZv8QzZxgFPSiIxcc5w/1CySMopojDbWbyg2fxrb/zXtVee
RiYArXVxSicMvzhPsyNFIRv8TxQUwY+jnhM07wAzGnWSLKORoSJcqLqUxM+D
oMa5ivjhwvVjCgiCtZKPHvjT65qx+La4uMxb/z++yDcGBIEuYn5hxKIwPbBV
VYzyfDja2P8sFCw6j3ZH1sDzZKsiULR5wOOiY0MM3HTrgkZUVDWu+s2P2bLW
l0voMikBe0E4sBMOrGXM3ZF5br/noKYY30/OwQVob+7SKveUwD02QJjg1PjE
n9zYuOQXrrQXp/87QN5XCESEOH99v1yNB7yxVwloUxmkshtihe3hnhyJ9DAG
QELPKMdOrk7pbPzv/zuncd23brZF8DstqCblAkT4/ge393pCLD5joSNHj43P
OmwTujb9bveXpL/SFXw+ueJte7591zbMS1o/S79rWmj6vvGV7/84L7T6rt2+
a76++bOC5tuzaTUMRImKLgrmxENQAP/I4QqikBjGGxbuA2v7xxRLfvlrLrN6
vA77t8uQCmzYd3zH8gU2iEwEl3bUHhtlkwm6+asr3nF1bKqZRtM1QhT7VDGg
XzqqfKEtgN9xm72Czz583fWGSF9wp/3N58CXa89+yYUZnnzHZ2lTtRtjqRA3
JqUSRjP66iF7m/XK3zSDGYsUSxEnDnmHiFGQuzN4CWLGekwyMyyQbkOpIMNv
lsRS3/u716Vl+ha4pgXetY6C2UrIJgTUBPUEZfuM+3gm1CvS09YLZGWwnA76
sU2gHw7s/C4/Y13GEXmxJQZeDAFTF1cCCXseXWrEflEJ8Q5DEteg/SwdQ5K0
3eKQCna1R1kGohSFCPBxWJNVFGK0Iy+BhSdS9JX1NFHlMPDvGGYDbcEiupwf
ycCEzvaQnkAmgSDL5Lj9hYHfnl+cfqfPoO6uDHh+CkQbr/3PAC5jDoBOiwDN
6QDvjJyd+yCoduCtpByWEIE9nE4ZkdpkxewjjHS02hcAbZBvdxOg2K2AxTXa
TwHfuK8jkyLPTM9wtLTnVzkXZOh25nfrJ8Eoq4tirVmisKYSvOBjOPgaDC8o
RIck9F+XcO0xG53YDAYAJQpQ8MljOZreGUJaUSmEdCLiVijD+IJyCeHhoIwM
FJRLaJWMXMrJ06FcvUPytcDOcGDuyi/XjTBcoTPTswtOQqV2lp8J4lkoSgkX
LFT7rUIdKoRw9jCy+87CkDHjZUl2WbiuyUgbYU4OYXWcfosJDXpyVzG5U0OF
pBny0Be1CIqrCVMFAGo9LRpNPxLVgrig6yYGOz/TsAkQS7XB9UCiVCfCeima
h8FMR5NsN4w4wyCJmt7dZgQwOr9AIqhghIwu/T9tQFiZujjXiNUmFFhRodz8
gLfqRlACj2/yIgaCLbg6kcdKUPClY4jjG/OTvISvOOYuD84mIYLMx1Ukikci
w0odSsVAGBVHABFI7GBkPFrEx08ito5YnYwfyV34D8CJDl1xwz3dTZqAx3Et
v0ttAaD4XJjn/+m5Ek68jq/4GHi7OZgleudpNpFjl/d3ZATBK/ZMXtmTX6Wl
cZmWkB4j/BemXu26grPkEt4lHCzGZu9vbN9jWdo2qYTEHsuftqh5bXzcDpp6
rxprHlPbMN7vl5rxx5swAYh44fYfz0mKbrNZj0UEHEML4wtXalqvOG7EacYR
sJdjAO7AQ3csrcBr/qyUe6OK64BnaZeX2mvEizyv/Kyw3z1cgztDDcbJoVz+
AghJPKCRx8Yz8IUFwo5hnPcvNoPw1nDvCE0QvaSbo7ugfqvwixTttL5KWJ1u
+7sy1GvGxXWQPbSD0hSIXsyEyc7gmwuKQgYntVaT00kshUVPXtSfI14RtmoK
Wky/N/NX7Y9OJ51ZUeb58Hprk8jGCvsmfJNco1izqxORhvjs4ng1bMw+KxXr
ip7PYDfbzy+ERGc/BDXR5tQOHY9qc2j1qZ2kA5ymwakAVsY8OoeJeQyzN0Ib
3j7iVV0jCx9j5TYvv7Z1vTd0HZKXCDI1T49t8kxo+uxlxTNnBLwguXRZLoMn
88ithMu15DKa9yLoeFMQONgkicebNw3URwYFAhwCMyoOmCbT813BN8gWyl+J
AUCqe4PTESoXy37q81QmEuJwNJ7gguH1pvsVHybW2BpYGoZxtGJpfazdFc/k
FaP0yUQq6zC1dcXYESTrwwcxYiOkc9+aeu2VsWKsaIJkx8PKwy8nKzjZjUTx
4L3fuj6vuJSWKL1CWmrFYJingOH0dKWdKQ8hhTB3uXpAPMKV4+TvjFW5HK8b
jPfs954Xqm6IDKQbffEj7TUAhkUTl0K5AmqImuwnxRRJ6nyjeXGwBfQavSNa
HH/S5APErPDtOSrNPDPz4WEst33FWknyoN0h14WRaLMFrKq/KtY6K6pqUSBs
jTVCTpAJ1QN47WmtX/e1SiSBHsKDbncrtS/pQU0y0UGu/dAwS9wrtdjbn8uv
0488CsuNhGX4qtBTgHR65PREd0eiQQT6wwVuWSOXEY7Oa0yfHY/QptdreF4a
kcOOLTm6tHoNj/nVYvUzPW2TnSKVL0+2uhznzNcG8IEqjIyzogglhjHvSc//
380rRRjCss4/VQ1nxDdrKtmg4G1DlPCwadBKPuH2aITL9OpJiNG5A8RTSJ7m
VDUYnyEaF0ThQbr2dQFsaB9pFoXk2ZSnrmChm+21/1USrwOItAY9iecUdee4
Y6QFeSSXequHF/iTmuzbWo9cQT3HnFHCkg+AgZgrq1Y+LXyQ2qsLObQ+rree
xEELhapXiov+vBngiCXC/qzzXNWjDPpKs+XxC3ExQERfHD5SYQfMRBil1hZ4
A0roTBgURpuxpB5L7DGjHK4AJFjSt69wrEEjyar5X83LI8RAUJ6Kk3OL8lTC
ug9438y7tLiCrXbHZ7StId1PWalGVbACLDcZS9fFVqAN04K1ESHn/yrHj7pH
YVrggI5gGZ4rTIM5iIM6F7GOEmqW6F9uNJZNA+hOXQpjAqRq3OOKVwaLsRzp
xNtdEEVOMC8HQoIPquV0mcgEyhALGYpZRc720lBCFqpZ4/1+94QBDfZot1Jj
DF1WuFVA4RWxJLAGmaCcwCJL+otySS7Iuazf/amz1B4TGISceSuYhNSXBCcj
MdOtX4uNwTGIWbpU/inISCWAfbkC1EnNbl3Uf14hfUjIsT6qDLyf1FVVIoRx
hYgBa8kHDEvBQ4vw8aNPesoF5f0t395rh5Hk0sNAk0Xh6Gu/J6O6ibA65ioF
JPRtqIR8nXVt9X81bFgQhI4CPFiFUOqaqFW0JPxqL2Z6KBT07GS+/W3IuWmh
l6kN4pXqa0RPb93pMKLYYbbXv7Sj6WvNybWxQRc4xHACWMFkomyUhCa8qH4C
XoG8BvcXBdIlam/zWr9vDw+zMtjBHcinoWOCWXsu3qxkTYcxCnoMczSt+I/t
9rNy9QRUJgv6VBTSH4i2CZLAiCPsFGyHDf2e+lSpVlrC9wrTCPAjsNNjmuLC
AUVUT5KzaZl4Iu1mXShgN0aCLlTZgWgEpzILDEbxoSCI7KR2jGDoFAfVJcOQ
l0pCYPLd3vsSTF51pisJyP/xrzFm0ir+OG5FilHmDl+Pik1BmfsOWh2/kRKm
1HcL5kWhQIbpOslPCBiRHF18o4qFQVzeNRLlmoMegcTyy+zfbgYV/EpTmpdw
Rt+ji0jKA1njOQVzhoGTn4wTTwMpmeL05i+VW1xjUdGQpp6vIgKNQZnI8rvF
eiEAntod4lcF288X2VTehEolR61Gp7tXZUMhQpyjLCzoNWoupEkfP18018t3
xkuaUGgy9a8m8vnPZlgQ6sVuZoUXqOTTIDpgb0mb+WILA9G/KpnGrV75o0xy
bPrpctNOgIC3Mg7PNePwWGRTSTPDdEQpsZqwGHgXkba1/e4jgmArUA6AYVEY
84YECmBm3j7ujdeJbWqtm04rPOQtUE6kbZHOLds1R8diKX5F1uIRJsr5QxHu
IidcODW9any8dX90GmCd3lRcispA36VXTih4/cTQcFFbV15QMPYZC9h/SA1N
JvStCTbBQntF+KKg0JyThtnr4WKv6TNIjcuT1Ajl62TCm+DnRIJ/WGgaEMxF
ehuLwjdGut5YXPdYXNdWYEDQvKBwr9gE5ch8x6CKQ4ea5T3UDFhvPX03U6N0
GwIv68NPRH240DAU2R/u+kJhSSGVy62A8KeS1L5tSbUVVAomf7kVGCiYNvpe
2nOVK6geZploMVjlorgcWwTjChxNLK5DC6CTzi6uW+fWVO2v4jqUh4xA2b8n
op4fMtkfed3zC3F08JB3bqXrzi2gghEGYH/cvGKYm9kZVBBfVBixkA5OQ5IT
f1AsGi+G/v5ziktVNz9zSf3bhaTF+Bw62uxpWZHwULVeqIKmFJowTx3P6wXi
FJMA4ab1ut4AoQdd0U0ocBK107mCnbUR75jjgyA+F2vDuIlwWHZKTGYcMsO4
9u2CbFBHXHGxxFmEeBNLRqe4dz0iugrg/mIBMZstMNQslo8OZve4p1gBMCcj
r5Wi5LGBWen5hfsEC3PFXxSK6eH1FktI9nNl4URXR/ZtTsbQgVlei/rDYSwB
zy3U3hpf4R4e8/J034DlLMroJQKMwvIKuv3mP3PF+QWEtuwcaFozzIbBQjRU
DC2hWOkkv1cMOLbAAkqXouR/+fmbwCw/4mKnCeESUZ0FZmCqeW7l/37cjm6G
z5p2dNRtbSTh+IIy8YAiMfSFwmCFjZ9w86Vpr0eLvdpMkHEFA1DHXkhC7Qab
EkIpdzNUNMuqm4VHsPMwJX4vbkcSHR0sd9MVgT+3QrDLo/Z2dJjqmNsUXmFI
qAEBL+HWLNA8xMSbMNLS6q4sWBAKYSHp8pat0E8h91RbiaKvIh7TadvF2MVP
UCrz04X+YVHQ+UtjP6ciloJJjtIgnzFVxmS3hVbqe+s56QBtPLXL8F77vATv
cs/X8cBfKcxZxM6a7RawHw45OFAHW3ZURpgUC+Mzgo1oU6KUFFqnx30yHkOM
WmL/TCFp78ZG/w9vaKy99rLG8l8b29h8/TWNvQsnydACOcgLHqA4M26duFcK
zWKwm11+SBsh6bDDnz/erFyFh0sL+QEnAO8k7Cc37x2S2B97f1Uh37Ea8O7m
r+hvi1kQM5dUWfGPFbfjR1V7brc9Kuys4sbdd9ySOVfhxrD3m1xlnr+x3wlD
WSw2tC2sA20eoAG8cvMwhFg+OqoSJUsJQI7YufjshjEr+Xt3MzSQsQoOvaaw
gfjMa4bxMQbUldIEBjp6ni+MmoTm0/IFkAAkUYIBiQStl2Dg+RjR5XVsQA7l
dcV64VLk0dkFGKAXZPTLCyEJHaBBH1hTP7cwdRXQSr+jJO2X4uGUoomYzisf
7q2VAffushXQp2kcYJST98h9NJ6FhBGZCUBPffvjp6WADvTOy3Qi/MMQc1vo
BBbEQC8BhBCyUtNeAcgddyI29M4mATqh2AYWQZKfGUb8vXzbQOPOBPtpff3n
FDACPY97lOStmXR+uxlaGIGDg6crHM3PK2fMnGrhBNQKJjR89jstJFWa2s/8
7cTTIAaZCWJtxTvwbaF1iRW0GfYenJUD/sfcGee6nkLzzVnqjcxpl95M35lr
dpmoQ4FKFctqHiH4MiF3p0ff4ZJzQoTDtD+NbApaQfMyuKZsHlNBxznDWAm/
0wz1GK9RQd14vsf/59nH0mjIifGj+EQeq/9tvaXXW+WSYZxJ9FRMk9o+95Yk
zCsePrZtcdPzIHl4tpTj7AIkYHV2lM9LvElMxQFetVpHrxEFo3z2uwE0teDc
FWFYBQuTGVK7PB4LZ1l59+IC2MvcxYPzlAKJVttaWfaraow/bgYsUk6AfaWD
sxiUhDNPBplrVZ7D/glTnxLBal4auq9VH0DJrUgBl9IHCiEBFDQ6qCy5BT5n
J90FlIrWKKPeWUud/LqL3YqMPhTSRN1vKFM2AMKQNxRSoAJxsC6VQD9YV6jR
G+4jW4t0MG/FpWjOwLQN897vNEMZp1ci9rJCNhFfxT5XCpOtAQZKJs8uTItC
hBpd7ph6U1derRtwdPWPKhgJGkJ6lyTJjnFgBU0KFqh1oUiB/2se0ZQSmqdF
Ir1wngII3Usp6XsKMge7nkL1EHKCcNUiPj4MNiwxpAcGK2kN0Hxu4TPJBFH1
vTKSJdlIqfHXuGLBzfozq30ux+eEdN9YUOMdK5rTtMS7IixUaURX54Xp22Gw
J0yO5knLKPMAGD3HswjuyKXF4b50xdaAeksFZq5ELGr+aqq14rOoFqu9tzAO
cNbAthTfUHQcVYkcNxDBBhonYVlVK+GCvCBch+v16iiu02ceiMje9YxISWGe
SH4RGL0/lEXZbgcXwvnnFKwh3anYMzoXoMKFaSkKipPhIQtVuYqupzT9sqcF
mNQfnR3kr/pzdgBQdQ31O9fEfeCLUSI8eVxwZDH9qAS0Xl/6e9l7DVcroh3K
l6iaJvLWAj8Bi2gMr7UPA36VylLgMf+Wm63Ygx9ai6bf2/vKgotUSOmp0miY
i7In0vNPerID6+PygnYsddtXYQmZKdfpnOK6qKPJoP/qlyc2fu0dVzb+8ls3
hJUyqrF318bGZz/z8cZVV13Z+I2rr27c+mBvY8qj6xu/PfF6A7kqG70ikved
aY7ue993tT3r9jmT7Lnjx43NfwN6nGWoB2lUPofys6qjZnyuuOT3ZK9TNcnF
9VHKaN9RxVeWqvJ3uk7iXa1KUJDGilENhgDklTyy6HjISOJ1XNOy1XcGJkAQ
yQUlCk8OVdlg1S1WkYNO+xv1S7QYWdYaxCP0grlzcUE3s5d6MGR0kB02BMGj
4EW7SCxd1s+1D1NjdpHEcRh1BXG9OewitUNi+1na62Ax4WooD8B5Q6waYwzD
iJs/EE9nZYqjnFPIr+cOeFYtd545SRhnf9Dmzxq58X8+g2Tmzp5kwvxTfzDR
Phs1ZmxrkevkKAC44GUX5tvedPlljYsuepkE79ZNiw3kv/+nN4YwPteoQWX1
YFZlvK0EV7aOqLxX5aatLUppORoOoMJilVOWfQ5lTXf8VpV2WTdv/SJVla5w
+HbJj8We10EuY3YccvprigkPlWK42/5mjDZe8v0+sdj6Rp/bX89kSHSHiBDy
V+QimoA0xwT3zFjiw7g0gXjWksonyGVQP/rxad41Za3ayssLMtdIlnD2L49d
avAxWprBH88+VwzV6sgTOVDmiZlElWXhjKjyrlWtAaQzI2zrGXe5IJpz9I63
V6TZSpaSYsv7FmbtfuMPbjYzx6UXn43NBdjnX+CYf/8HrskzSRJ92mdIV9za
8156oZScU8PZmWBa2y9Em6IWiE1E9nNpc+xptFm2eokNSkKc7NXlrS0DucWg
1l4WwWcCtflTCej46oyFi9Ex8iQs++1DkaKwdaTBHa1EDPFBLzTLA8wgQMr5
TlWl0yZU9g8UtOrjNWy+o89QNXN4TPGdzXSy8c1utQ4nOuW2l53r1uNjMYWr
nULVoqZ0O6G/ZCvLaGBdBL927LNwqCiTwT6wHve+OT/ypbEIPCJogdDWSwMm
ecZ9ot23XeU0idhsoUfniAmNRxbOywbp+vWLzYOGv4peDduTaOtLX7/RzGgi
11/58sT8+I1PbQjsjh62DU3EM4y89NtG2EfS1S9AklkZt9KkXuNdFI6+sgVl
ctkpFI27TopF00PtnYWp+6xHymrqh1U9WQzxKuvlIUuyqISTcLnkxZAxUvhI
YRwk0FORgRENauSYpuAhE+UdDVcGXk5nmFhSl1eSts6Cs3KEKAGVJ4RIJ8PP
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
rp7yx7Pf7T/3/H9+gZvjP/fY0tZqM/4PNOqoog==\
\>", "ImageResolution" -> \
96.],ExpressionUUID->"4f10633d-94b9-4bc0-8e1b-ac8280f5b64b"]
}, Open  ]],

Cell["\<\
Q13. Plot the nearest cities for the 10 entries with largest altitudes in the \
Fireballs & Bolides dataset, labeling each city. \
\>", "CodeText",
 CellChangeTimes->{{3.933044981954609*^9, 3.9330449829879637`*^9}, {
   3.9330450176513767`*^9, 3.9330450320914183`*^9}, 3.933045639637404*^9, 
   3.9348735218505*^9, 3.934988504825323*^9, {3.9351667086353073`*^9, 
   3.935166715653953*^9}, {3.935566882426754*^9, 3.935566883715104*^9}, 
   3.935569314445806*^9, 3.9356747960130653`*^9, 3.935677720113924*^9, {
   3.935677758458049*^9, 3.935677760068716*^9}, 3.93576933496391*^9, 
   3.9357694822038927`*^9, 3.9357703086358137`*^9, 3.936259494484939*^9, {
   3.936861845707225*^9, 3.936861847257862*^9}, 3.93686463177466*^9, {
   3.936864668693864*^9, 3.936864688472411*^9}, 3.9368676266584044`*^9, {
   3.93686770157365*^9, 3.936867701764153*^9}, 
   3.936867931873438*^9},ExpressionUUID->"248e4ff3-2d0b-4b90-ba86-\
83c46ebef902"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GeoListPlot", "[", 
  RowBox[{
   RowBox[{"fireballs", "[", 
    RowBox[{
     RowBox[{"TakeLargestBy", "[", 
      RowBox[{
       RowBox[{"#Altitude", "&"}], ",", "10"}], "]"}], ",", 
     "\"\<NearestCity\>\""}], "]"}], ",", 
   RowBox[{"GeoLabels", "->", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.936867659772084*^9, 3.936867677477187*^9}, {
  3.936867935939323*^9, 3.936867941809471*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"d55274c8-d717-4066-a37f-6b9a05b0319a"],

Cell[BoxData[
 GraphicsBox[{{
    TagBox[
     {Texture[
       GraphicsBox[
        TagBox[
         RasterBox[CompressedData["
1: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
cDgcDofD4XA4HA6Hw+FwOBwOxzHg/wPMZ7Iq
          "], {{0, 256.}, {513., 0}}, {0, 255}, ColorFunction -> RGBColor], 
         BoxForm`ImageTag[
         "Byte", ColorSpace -> "RGB", Interleaving -> False, 
          MetaInformation -> <|
           "Exif" -> <|
             "Software" -> 
              "Created with the Wolfram Language: www.wolfram.com"|>, 
            "GeoMetaInformation" -> <|
             "GeoModel" -> "ITRF00", 
              "LonLatBox" -> {{-188.3705, 171.6295}, {-90., 90}}, 
              "PlotRange" -> {{-188.4375, 172.265625}, {-90., 90.}}, 
              "Projection" -> "Equirectangular", "Software" -> 
              "Created with the Wolfram Language: www.wolfram.com", 
              "TileSources" -> {"Wolfram", "OSM"}|>|>], Selectable -> False], 
        DefaultBaseStyle -> "ImageGraphics", ImageSizeRaw -> {513., 256.}, 
        PlotRange -> {{0, 513.}, {0, 256.}}]], 
      PolygonBox[{{-188.3705, -90.}, {-188.3705, 90.}, {171.6295, 90.}, {
       171.6295, -90.}, {-188.3705, -90.}},
       VertexTextureCoordinates->{{0.00018574832142081998`, 0.}, {
        0.00018574832142081998`, 1.}, {0.9982364305826295, 1.}, {
        0.9982364305826295, 0.}, {0.00018574832142081998`, 0.}}]},
     Annotation[#, "GeoBackground", "WolframGeoGraphics"]& ], 
    TagBox[
     TagBox[
      TooltipBox[
       {Opacity[0], RectangleBox[Scaled[{0.8, 0}], Scaled[{1, 0.2}]]},
       TagBox[
        GridBox[{{
           StyleBox["\"Geo data sources\"", Bold, StripOnInput -> False]}, {
           
           TemplateBox[{
            "\"Wolfram Knowledgebase\"", "\" (\"", 
             "\"https://www.wolfram.com/\"", "\")\""}, "RowDefault"]}, {
           
           TemplateBox[{
            "\"\[Copyright] OpenStreetMap contributors\"", "\" (\"", 
             "\"https://www.openstreetmap.org/copyright\"", "\")\""}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
      Annotation[#, 
       Column[{
         Style["Geo data sources", Bold], 
         Row[{
          "Wolfram Knowledgebase", " (", "https://www.wolfram.com/", ")"}], 
         Row[{
          "\[Copyright] OpenStreetMap contributors", " (", 
           "https://www.openstreetmap.org/copyright", ")"}]}], "Tooltip"]& ],
     Annotation[#, "Metadata", "WolframGeoGraphics"]& ], {{{
       {RGBColor[0.790588, 0.201176, 0.], PointSize[Large], Opacity[1], 
        EdgeForm[{Opacity[0.4], Thickness[Tiny]}], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], {}, {}}, 
       {RGBColor[0.790588, 0.201176, 0.], PointSize[Large], Opacity[1], 
        EdgeForm[{Opacity[0.4], Thickness[Tiny]}], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         GraphicsBox[
          {RGBColor[0.790588, 0.201176, 0.], Thickness[Large], Opacity[1], 
           EdgeForm[None], DiskBox[{0, 0}]}], {117.88, -35.02}, Automatic, 
         Offset[6.272]], InsetBox[
         GraphicsBox[
          {RGBColor[0.790588, 0.201176, 0.], Thickness[Large], Opacity[1], 
           EdgeForm[None], DiskBox[{0, 0}]}], {35.33, 44.92}, Automatic, 
         Offset[6.272]], InsetBox[
         GraphicsBox[
          {RGBColor[0.790588, 0.201176, 0.], Thickness[Large], Opacity[1], 
           EdgeForm[None], DiskBox[{0, 0}]}], {159.62, -8.16}, Automatic, 
         Offset[6.272]], InsetBox[
         GraphicsBox[
          {RGBColor[0.790588, 0.201176, 0.], Thickness[Large], Opacity[1], 
           EdgeForm[None], DiskBox[{0, 0}]}], {26.830000000000002, 45.75}, 
         Automatic, Offset[6.272]], InsetBox[
         GraphicsBox[
          {RGBColor[0.790588, 0.201176, 0.], Thickness[Large], Opacity[1], 
           EdgeForm[None], DiskBox[{0, 0}]}], {-176.361, -44.027}, Automatic, 
         Offset[6.272]], InsetBox[
         GraphicsBox[
          {RGBColor[0.790588, 0.201176, 0.], Thickness[Large], Opacity[1], 
           EdgeForm[None], DiskBox[{0, 0}]}], {-109.9, 22.88}, Automatic, 
         Offset[6.272]], InsetBox[
         GraphicsBox[
          {RGBColor[0.790588, 0.201176, 0.], Thickness[Large], Opacity[1], 
           EdgeForm[None], DiskBox[{0, 0}]}], {-64.28, -27.8}, Automatic, 
         Offset[6.272]], InsetBox[
         GraphicsBox[
          {RGBColor[0.790588, 0.201176, 0.], Thickness[Large], Opacity[1], 
           EdgeForm[None], DiskBox[{0, 0}]}], {-165.83, -10.88}, Automatic, 
         Offset[6.272]], InsetBox[
         GraphicsBox[
          {RGBColor[0.790588, 0.201176, 0.], Thickness[Large], Opacity[1], 
           EdgeForm[None], DiskBox[{0, 0}]}], {96.83, -12.17}, Automatic, 
         Offset[6.272]], InsetBox[
         GraphicsBox[
          {RGBColor[0.790588, 0.201176, 0.], Thickness[Large], Opacity[1], 
           EdgeForm[None], DiskBox[{0, 0}]}], {-66.9, -4.87}, Automatic, 
         Offset[6.272]]}}, {{{}, {GraphicsGroupBox[{
           {EdgeForm[None], FaceForm[Opacity[0]], 
            PolygonBox[{
             Offset[{0., 6.217248937900877*^-15}, {-66.9, -4.87}], 
              Offset[{0., -12.999999999999993`}, {-66.9, -4.87}], 
              Offset[{-53., -13.000000000000007`}, {-66.9, -4.87}], 
              Offset[{-53., -6.217248937900877*^-15}, {-66.9, -4.87}]}]}, 
           {RGBColor[
            0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
            AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
            StyleBox[
             RotationBox["\<\"Carauari\"\>",
              BoxRotation->0.],
             StripOnInput->False,
             LineColor->GrayLevel[0],
             LineOpacity->1,
             FrontFaceColor->GrayLevel[0],
             BackFaceColor->GrayLevel[0],
             FrontFaceOpacity->1,
             BackFaceOpacity->1,
             GraphicsColor->GrayLevel[0],
             Opacity->1,
             FontWeight->Bold,
             FontColor->GrayLevel[0],
             FontOpacity->1], Offset[{-26.5, -6.5}, {-66.9, -4.87}], NCache[
            ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
             ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
           {EdgeForm[None], FaceForm[Opacity[0]], 
            PolygonBox[{
             Offset[{0., 18.000000000000007`}, {96.83, -12.17}], 
              Offset[{0., 7.105427357601002*^-15}, {96.83, -12.17}], 
              Offset[{-72., -7.105427357601002*^-15}, {96.83, -12.17}], 
              Offset[{-72., 17.999999999999993`}, {96.83, -12.17}]}]}, 
           {RGBColor[
            0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
            AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
            StyleBox[
             RotationBox["\<\"West Island\"\>",
              BoxRotation->0.],
             StripOnInput->False,
             LineColor->GrayLevel[0],
             LineOpacity->1,
             FrontFaceColor->GrayLevel[0],
             BackFaceColor->GrayLevel[0],
             FrontFaceOpacity->1,
             BackFaceOpacity->1,
             GraphicsColor->GrayLevel[0],
             Opacity->1,
             FontWeight->Bold,
             FontColor->GrayLevel[0],
             FontOpacity->1], Offset[{-36., 9.}, {96.83, -12.17}], NCache[
            ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
             ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
           {EdgeForm[None], FaceForm[Opacity[0]], 
            PolygonBox[{
             Offset[{32., 3.552713678800501*^-15}, {-165.83, -10.88}], 
              Offset[{32., -12.999999999999996`}, {-165.83, -10.88}], 
              Offset[{1.7763568394002505`*^-15, -13.000000000000004`}, \
{-165.83, -10.88}], 
              Offset[{0., -3.552713678800501*^-15}, {-165.83, -10.88}]}]}, 
           {RGBColor[
            0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
            AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
            StyleBox[
             RotationBox["\<\"Roto\"\>",
              BoxRotation->0.],
             StripOnInput->False,
             LineColor->GrayLevel[0],
             LineOpacity->1,
             FrontFaceColor->GrayLevel[0],
             BackFaceColor->GrayLevel[0],
             FrontFaceOpacity->1,
             BackFaceOpacity->1,
             GraphicsColor->GrayLevel[0],
             Opacity->1,
             FontWeight->Bold,
             FontColor->GrayLevel[0],
             FontOpacity->1], Offset[{16., -6.5}, {-165.83, -10.88}], NCache[
            ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
             ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
           {EdgeForm[None], FaceForm[Opacity[0]], 
            PolygonBox[{
             Offset[{58., 1.2434497875801753`*^-14}, {-64.28, -27.8}], 
              Offset[{58., -17.999999999999986`}, {-64.28, -27.8}], 
              Offset[{-58., -18.000000000000014`}, {-64.28, -27.8}], 
              Offset[{-58., -1.2434497875801753`*^-14}, {-64.28, -27.8}]}]}, 
           {RGBColor[
            0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
            AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
            StyleBox[
             RotationBox["\<\"Santiago del Estero\"\>",
              BoxRotation->0.],
             StripOnInput->False,
             LineColor->GrayLevel[0],
             LineOpacity->1,
             FrontFaceColor->GrayLevel[0],
             BackFaceColor->GrayLevel[0],
             FrontFaceOpacity->1,
             BackFaceOpacity->1,
             GraphicsColor->GrayLevel[0],
             Opacity->1,
             FontWeight->Bold,
             FontColor->GrayLevel[0],
             FontOpacity->1], Offset[{0., -9.}, {-64.28, -27.8}], NCache[
            ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
             ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
           {EdgeForm[None], FaceForm[Opacity[0]], 
            PolygonBox[{
             Offset[{94., 18.00000000000001}, {-109.9, 22.88}], 
              Offset[{94., 1.0658141036401503`*^-14}, {-109.9, 22.88}], 
              Offset[{0., -1.0658141036401503`*^-14}, {-109.9, 22.88}], 
              Offset[{0., 17.99999999999999}, {-109.9, 22.88}]}]}, 
           {RGBColor[
            0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
            AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
            StyleBox[
             RotationBox["\<\"Cabo San Lucas\"\>",
              BoxRotation->0.],
             StripOnInput->False,
             LineColor->GrayLevel[0],
             LineOpacity->1,
             FrontFaceColor->GrayLevel[0],
             BackFaceColor->GrayLevel[0],
             FrontFaceOpacity->1,
             BackFaceOpacity->1,
             GraphicsColor->GrayLevel[0],
             Opacity->1,
             FontWeight->Bold,
             FontColor->GrayLevel[0],
             FontOpacity->1], Offset[{47., 9.}, {-109.9, 22.88}], NCache[
            ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
             ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
           {EdgeForm[None], FaceForm[Opacity[0]], 
            PolygonBox[{
             Offset[{51., 15.000000000000005`}, {-176.361, -44.027}], 
              Offset[{51., 5.329070518200751*^-15}, {-176.361, -44.027}], 
              Offset[{0., -5.329070518200751*^-15}, {-176.361, -44.027}], 
              Offset[{0., 14.999999999999995`}, {-176.361, -44.027}]}]}, 
           {RGBColor[
            0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
            AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
            StyleBox[
             RotationBox["\<\"Owenga\"\>",
              BoxRotation->0.],
             StripOnInput->False,
             LineColor->GrayLevel[0],
             LineOpacity->1,
             FrontFaceColor->GrayLevel[0],
             BackFaceColor->GrayLevel[0],
             FrontFaceOpacity->1,
             BackFaceOpacity->1,
             GraphicsColor->GrayLevel[0],
             Opacity->1,
             FontWeight->Bold,
             FontColor->GrayLevel[0],
             FontOpacity->1], Offset[{25.5, 7.5}, {-176.361, -44.027}], 
            NCache[ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
             ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
           {EdgeForm[None], FaceForm[Opacity[0]], 
            PolygonBox[{
             Offset[{100., 18.00000000000001}, {26.830000000000002`, 45.75}], 
              Offset[{100., 1.0658141036401503`*^-14}, {26.830000000000002`, 
               45.75}], 
              Offset[{0., -1.0658141036401503`*^-14}, {26.830000000000002`, 
               45.75}], 
              Offset[{0., 17.99999999999999}, {26.830000000000002`, 
               45.75}]}]}, 
           {RGBColor[
            0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
            AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
            StyleBox[
             RotationBox["\<\"Andreiasu de Jos\"\>",
              BoxRotation->0.],
             StripOnInput->False,
             LineColor->GrayLevel[0],
             LineOpacity->1,
             FrontFaceColor->GrayLevel[0],
             BackFaceColor->GrayLevel[0],
             FrontFaceOpacity->1,
             BackFaceOpacity->1,
             GraphicsColor->GrayLevel[0],
             Opacity->1,
             FontWeight->Bold,
             FontColor->GrayLevel[0],
             FontOpacity->1], Offset[{50., 9.}, {26.830000000000002, 45.75}], 
            NCache[ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
             ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
           {EdgeForm[None], FaceForm[Opacity[0]], 
            PolygonBox[{
             Offset[{18.5, 13.000000000000004`}, {159.62, -8.16}], 
              Offset[{18.5, 4.440892098500626*^-15}, {159.62, -8.16}], 
              Offset[{-18.5, -4.440892098500626*^-15}, {159.62, -8.16}], 
              Offset[{-18.5, 12.999999999999996`}, {159.62, -8.16}]}]}, 
           {RGBColor[
            0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
            AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
            StyleBox[
             RotationBox["\<\"Buala\"\>",
              BoxRotation->0.],
             StripOnInput->False,
             LineColor->GrayLevel[0],
             LineOpacity->1,
             FrontFaceColor->GrayLevel[0],
             BackFaceColor->GrayLevel[0],
             FrontFaceOpacity->1,
             BackFaceOpacity->1,
             GraphicsColor->GrayLevel[0],
             Opacity->1,
             FontWeight->Bold,
             FontColor->GrayLevel[0],
             FontOpacity->1], Offset[{0., 6.5}, {159.62, -8.16}], NCache[
            ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
             ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
           {EdgeForm[None], FaceForm[Opacity[0]], 
            PolygonBox[{
             Offset[{86., 9.769962616701378*^-15}, {35.33, 44.92}], 
              Offset[{86., -12.99999999999999}, {35.33, 44.92}], 
              Offset[{0., -13.00000000000001}, {35.33, 44.92}], 
              Offset[{0., -9.769962616701378*^-15}, {35.33, 44.92}]}]}, 
           {RGBColor[
            0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
            AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
            StyleBox[
             RotationBox["\<\"Ordzhonikidze\"\>",
              BoxRotation->0.],
             StripOnInput->False,
             LineColor->GrayLevel[0],
             LineOpacity->1,
             FrontFaceColor->GrayLevel[0],
             BackFaceColor->GrayLevel[0],
             FrontFaceOpacity->1,
             BackFaceOpacity->1,
             GraphicsColor->GrayLevel[0],
             Opacity->1,
             FontWeight->Bold,
             FontColor->GrayLevel[0],
             FontOpacity->1], Offset[{43., -6.5}, {35.33, 44.92}], NCache[
            ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
             ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
           {EdgeForm[None], FaceForm[Opacity[0]], 
            PolygonBox[{
             Offset[{44., 15.000000000000005`}, {117.88, -35.02}], 
              Offset[{44., 5.329070518200751*^-15}, {117.88, -35.02}], 
              Offset[{0., -5.329070518200751*^-15}, {117.88, -35.02}], 
              Offset[{0., 14.999999999999995`}, {117.88, -35.02}]}]}, 
           {RGBColor[
            0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
            AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
            StyleBox[
             RotationBox["\<\"Albany\"\>",
              BoxRotation->0.],
             StripOnInput->False,
             LineColor->GrayLevel[0],
             LineOpacity->1,
             FrontFaceColor->GrayLevel[0],
             BackFaceColor->GrayLevel[0],
             FrontFaceOpacity->1,
             BackFaceOpacity->1,
             GraphicsColor->GrayLevel[0],
             Opacity->1,
             FontWeight->Bold,
             FontColor->GrayLevel[0],
             FontOpacity->1], Offset[{22., 7.5}, {117.88, -35.02}], NCache[
            ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
             ImageScaled[{0.5, 0.5}]]]}]}}, {}}}, 
     TagBox[{},
      Annotation[#, "GeoGridLines", "WolframGeoGraphics"]& ]}}, 
   TagBox[{},
    Annotation[#, "GeoScaleBar", "WolframGeoGraphics"]& ]},
  CoordinatesToolOptions:>{
   "DisplayFunction" -> (
     GeoGraphics`GeoGridPositionDisplay[#, "Equirectangular", "ITRF00"]& ), 
    "CopiedValueFunction" -> (
     GeoGraphics`GeoGridPositionCopiedValue[#, "Equirectangular", 
      "ITRF00"]& )},
  DefaultBaseStyle->"GeoGraphics",
  Method->{"VectorMapRemoveLabels" -> True, "OriginalInput" -> HoldForm[
      GeoGraphics[{
        GeoStyling[], {
         Directive[
          Opacity[1], 
          RGBColor[0.790588, 0.201176, 0.], 
          EdgeForm[
           Directive[
            Thickness[Tiny], 
            Opacity[0.4]]], 
          PointSize[Large], 
          FaceForm[{
            Opacity[0.5], 
            RGBColor[1., 0.607843, 0.]}]], {}, {}, 
         Directive[
          Opacity[1], 
          RGBColor[0.790588, 0.201176, 0.], 
          EdgeForm[
           Directive[
            Thickness[Tiny], 
            Opacity[0.4]]], 
          PointSize[Large], 
          FaceForm[{
            Opacity[0.5], 
            RGBColor[1., 0.607843, 0.]}]], {
          Inset[
           Graphics[{
             Directive[
              RGBColor[0.790588, 0.201176, 0.], 
              Opacity[1], 
              Thickness[Large]], 
             EdgeForm[], 
             Disk[{0, 0}]}], 
           GeoPosition[{-35.02, 117.88}], Automatic, 
           Offset[6.272]], 
          Inset[
           Graphics[{
             Directive[
              RGBColor[0.790588, 0.201176, 0.], 
              Opacity[1], 
              Thickness[Large]], 
             EdgeForm[], 
             Disk[{0, 0}]}], 
           GeoPosition[{44.92, 35.33}], Automatic, 
           Offset[6.272]], 
          Inset[
           Graphics[{
             Directive[
              RGBColor[0.790588, 0.201176, 0.], 
              Opacity[1], 
              Thickness[Large]], 
             EdgeForm[], 
             Disk[{0, 0}]}], 
           GeoPosition[{-8.16, 159.62}], Automatic, 
           Offset[6.272]], 
          Inset[
           Graphics[{
             Directive[
              RGBColor[0.790588, 0.201176, 0.], 
              Opacity[1], 
              Thickness[Large]], 
             EdgeForm[], 
             Disk[{0, 0}]}], 
           GeoPosition[{45.75, 26.830000000000002`}], Automatic, 
           Offset[6.272]], 
          Inset[
           Graphics[{
             Directive[
              RGBColor[0.790588, 0.201176, 0.], 
              Opacity[1], 
              Thickness[Large]], 
             EdgeForm[], 
             Disk[{0, 0}]}], 
           GeoPosition[{-44.027, -176.361}], Automatic, 
           Offset[6.272]], 
          Inset[
           Graphics[{
             Directive[
              RGBColor[0.790588, 0.201176, 0.], 
              Opacity[1], 
              Thickness[Large]], 
             EdgeForm[], 
             Disk[{0, 0}]}], 
           GeoPosition[{22.88, -109.9}], Automatic, 
           Offset[6.272]], 
          Inset[
           Graphics[{
             Directive[
              RGBColor[0.790588, 0.201176, 0.], 
              Opacity[1], 
              Thickness[Large]], 
             EdgeForm[], 
             Disk[{0, 0}]}], 
           GeoPosition[{-27.8, -64.28}], Automatic, 
           Offset[6.272]], 
          Inset[
           Graphics[{
             Directive[
              RGBColor[0.790588, 0.201176, 0.], 
              Opacity[1], 
              Thickness[Large]], 
             EdgeForm[], 
             Disk[{0, 0}]}], 
           GeoPosition[{-10.88, -165.83}], Automatic, 
           Offset[6.272]], 
          Inset[
           Graphics[{
             Directive[
              RGBColor[0.790588, 0.201176, 0.], 
              Opacity[1], 
              Thickness[Large]], 
             EdgeForm[], 
             Disk[{0, 0}]}], 
           GeoPosition[{-12.17, 96.83}], Automatic, 
           Offset[6.272]], 
          Inset[
           Graphics[{
             Directive[
              RGBColor[0.790588, 0.201176, 0.], 
              Opacity[1], 
              Thickness[Large]], 
             EdgeForm[], 
             Disk[{0, 0}]}], 
           GeoPosition[{-4.87, -66.9}], Automatic, 
           Offset[6.272]]}}, {{{}, {{
            GraphicsGroup[{{
               FaceForm[
                Directive[
                 Opacity[0]]], 
               EdgeForm[], 
               Polygon[{
                 Offset[{0., 6.217248937900877*^-15}, 
                  GeoPosition[{-4.87, -66.9}]], 
                 Offset[{0., -12.999999999999993`}, 
                  GeoPosition[{-4.87, -66.9}]], 
                 Offset[{-53., -13.000000000000007`}, 
                  GeoPosition[{-4.87, -66.9}]], 
                 Offset[{-53., -6.217248937900877*^-15}, 
                  GeoPosition[{-4.87, -66.9}]]}]}, {
               EdgeForm[], 
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.25]]}, {}, 
              Text[
               Style[
                Rotate["Carauari", 0], {FontWeight -> Bold, 
                 GrayLevel[0], 
                 Opacity[1]}], 
               Offset[{-26.5, -6.5}, 
                GeoPosition[{-4.87, -66.9}]], {0, 0}]}], 
            GraphicsGroup[{{
               FaceForm[
                Directive[
                 Opacity[0]]], 
               EdgeForm[], 
               Polygon[{
                 Offset[{0., 18.000000000000007`}, 
                  GeoPosition[{-12.17, 96.83}]], 
                 Offset[{0., 7.105427357601002*^-15}, 
                  GeoPosition[{-12.17, 96.83}]], 
                 Offset[{-72., -7.105427357601002*^-15}, 
                  GeoPosition[{-12.17, 96.83}]], 
                 Offset[{-72., 17.999999999999993`}, 
                  GeoPosition[{-12.17, 96.83}]]}]}, {
               EdgeForm[], 
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.25]]}, {}, 
              Text[
               Style[
                Rotate["West Island", 0], {FontWeight -> Bold, 
                 GrayLevel[0], 
                 Opacity[1]}], 
               Offset[{-36., 9.}, 
                GeoPosition[{-12.17, 96.83}]], {0, 0}]}], 
            GraphicsGroup[{{
               FaceForm[
                Directive[
                 Opacity[0]]], 
               EdgeForm[], 
               Polygon[{
                 Offset[{32., 3.552713678800501*^-15}, 
                  GeoPosition[{-10.88, -165.83}]], 
                 Offset[{32., -12.999999999999996`}, 
                  GeoPosition[{-10.88, -165.83}]], 
                 Offset[{1.7763568394002505`*^-15, -13.000000000000004`}, 
                  GeoPosition[{-10.88, -165.83}]], 
                 Offset[{0., -3.552713678800501*^-15}, 
                  GeoPosition[{-10.88, -165.83}]]}]}, {
               EdgeForm[], 
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.25]]}, {}, 
              Text[
               Style[
                Rotate["Roto", 0], {FontWeight -> Bold, 
                 GrayLevel[0], 
                 Opacity[1]}], 
               Offset[{16., -6.5}, 
                GeoPosition[{-10.88, -165.83}]], {0, 0}]}], 
            GraphicsGroup[{{
               FaceForm[
                Directive[
                 Opacity[0]]], 
               EdgeForm[], 
               Polygon[{
                 Offset[{58., 1.2434497875801753`*^-14}, 
                  GeoPosition[{-27.8, -64.28}]], 
                 Offset[{58., -17.999999999999986`}, 
                  GeoPosition[{-27.8, -64.28}]], 
                 Offset[{-58., -18.000000000000014`}, 
                  GeoPosition[{-27.8, -64.28}]], 
                 Offset[{-58., -1.2434497875801753`*^-14}, 
                  GeoPosition[{-27.8, -64.28}]]}]}, {
               EdgeForm[], 
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.25]]}, {}, 
              Text[
               Style[
                Rotate["Santiago del Estero", 0], {FontWeight -> Bold, 
                 GrayLevel[0], 
                 Opacity[1]}], 
               Offset[{0., -9.}, 
                GeoPosition[{-27.8, -64.28}]], {0, 0}]}], 
            GraphicsGroup[{{
               FaceForm[
                Directive[
                 Opacity[0]]], 
               EdgeForm[], 
               Polygon[{
                 Offset[{94., 18.00000000000001}, 
                  GeoPosition[{22.88, -109.9}]], 
                 Offset[{94., 1.0658141036401503`*^-14}, 
                  GeoPosition[{22.88, -109.9}]], 
                 Offset[{0., -1.0658141036401503`*^-14}, 
                  GeoPosition[{22.88, -109.9}]], 
                 Offset[{0., 17.99999999999999}, 
                  GeoPosition[{22.88, -109.9}]]}]}, {
               EdgeForm[], 
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.25]]}, {}, 
              Text[
               Style[
                Rotate["Cabo San Lucas", 0], {FontWeight -> Bold, 
                 GrayLevel[0], 
                 Opacity[1]}], 
               Offset[{47., 9.}, 
                GeoPosition[{22.88, -109.9}]], {0, 0}]}], 
            GraphicsGroup[{{
               FaceForm[
                Directive[
                 Opacity[0]]], 
               EdgeForm[], 
               Polygon[{
                 Offset[{51., 15.000000000000005`}, 
                  GeoPosition[{-44.027, -176.361}]], 
                 Offset[{51., 5.329070518200751*^-15}, 
                  GeoPosition[{-44.027, -176.361}]], 
                 Offset[{0., -5.329070518200751*^-15}, 
                  GeoPosition[{-44.027, -176.361}]], 
                 Offset[{0., 14.999999999999995`}, 
                  GeoPosition[{-44.027, -176.361}]]}]}, {
               EdgeForm[], 
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.25]]}, {}, 
              Text[
               Style[
                Rotate["Owenga", 0], {FontWeight -> Bold, 
                 GrayLevel[0], 
                 Opacity[1]}], 
               Offset[{25.5, 7.5}, 
                GeoPosition[{-44.027, -176.361}]], {0, 0}]}], 
            GraphicsGroup[{{
               FaceForm[
                Directive[
                 Opacity[0]]], 
               EdgeForm[], 
               Polygon[{
                 Offset[{100., 18.00000000000001}, 
                  GeoPosition[{45.75, 26.830000000000002`}]], 
                 Offset[{100., 1.0658141036401503`*^-14}, 
                  GeoPosition[{45.75, 26.830000000000002`}]], 
                 Offset[{0., -1.0658141036401503`*^-14}, 
                  GeoPosition[{45.75, 26.830000000000002`}]], 
                 Offset[{0., 17.99999999999999}, 
                  GeoPosition[{45.75, 26.830000000000002`}]]}]}, {
               EdgeForm[], 
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.25]]}, {}, 
              Text[
               Style[
                Rotate["Andreiasu de Jos", 0], {FontWeight -> Bold, 
                 GrayLevel[0], 
                 Opacity[1]}], 
               Offset[{50., 9.}, 
                GeoPosition[{45.75, 26.830000000000002`}]], {0, 0}]}], 
            GraphicsGroup[{{
               FaceForm[
                Directive[
                 Opacity[0]]], 
               EdgeForm[], 
               Polygon[{
                 Offset[{18.5, 13.000000000000004`}, 
                  GeoPosition[{-8.16, 159.62}]], 
                 Offset[{18.5, 4.440892098500626*^-15}, 
                  GeoPosition[{-8.16, 159.62}]], 
                 Offset[{-18.5, -4.440892098500626*^-15}, 
                  GeoPosition[{-8.16, 159.62}]], 
                 Offset[{-18.5, 12.999999999999996`}, 
                  GeoPosition[{-8.16, 159.62}]]}]}, {
               EdgeForm[], 
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.25]]}, {}, 
              Text[
               Style[
                Rotate["Buala", 0], {FontWeight -> Bold, 
                 GrayLevel[0], 
                 Opacity[1]}], 
               Offset[{0., 6.5}, 
                GeoPosition[{-8.16, 159.62}]], {0, 0}]}], 
            GraphicsGroup[{{
               FaceForm[
                Directive[
                 Opacity[0]]], 
               EdgeForm[], 
               Polygon[{
                 Offset[{86., 9.769962616701378*^-15}, 
                  GeoPosition[{44.92, 35.33}]], 
                 Offset[{86., -12.99999999999999}, 
                  GeoPosition[{44.92, 35.33}]], 
                 Offset[{0., -13.00000000000001}, 
                  GeoPosition[{44.92, 35.33}]], 
                 Offset[{0., -9.769962616701378*^-15}, 
                  GeoPosition[{44.92, 35.33}]]}]}, {
               EdgeForm[], 
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.25]]}, {}, 
              Text[
               Style[
                Rotate["Ordzhonikidze", 0], {FontWeight -> Bold, 
                 GrayLevel[0], 
                 Opacity[1]}], 
               Offset[{43., -6.5}, 
                GeoPosition[{44.92, 35.33}]], {0, 0}]}], 
            GraphicsGroup[{{
               FaceForm[
                Directive[
                 Opacity[0]]], 
               EdgeForm[], 
               Polygon[{
                 Offset[{44., 15.000000000000005`}, 
                  GeoPosition[{-35.02, 117.88}]], 
                 Offset[{44., 5.329070518200751*^-15}, 
                  GeoPosition[{-35.02, 117.88}]], 
                 Offset[{0., -5.329070518200751*^-15}, 
                  GeoPosition[{-35.02, 117.88}]], 
                 Offset[{0., 14.999999999999995`}, 
                  GeoPosition[{-35.02, 117.88}]]}]}, {
               EdgeForm[], 
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.25]]}, {}, 
              Text[
               Style[
                Rotate["Albany", 0], {FontWeight -> Bold, 
                 GrayLevel[0], 
                 Opacity[1]}], 
               Offset[{22., 7.5}, 
                GeoPosition[{-35.02, 117.88}]], {0, 0}]}]}}}, {}}}, {
       GeoBackground -> GeoStyling["GeoPlotMap"], 
        Method -> {"VectorMapRemoveLabels" -> True}}]], 
    "BasicGeoRange" -> {{-44.027, 45.75}, {-176.36100000000002`, 
     159.62000000000003`}}, "OriginalInput" -> HoldForm[
      GeoGraphics[{
        GeoStyling[], {
         Directive[
          Opacity[1], 
          RGBColor[0.790588, 0.201176, 0.], 
          EdgeForm[
           Directive[
            Thickness[Tiny], 
            Opacity[0.4]]], 
          PointSize[Large], 
          FaceForm[{
            Opacity[0.5], 
            RGBColor[1., 0.607843, 0.]}]], {}, {}, 
         Directive[
          Opacity[1], 
          RGBColor[0.790588, 0.201176, 0.], 
          EdgeForm[
           Directive[
            Thickness[Tiny], 
            Opacity[0.4]]], 
          PointSize[Large], 
          FaceForm[{
            Opacity[0.5], 
            RGBColor[1., 0.607843, 0.]}]], {
          Inset[
           Graphics[{
             Directive[
              RGBColor[0.790588, 0.201176, 0.], 
              Opacity[1], 
              Thickness[Large]], 
             EdgeForm[], 
             Disk[{0, 0}]}], 
           GeoPosition[{-35.02, 117.88}], Automatic, 
           Offset[6.272]], 
          Inset[
           Graphics[{
             Directive[
              RGBColor[0.790588, 0.201176, 0.], 
              Opacity[1], 
              Thickness[Large]], 
             EdgeForm[], 
             Disk[{0, 0}]}], 
           GeoPosition[{44.92, 35.33}], Automatic, 
           Offset[6.272]], 
          Inset[
           Graphics[{
             Directive[
              RGBColor[0.790588, 0.201176, 0.], 
              Opacity[1], 
              Thickness[Large]], 
             EdgeForm[], 
             Disk[{0, 0}]}], 
           GeoPosition[{-8.16, 159.62}], Automatic, 
           Offset[6.272]], 
          Inset[
           Graphics[{
             Directive[
              RGBColor[0.790588, 0.201176, 0.], 
              Opacity[1], 
              Thickness[Large]], 
             EdgeForm[], 
             Disk[{0, 0}]}], 
           GeoPosition[{45.75, 26.830000000000002`}], Automatic, 
           Offset[6.272]], 
          Inset[
           Graphics[{
             Directive[
              RGBColor[0.790588, 0.201176, 0.], 
              Opacity[1], 
              Thickness[Large]], 
             EdgeForm[], 
             Disk[{0, 0}]}], 
           GeoPosition[{-44.027, -176.361}], Automatic, 
           Offset[6.272]], 
          Inset[
           Graphics[{
             Directive[
              RGBColor[0.790588, 0.201176, 0.], 
              Opacity[1], 
              Thickness[Large]], 
             EdgeForm[], 
             Disk[{0, 0}]}], 
           GeoPosition[{22.88, -109.9}], Automatic, 
           Offset[6.272]], 
          Inset[
           Graphics[{
             Directive[
              RGBColor[0.790588, 0.201176, 0.], 
              Opacity[1], 
              Thickness[Large]], 
             EdgeForm[], 
             Disk[{0, 0}]}], 
           GeoPosition[{-27.8, -64.28}], Automatic, 
           Offset[6.272]], 
          Inset[
           Graphics[{
             Directive[
              RGBColor[0.790588, 0.201176, 0.], 
              Opacity[1], 
              Thickness[Large]], 
             EdgeForm[], 
             Disk[{0, 0}]}], 
           GeoPosition[{-10.88, -165.83}], Automatic, 
           Offset[6.272]], 
          Inset[
           Graphics[{
             Directive[
              RGBColor[0.790588, 0.201176, 0.], 
              Opacity[1], 
              Thickness[Large]], 
             EdgeForm[], 
             Disk[{0, 0}]}], 
           GeoPosition[{-12.17, 96.83}], Automatic, 
           Offset[6.272]], 
          Inset[
           Graphics[{
             Directive[
              RGBColor[0.790588, 0.201176, 0.], 
              Opacity[1], 
              Thickness[Large]], 
             EdgeForm[], 
             Disk[{0, 0}]}], 
           GeoPosition[{-4.87, -66.9}], Automatic, 
           Offset[6.272]]}}, {{{}, {{
            GraphicsGroup[{{
               FaceForm[
                Directive[
                 Opacity[0]]], 
               EdgeForm[], 
               Polygon[{
                 Offset[{0., 6.217248937900877*^-15}, 
                  GeoPosition[{-4.87, -66.9}]], 
                 Offset[{0., -12.999999999999993`}, 
                  GeoPosition[{-4.87, -66.9}]], 
                 Offset[{-53., -13.000000000000007`}, 
                  GeoPosition[{-4.87, -66.9}]], 
                 Offset[{-53., -6.217248937900877*^-15}, 
                  GeoPosition[{-4.87, -66.9}]]}]}, {
               EdgeForm[], 
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.25]]}, {}, 
              Text[
               Style[
                Rotate["Carauari", 0], {FontWeight -> Bold, 
                 GrayLevel[0], 
                 Opacity[1]}], 
               Offset[{-26.5, -6.5}, 
                GeoPosition[{-4.87, -66.9}]], {0, 0}]}], 
            GraphicsGroup[{{
               FaceForm[
                Directive[
                 Opacity[0]]], 
               EdgeForm[], 
               Polygon[{
                 Offset[{0., 18.000000000000007`}, 
                  GeoPosition[{-12.17, 96.83}]], 
                 Offset[{0., 7.105427357601002*^-15}, 
                  GeoPosition[{-12.17, 96.83}]], 
                 Offset[{-72., -7.105427357601002*^-15}, 
                  GeoPosition[{-12.17, 96.83}]], 
                 Offset[{-72., 17.999999999999993`}, 
                  GeoPosition[{-12.17, 96.83}]]}]}, {
               EdgeForm[], 
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.25]]}, {}, 
              Text[
               Style[
                Rotate["West Island", 0], {FontWeight -> Bold, 
                 GrayLevel[0], 
                 Opacity[1]}], 
               Offset[{-36., 9.}, 
                GeoPosition[{-12.17, 96.83}]], {0, 0}]}], 
            GraphicsGroup[{{
               FaceForm[
                Directive[
                 Opacity[0]]], 
               EdgeForm[], 
               Polygon[{
                 Offset[{32., 3.552713678800501*^-15}, 
                  GeoPosition[{-10.88, -165.83}]], 
                 Offset[{32., -12.999999999999996`}, 
                  GeoPosition[{-10.88, -165.83}]], 
                 Offset[{1.7763568394002505`*^-15, -13.000000000000004`}, 
                  GeoPosition[{-10.88, -165.83}]], 
                 Offset[{0., -3.552713678800501*^-15}, 
                  GeoPosition[{-10.88, -165.83}]]}]}, {
               EdgeForm[], 
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.25]]}, {}, 
              Text[
               Style[
                Rotate["Roto", 0], {FontWeight -> Bold, 
                 GrayLevel[0], 
                 Opacity[1]}], 
               Offset[{16., -6.5}, 
                GeoPosition[{-10.88, -165.83}]], {0, 0}]}], 
            GraphicsGroup[{{
               FaceForm[
                Directive[
                 Opacity[0]]], 
               EdgeForm[], 
               Polygon[{
                 Offset[{58., 1.2434497875801753`*^-14}, 
                  GeoPosition[{-27.8, -64.28}]], 
                 Offset[{58., -17.999999999999986`}, 
                  GeoPosition[{-27.8, -64.28}]], 
                 Offset[{-58., -18.000000000000014`}, 
                  GeoPosition[{-27.8, -64.28}]], 
                 Offset[{-58., -1.2434497875801753`*^-14}, 
                  GeoPosition[{-27.8, -64.28}]]}]}, {
               EdgeForm[], 
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.25]]}, {}, 
              Text[
               Style[
                Rotate["Santiago del Estero", 0], {FontWeight -> Bold, 
                 GrayLevel[0], 
                 Opacity[1]}], 
               Offset[{0., -9.}, 
                GeoPosition[{-27.8, -64.28}]], {0, 0}]}], 
            GraphicsGroup[{{
               FaceForm[
                Directive[
                 Opacity[0]]], 
               EdgeForm[], 
               Polygon[{
                 Offset[{94., 18.00000000000001}, 
                  GeoPosition[{22.88, -109.9}]], 
                 Offset[{94., 1.0658141036401503`*^-14}, 
                  GeoPosition[{22.88, -109.9}]], 
                 Offset[{0., -1.0658141036401503`*^-14}, 
                  GeoPosition[{22.88, -109.9}]], 
                 Offset[{0., 17.99999999999999}, 
                  GeoPosition[{22.88, -109.9}]]}]}, {
               EdgeForm[], 
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.25]]}, {}, 
              Text[
               Style[
                Rotate["Cabo San Lucas", 0], {FontWeight -> Bold, 
                 GrayLevel[0], 
                 Opacity[1]}], 
               Offset[{47., 9.}, 
                GeoPosition[{22.88, -109.9}]], {0, 0}]}], 
            GraphicsGroup[{{
               FaceForm[
                Directive[
                 Opacity[0]]], 
               EdgeForm[], 
               Polygon[{
                 Offset[{51., 15.000000000000005`}, 
                  GeoPosition[{-44.027, -176.361}]], 
                 Offset[{51., 5.329070518200751*^-15}, 
                  GeoPosition[{-44.027, -176.361}]], 
                 Offset[{0., -5.329070518200751*^-15}, 
                  GeoPosition[{-44.027, -176.361}]], 
                 Offset[{0., 14.999999999999995`}, 
                  GeoPosition[{-44.027, -176.361}]]}]}, {
               EdgeForm[], 
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.25]]}, {}, 
              Text[
               Style[
                Rotate["Owenga", 0], {FontWeight -> Bold, 
                 GrayLevel[0], 
                 Opacity[1]}], 
               Offset[{25.5, 7.5}, 
                GeoPosition[{-44.027, -176.361}]], {0, 0}]}], 
            GraphicsGroup[{{
               FaceForm[
                Directive[
                 Opacity[0]]], 
               EdgeForm[], 
               Polygon[{
                 Offset[{100., 18.00000000000001}, 
                  GeoPosition[{45.75, 26.830000000000002`}]], 
                 Offset[{100., 1.0658141036401503`*^-14}, 
                  GeoPosition[{45.75, 26.830000000000002`}]], 
                 Offset[{0., -1.0658141036401503`*^-14}, 
                  GeoPosition[{45.75, 26.830000000000002`}]], 
                 Offset[{0., 17.99999999999999}, 
                  GeoPosition[{45.75, 26.830000000000002`}]]}]}, {
               EdgeForm[], 
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.25]]}, {}, 
              Text[
               Style[
                Rotate["Andreiasu de Jos", 0], {FontWeight -> Bold, 
                 GrayLevel[0], 
                 Opacity[1]}], 
               Offset[{50., 9.}, 
                GeoPosition[{45.75, 26.830000000000002`}]], {0, 0}]}], 
            GraphicsGroup[{{
               FaceForm[
                Directive[
                 Opacity[0]]], 
               EdgeForm[], 
               Polygon[{
                 Offset[{18.5, 13.000000000000004`}, 
                  GeoPosition[{-8.16, 159.62}]], 
                 Offset[{18.5, 4.440892098500626*^-15}, 
                  GeoPosition[{-8.16, 159.62}]], 
                 Offset[{-18.5, -4.440892098500626*^-15}, 
                  GeoPosition[{-8.16, 159.62}]], 
                 Offset[{-18.5, 12.999999999999996`}, 
                  GeoPosition[{-8.16, 159.62}]]}]}, {
               EdgeForm[], 
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.25]]}, {}, 
              Text[
               Style[
                Rotate["Buala", 0], {FontWeight -> Bold, 
                 GrayLevel[0], 
                 Opacity[1]}], 
               Offset[{0., 6.5}, 
                GeoPosition[{-8.16, 159.62}]], {0, 0}]}], 
            GraphicsGroup[{{
               FaceForm[
                Directive[
                 Opacity[0]]], 
               EdgeForm[], 
               Polygon[{
                 Offset[{86., 9.769962616701378*^-15}, 
                  GeoPosition[{44.92, 35.33}]], 
                 Offset[{86., -12.99999999999999}, 
                  GeoPosition[{44.92, 35.33}]], 
                 Offset[{0., -13.00000000000001}, 
                  GeoPosition[{44.92, 35.33}]], 
                 Offset[{0., -9.769962616701378*^-15}, 
                  GeoPosition[{44.92, 35.33}]]}]}, {
               EdgeForm[], 
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.25]]}, {}, 
              Text[
               Style[
                Rotate["Ordzhonikidze", 0], {FontWeight -> Bold, 
                 GrayLevel[0], 
                 Opacity[1]}], 
               Offset[{43., -6.5}, 
                GeoPosition[{44.92, 35.33}]], {0, 0}]}], 
            GraphicsGroup[{{
               FaceForm[
                Directive[
                 Opacity[0]]], 
               EdgeForm[], 
               Polygon[{
                 Offset[{44., 15.000000000000005`}, 
                  GeoPosition[{-35.02, 117.88}]], 
                 Offset[{44., 5.329070518200751*^-15}, 
                  GeoPosition[{-35.02, 117.88}]], 
                 Offset[{0., -5.329070518200751*^-15}, 
                  GeoPosition[{-35.02, 117.88}]], 
                 Offset[{0., 14.999999999999995`}, 
                  GeoPosition[{-35.02, 117.88}]]}]}, {
               EdgeForm[], 
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.25]]}, {}, 
              Text[
               Style[
                Rotate["Albany", 0], {FontWeight -> Bold, 
                 GrayLevel[0], 
                 Opacity[1]}], 
               Offset[{22., 7.5}, 
                GeoPosition[{-35.02, 117.88}]], {0, 0}]}]}}}, {}}}, {
       GeoBackground -> GeoStyling["GeoPlotMap"], 
        Method -> {"VectorMapRemoveLabels" -> True}}]], 
    "BasicGeoRange" -> {{-90., 90}, {-188.3705, 171.6295}}, 
    "GeoGraphicsOptions" -> {
     GeoBackground -> GeoStyling["StreetMapNoLabels"], GeoCenter -> 
      GeoPosition[{0., -8.370499999999993}], GeoGridLines -> None, 
      GeoGridLinesStyle -> GrayLevel[0.4, 0.3], 
      GeoGridRange -> {{-188.3705, 171.6295}, {-90., 90.}}, 
      GeoGridRangePadding -> None, GeoModel -> "ITRF00", GeoProjection -> 
      "Equirectangular", GeoRange -> {{-90., 90.}, {-188.3705, 171.6295}}, 
      GeoRangePadding -> Full, GeoResolution -> Automatic, 
      GeoServer -> {Automatic}, GeoZoomLevel -> 1, 
      MetaInformation -> <|"GeoMetaInformation" -> <|"Attribution" -> Row[{
             Hyperlink["Wolfram Knowledgebase", "https://www.wolfram.com/"], 
             ", ", 
             Hyperlink[
             "\[Copyright] OpenStreetMap contributors", 
              "https://www.openstreetmap.org/copyright"]}], "GeoModel" -> 
          "ITRF00", "LonLatBox" -> {{-188.3705, 171.6295}, {-90., 90}}, 
          "PlotRange" -> {{-188.4375, 172.265625}, {-90., 90.}}, "Projection" -> 
          "Equirectangular", "Software" -> 
          "Created with the Wolfram Language: www.wolfram.com", 
          "TileSources" -> {"Wolfram", "OSM"}|>|>}},
  PlotRange->{{-188.3705, 171.6295}, {-90., 90.}},
  PlotRangeClipping->True,
  PlotRangePadding->None]], "Output",
 CellChangeTimes->{3.936867678071908*^9, 3.936867948815505*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"88602975-e656-4246-b78d-7373c8442457"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{684.75, 762.},
WindowMargins->{{Automatic, 0}, {0, Automatic}},
TaggingRules-><|"TryRealOnly" -> False|>,
FrontEndVersion->"13.1 for Linux x86 (64-bit) (June 16, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"93c64129-1d59-4ff9-8b8d-02b5935400c7"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 150, 3, 68, "Section",ExpressionUUID->"c7395808-00b9-44e7-b2b4-475c364c9325"],
Cell[733, 27, 934, 13, 38, "CodeText",ExpressionUUID->"849d7174-d0da-438a-b28d-4780b381c153"],
Cell[CellGroupData[{
Cell[1692, 44, 1177, 23, 29, "Input",ExpressionUUID->"cd2835e9-65f6-4253-b6b5-3b7a0f75847f"],
Cell[2872, 69, 28498, 519, 117, "Output",ExpressionUUID->"a215b6fd-22dd-43d2-ae33-bc5676cbce47"]
}, Open  ]],
Cell[31385, 591, 987, 14, 38, "CodeText",ExpressionUUID->"d286bcef-25e5-436e-848b-57f3c33ef549"],
Cell[CellGroupData[{
Cell[32397, 609, 349, 5, 29, "Input",ExpressionUUID->"9c98bdfe-bbf1-4f7c-bdb9-91f8673a1494"],
Cell[32749, 616, 649, 15, 33, "Output",ExpressionUUID->"9133e845-d099-4e74-89d0-4672150e396e"]
}, Open  ]],
Cell[33413, 634, 1028, 14, 38, "CodeText",ExpressionUUID->"4e78c492-55ed-4227-be8c-4b129ebc25cf"],
Cell[CellGroupData[{
Cell[34466, 652, 629, 17, 29, "Input",ExpressionUUID->"defa2ed9-9f16-4459-9663-066883078784"],
Cell[35098, 671, 260, 5, 33, "Output",ExpressionUUID->"5b7202de-6488-4acf-b436-3064eb8a8e48"]
}, Open  ]],
Cell[35373, 679, 1105, 17, 38, "CodeText",ExpressionUUID->"35ce2d57-df77-434a-a50d-d75767b84ba9"],
Cell[CellGroupData[{
Cell[36503, 700, 283, 6, 29, "Input",ExpressionUUID->"cdd2d8f1-dabf-4b1c-ae2b-e17ec60b2331"],
Cell[36789, 708, 256, 5, 33, "Output",ExpressionUUID->"0dc5ac50-5278-42f7-aec4-e95d43d26080"]
}, Open  ]],
Cell[37060, 716, 1154, 18, 38, "CodeText",ExpressionUUID->"047d07d9-e3b2-4d9c-b16c-d1656340897b"],
Cell[CellGroupData[{
Cell[38239, 738, 328, 6, 29, "Input",ExpressionUUID->"30efa6eb-83c1-43b9-ba0d-321494220d86"],
Cell[38570, 746, 281, 6, 33, "Output",ExpressionUUID->"08ff1397-cf1c-4f40-9c3c-602ecb426aab"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[38900, 758, 156, 3, 68, "Section",ExpressionUUID->"412ba78e-200d-42a7-a8a0-21db1e445122"],
Cell[CellGroupData[{
Cell[39081, 765, 267, 5, 29, "Input",ExpressionUUID->"f1bc10fe-e140-4287-96c0-666f9022b64c"],
Cell[39351, 772, 149602, 2921, 521, "Output",ExpressionUUID->"c0493922-a6d4-43c3-8b2e-9c4c0a4c3551"]
}, Open  ]],
Cell[188968, 3696, 701, 12, 38, "CodeText",ExpressionUUID->"884f091f-7369-499f-8995-ab333a48e82a"],
Cell[CellGroupData[{
Cell[189694, 3712, 334, 7, 29, "Input",ExpressionUUID->"3b155c64-b3f8-419c-a206-a2d085530ae6"],
Cell[190031, 3721, 1975, 46, 263, "Output",ExpressionUUID->"1d9d8aed-609e-4bd8-8274-487e78e71b23"]
}, Open  ]],
Cell[192021, 3770, 646, 10, 38, "CodeText",ExpressionUUID->"e5039219-650d-45c3-90b2-144bb22f0edf"],
Cell[CellGroupData[{
Cell[192692, 3784, 461, 9, 29, "Input",ExpressionUUID->"3674a0b2-df8f-47ad-b5f0-3a580da14918"],
Cell[193156, 3795, 12174, 309, 336, "Output",ExpressionUUID->"16285bcb-c7af-4595-a21b-83bfb69d0076"]
}, Open  ]],
Cell[205345, 4107, 769, 13, 38, "CodeText",ExpressionUUID->"23456585-1a1f-437a-b117-66bd5158c5f2"],
Cell[CellGroupData[{
Cell[206139, 4124, 1200, 20, 29, "Input",ExpressionUUID->"a442f6b8-0bf0-4d62-8439-2daf2cbe50bf"],
Cell[207342, 4146, 38347, 702, 252, "Output",ExpressionUUID->"db42f723-744c-4ce5-a6ab-74164e4cca73"]
}, Open  ]],
Cell[245704, 4851, 779, 13, 38, "CodeText",ExpressionUUID->"b3de28a9-180c-4b1b-b42b-8cf9b6079e85"],
Cell[CellGroupData[{
Cell[246508, 4868, 453, 8, 29, "Input",ExpressionUUID->"ac45c90d-629b-46af-8dcf-4bcf0228b9ef"],
Cell[246964, 4878, 40471, 757, 252, "Output",ExpressionUUID->"b3bb30de-8fe6-4412-aee6-dac9fd079020"]
}, Open  ]],
Cell[287450, 5638, 763, 12, 59, "CodeText",ExpressionUUID->"2e9deab5-d1f3-460a-ae7a-01b1a4efdafd"],
Cell[CellGroupData[{
Cell[288238, 5654, 459, 9, 29, "Input",ExpressionUUID->"cd8e4d79-46aa-42a3-94b2-18a37ef2d1f8"],
Cell[288700, 5665, 38267, 700, 252, "Output",ExpressionUUID->"ebcb919c-c63d-4bf3-836e-3f0f69a64152"]
}, Open  ]],
Cell[326982, 6368, 750, 12, 38, "CodeText",ExpressionUUID->"bfa531d0-8c77-4ec0-8090-6e1158c10607"],
Cell[CellGroupData[{
Cell[327757, 6384, 633, 13, 29, "Input",ExpressionUUID->"3b9abb45-1c92-4b08-b667-4a08eaa64764"],
Cell[328393, 6399, 40131, 747, 252, "Output",ExpressionUUID->"73a5528e-85a9-46c0-a8d5-14060260777f"]
}, Open  ]],
Cell[368539, 7149, 745, 13, 38, "CodeText",ExpressionUUID->"b044dfc6-176e-4aa2-aec7-0c5f92e269df"],
Cell[CellGroupData[{
Cell[369309, 7166, 1280, 23, 51, "Input",ExpressionUUID->"9b73ec82-d99e-46d7-b8de-a9db4a37da97"],
Cell[370592, 7191, 42564, 774, 252, "Output",ExpressionUUID->"62407690-5126-4e42-bbb7-6ff3d51950c5"]
}, Open  ]],
Cell[413171, 7968, 838, 13, 59, "CodeText",ExpressionUUID->"efbcf4dc-c64e-4cfc-9030-f237d2f42761"],
Cell[CellGroupData[{
Cell[414034, 7985, 1584, 29, 94, "Input",ExpressionUUID->"418547b3-9636-48f3-8f38-4f26e78aa16e"],
Cell[415621, 8016, 2374, 54, 275, "Output",ExpressionUUID->"d56a9fa0-05bd-4bfd-8eef-7895dccb754b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[418032, 8075, 272, 5, 33, "Input",ExpressionUUID->"c0b8b638-efed-4591-8e3d-02056595680c"],
Cell[418307, 8082, 237764, 4501, 624, "Output",ExpressionUUID->"1f7eb8cd-4c98-4b6d-81ed-9fdd909f23bc"]
}, Open  ]],
Cell[656086, 12586, 883, 15, 38, "CodeText",ExpressionUUID->"314ea4e1-6d30-4567-8ef8-726c01f2fdd8"],
Cell[CellGroupData[{
Cell[656994, 12605, 247, 4, 29, "Input",ExpressionUUID->"d5436d34-fbe0-42ce-9acf-8b0bc5990c3a"],
Cell[657244, 12611, 226, 4, 44, "Output",ExpressionUUID->"3f3c4f7f-328c-425c-a259-ffe63a18508e"]
}, Open  ]],
Cell[657485, 12618, 884, 15, 38, "CodeText",ExpressionUUID->"7dd442ac-b03b-4b8e-ad5c-71dd03a5efe9"],
Cell[CellGroupData[{
Cell[658394, 12637, 338, 7, 29, "Input",ExpressionUUID->"fe4b8eb8-a617-48b3-9886-be456e607ce3"],
Cell[658735, 12646, 22375, 403, 171, "Output",ExpressionUUID->"e156117e-15d8-43d8-a8e4-5ef70a05240f"]
}, Open  ]],
Cell[681125, 13052, 929, 15, 59, "CodeText",ExpressionUUID->"df1c421d-41fe-4f5f-b811-a6c53f8a7e70"],
Cell[CellGroupData[{
Cell[682079, 13071, 456, 10, 77, "Input",ExpressionUUID->"2cd31054-31d5-4478-b072-d15b84e26889"],
Cell[682538, 13083, 7173, 213, 241, "Output",ExpressionUUID->"f13b1487-ff19-46bc-bd78-8a74f821584e"]
}, Open  ]],
Cell[689726, 13299, 948, 15, 59, "CodeText",ExpressionUUID->"c5e94318-caa9-4c92-ae7c-6bda2987be24"],
Cell[CellGroupData[{
Cell[690699, 13318, 425, 9, 29, "Input",ExpressionUUID->"95e834fb-6228-4154-87ed-59eff22f9c4d"],
Cell[691127, 13329, 138770, 2681, 227, 77380, 1674, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"4f10633d-94b9-4bc0-8e1b-ac8280f5b64b"]
}, Open  ]],
Cell[829912, 16013, 939, 15, 59, "CodeText",ExpressionUUID->"248e4ff3-2d0b-4b90-ba86-83c46ebef902"],
Cell[CellGroupData[{
Cell[830876, 16032, 505, 12, 51, "Input",ExpressionUUID->"d55274c8-d717-4066-a37f-6b9a05b0319a"],
Cell[831384, 16046, 74764, 1606, 250, "Output",ExpressionUUID->"88602975-e656-4246-b78d-7373c8442457"]
}, Open  ]]
}, Open  ]]
}
]
*)

